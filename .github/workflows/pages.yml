# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ master, main ]
    paths:
      - 'docs/**'
      - 'juneau-*/**'
      - 'pom.xml'
      - '.github/workflows/pages.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the in-progress run and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Juneau
        run: |
          mvn clean compile -DskipTests

      - name: Build Documentation Site
        run: |
          # Set up environment
          export JUNEAU_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -v "WARNING")
          echo "Building site for Juneau version: $JUNEAU_VERSION"
          
          # Build juneau-doc module (needed for custom docs)
          cd juneau-doc
          mvn install -DskipTests
          cd ..
          
          # Generate complete project site (includes Javadocs, test reports, etc.)
          mvn site -DskipTests

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the complete generated site
          path: './target/site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Send success notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "‚úÖ Juneau GitHub Pages Deployed Successfully"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            üéâ **Juneau Documentation Successfully Deployed!**
            
            **Project:** Apache Juneau
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Run:** ${{ github.run_number }}
            
            **üìö Site URL:** ${{ steps.deployment.outputs.page_url }}
            
            **üìä Build Details:**
            - Repository: ${{ github.repository }}
            - Triggered by: ${{ github.event_name }}
            - Run ID: ${{ github.run_id }}
            
            The complete project site including API documentation, test reports, and project information is now live!
      
      - name: Send failure notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "‚ùå Juneau GitHub Pages Deployment Failed"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            üö® **Juneau Documentation Deployment Failed!**
            
            **Project:** Apache Juneau
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
            **Run:** ${{ github.run_number }}
            
            **üîç Troubleshooting:**
            - Check the workflow logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - Verify the build process and dependencies
            - Check for any Maven or site generation errors
            
            **üìä Build Details:**
            - Repository: ${{ github.repository }}
            - Triggered by: ${{ github.event_name }}
            - Run ID: ${{ github.run_id }}
            
            Please check the logs and retry the deployment.
