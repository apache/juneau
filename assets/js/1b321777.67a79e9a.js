"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[2603],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function l(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:n},e.children)}},94304:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"topics/19.06.00.JuneauShadedAll","title":"juneau-shaded-all","description":"The juneau-shaded-all artifact is the complete Juneau framework bundled in a single 4.0 MB JAR file. It includes all core modules, REST client, REST server, Spring Boot integration, bean DTOs, and microservice modules.","source":"@site/docs/topics/19.06.00.JuneauShadedAll.md","sourceDirName":"topics","slug":"/topics/JuneauShadedAll","permalink":"/docs/topics/JuneauShadedAll","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/19.06.00.JuneauShadedAll.md","tags":[],"version":"current","frontMatter":{"title":"juneau-shaded-all","slug":"JuneauShadedAll"},"sidebar":"mainSidebar","previous":{"title":"19.5. juneau-shaded-rest-server-springboot","permalink":"/docs/topics/JuneauShadedRestServerSpringboot"},"next":{"title":"20.1. Security Basics","permalink":"/docs/topics/SecurityBasics"}}');var r=s(74848),t=s(28453);const l={title:"juneau-shaded-all",slug:"JuneauShadedAll"},a=void 0,c={},d=[{value:"What&#39;s Included",id:"whats-included",level:2},{value:"Core Modules",id:"core-modules",level:3},{value:"REST Modules",id:"rest-modules",level:3},{value:"Bean DTOs",id:"bean-dtos",level:3},{value:"Microservice Modules",id:"microservice-modules",level:3},{value:"Use Cases",id:"use-cases",level:2},{value:"Maven Dependency",id:"maven-dependency",level:2},{value:"Bazel Dependency",id:"bazel-dependency",level:2},{value:"External Dependencies",id:"external-dependencies",level:2},{value:"For REST Client",id:"for-rest-client",level:3},{value:"For REST Server",id:"for-rest-server",level:3},{value:"For Spring Boot",id:"for-spring-boot",level:3},{value:"Optional",id:"optional",level:3},{value:"Example: Complete Microservice",id:"example-complete-microservice",level:2},{value:"Example: Full-Stack Application",id:"example-full-stack-application",level:2},{value:"Example: Spring Boot Application",id:"example-spring-boot-application",level:2},{value:"Example: Testing with All Features",id:"example-testing-with-all-features",level:2},{value:"Features at a Glance",id:"features-at-a-glance",level:2},{value:"Serialization",id:"serialization",level:3},{value:"REST Client",id:"rest-client",level:3},{value:"REST Server",id:"rest-server",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Testing",id:"testing",level:3},{value:"Microservices",id:"microservices",level:3},{value:"Performance",id:"performance",level:2},{value:"When NOT to Use",id:"when-not-to-use",level:2},{value:"Comparison with Other Shaded Artifacts",id:"comparison-with-other-shaded-artifacts",level:2},{value:"Migration from Individual Modules",id:"migration-from-individual-modules",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"juneau-shaded-all"})," artifact is the complete Juneau framework bundled in a single 4.0 MB JAR file. It includes all core modules, REST client, REST server, Spring Boot integration, bean DTOs, and microservice modules."]}),"\n",(0,r.jsx)(n.h2,{id:"whats-included",children:"What's Included"}),"\n",(0,r.jsxs)(n.p,{children:["This artifact includes ",(0,r.jsx)(n.strong,{children:"everything"}),":"]}),"\n",(0,r.jsx)(n.h3,{id:"core-modules",children:"Core Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-common"})," - Core utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-assertions"})," - Fluent assertions API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bct"})," - Bean-Centric Testing framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-config"})," - Configuration file API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-marshall"})," - All serializers/parsers (JSON, XML, HTML, MessagePack, etc.)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rest-modules",children:"REST Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-common"})," - Common REST APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-client"})," - REST client API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-server"})," - REST server API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-server-rdf"})," - RDF support for servers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-server-springboot"})," - Spring Boot integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-rest-mock"})," - REST testing utilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bean-dtos",children:"Bean DTOs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-common"})," - Common bean utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-atom"})," - ATOM feed beans"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-html5"})," - HTML5 element beans"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-jsonschema"})," - JSON Schema beans (Draft 2020-12)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-openapi-v3"})," - OpenAPI 3.0 beans"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-bean-swagger-v2"})," - Swagger 2.0 beans"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"microservice-modules",children:"Microservice Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-microservice-core"})," - Core microservice functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"juneau-microservice-jetty"})," - Jetty-based microservice"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"juneau-shaded-all"})," when you:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Want everything"})," - Need full access to all Juneau features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Are getting started"})," - Simplest way to explore Juneau"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build complete applications"})," - Need both client and server functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Bazel or similar build systems"})," - Simplifies strict dependency management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Develop microservices"})," - Includes microservice support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Need maximum flexibility"})," - Have all features available without additional dependencies"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"maven-dependency",children:"Maven Dependency"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-all</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"bazel-dependency",children:"Bazel Dependency"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'maven_jar(\n    name = "juneau_all",\n    artifact = "org.apache.juneau:juneau-shaded-all:${juneau.version}",\n)\n\n# Common external dependencies\nmaven_jar(\n    name = "httpclient5",\n    artifact = "org.apache.httpcomponents.client5:httpclient5:5.2.1",\n)\n\nmaven_jar(\n    name = "jakarta_servlet_api",\n    artifact = "jakarta.servlet:jakarta.servlet-api:6.1.0",\n)\n\njava_binary(\n    name = "my_app",\n    srcs = glob(["src/**/*.java"]),\n    deps = [\n        "@juneau_all//jar",\n        "@httpclient5//jar",\n        "@jakarta_servlet_api//jar",\n    ],\n    main_class = "com.example.MyApp",\n)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"external-dependencies",children:"External Dependencies"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"juneau-shaded-all"})," requires the following external dependencies:"]}),"\n",(0,r.jsx)(n.h3,{id:"for-rest-client",children:"For REST Client"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Apache HttpClient 5.2+"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Apache HttpCore 5.2+"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-rest-server",children:"For REST Server"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Jakarta Servlet API 6.1+"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Servlet Container"})," (Jetty, Tomcat, etc.)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-spring-boot",children:"For Spring Boot"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Spring Boot Starter Web 3.0+"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"optional",children:"Optional"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Jakarta XML Bind API 3.0+"})," - For XML serialization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring Boot Starter Security"})," - For Spring Security integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-complete-microservice",children:"Example: Complete Microservice"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.apache.juneau.microservice.jetty.*;\nimport org.apache.juneau.rest.annotation.*;\nimport org.apache.juneau.rest.servlet.*;\n\n// Main application\npublic class MyMicroservice {\n    public static void main(String[] args) throws Exception {\n        JettyMicroservice\n            .create()\n            .args(args)\n            .servlet(RootResource.class)\n            .build()\n            .start()\n            .join();\n    }\n}\n\n// Root resource\n@Rest(\n    path="/",\n    title="My Microservice",\n    description="Complete REST API example"\n)\npublic class RootResource extends BasicRestServlet {\n    \n    @RestGet(path="/")\n    public String home() {\n        return "Welcome to My Microservice!";\n    }\n    \n    @RestGet(path="/api/data")\n    public List<Data> getData() {\n        return dataService.getAll();\n    }\n    \n    @RestPost(path="/api/data")\n    public Data createData(@Content Data data) {\n        return dataService.create(data);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-full-stack-application",children:"Example: Full-Stack Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Server-side REST API\n@Rest(path="/api")\npublic class MyApi extends BasicRestServlet {\n    \n    @RestGet(path="/users")\n    public List<User> getUsers() {\n        return userService.getAllUsers();\n    }\n    \n    @RestPost(path="/users")\n    public User createUser(@Content User user) {\n        return userService.createUser(user);\n    }\n}\n\n// Client-side consumption\npublic class MyClient {\n    public static void main(String[] args) {\n        try (RestClient client = RestClient.create()\n                .json()\n                .rootUrl("http://localhost:8080")\n                .build()) {\n            \n            // GET users\n            List<User> users = client.get("/api/users")\n                .run()\n                .getContent().as(User[].class);\n            \n            // POST new user\n            User newUser = new User("John", "john@example.com");\n            User created = client.post("/api/users")\n                .content(newUser)\n                .run()\n                .getContent().as(User.class);\n            \n            System.out.println("Created: " + created.getName());\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-spring-boot-application",children:"Example: Spring Boot Application"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class MySpringBootApp {\n    public static void main(String[] args) {\n        SpringApplication.run(MySpringBootApp.class, args);\n    }\n}\n\n@Rest(path="/api/products")\n@Component\npublic class ProductResource extends SpringRestServlet {\n    \n    @Autowired\n    private ProductRepository productRepository;\n    \n    @RestGet\n    public List<Product> getAllProducts() {\n        return productRepository.findAll();\n    }\n    \n    @RestGet(path="/{id}")\n    public Product getProduct(@Path long id) {\n        return productRepository.findById(id)\n            .orElseThrow(() -> new NotFound("Product not found"));\n    }\n    \n    @RestPost\n    @Transactional\n    public Product createProduct(@Content Product product) {\n        return productRepository.save(product);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-testing-with-all-features",children:"Example: Testing with All Features"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import static org.apache.juneau.junit.bct.BctAssertions.*;\nimport org.apache.juneau.rest.mock.*;\n\n@Test\npublic void testCompleteWorkflow() throws Exception {\n    // Bean testing\n    User user = new User("John", "john@example.com");\n    assertBean(user)\n        .is("name", "John")\n        .is("email", "john@example.com");\n    \n    // Serialization testing\n    assertBean(user).asJson()\n        .is("{name:\'John\',email:\'john@example.com\'}");\n    \n    // REST API testing\n    MockRestClient client = MockRestClient.create(MyApi.class)\n        .json()\n        .build();\n    \n    User created = client.post("/users")\n        .content(user)\n        .run()\n        .assertStatus().is(201)\n        .getContent().as(User.class);\n    \n    assertBean(created).is("name", "John");\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"features-at-a-glance",children:"Features at a Glance"}),"\n",(0,r.jsx)(n.h3,{id:"serialization",children:"Serialization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JSON, XML, HTML, RDF, MessagePack, CSV, SOAP, UON, OpenAPI, PlainText"}),"\n",(0,r.jsx)(n.li,{children:"Automatic content negotiation"}),"\n",(0,r.jsx)(n.li,{children:"Streaming support"}),"\n",(0,r.jsx)(n.li,{children:"Custom serializers/parsers"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rest-client",children:"REST Client"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fluent API"}),"\n",(0,r.jsx)(n.li,{children:"Remote proxies"}),"\n",(0,r.jsx)(n.li,{children:"Authentication (Basic, Bearer, OAuth2, Custom)"}),"\n",(0,r.jsx)(n.li,{children:"Interceptors and retries"}),"\n",(0,r.jsx)(n.li,{children:"Connection pooling"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"rest-server",children:"REST Server"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Annotation-based routing"}),"\n",(0,r.jsx)(n.li,{children:"Swagger/OpenAPI integration"}),"\n",(0,r.jsx)(n.li,{children:"Guards and matchers"}),"\n",(0,r.jsx)(n.li,{children:"Converters and validators"}),"\n",(0,r.jsx)(n.li,{children:"File uploads/downloads"}),"\n",(0,r.jsx)(n.li,{children:"Server-sent events"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hierarchical config files"}),"\n",(0,r.jsx)(n.li,{children:"Variable resolution"}),"\n",(0,r.jsx)(n.li,{children:"Listeners and watchers"}),"\n",(0,r.jsx)(n.li,{children:"Multiple formats"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fluent assertions"}),"\n",(0,r.jsx)(n.li,{children:"Bean-centric testing"}),"\n",(0,r.jsx)(n.li,{children:"Mock REST clients/servers"}),"\n",(0,r.jsx)(n.li,{children:"Deep property navigation"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"microservices",children:"Microservices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Jetty integration"}),"\n",(0,r.jsx)(n.li,{children:"Configuration management"}),"\n",(0,r.jsx)(n.li,{children:"Lifecycle hooks"}),"\n",(0,r.jsx)(n.li,{children:"Health checks and metrics"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JAR Size"}),": 4.0 MB (all features included)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory"}),": Efficient bean introspection with caching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Serialization"}),": Fast, memory-efficient"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Thread-Safe"}),": All components are thread-safe"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Startup"}),": Minimal - no classpath scanning or code generation"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"when-not-to-use",children:"When NOT to Use"}),"\n",(0,r.jsx)(n.p,{children:"Consider using more specific shaded artifacts if:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Building a library"})," - Other projects may not need all features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Size constraints"})," - Use ",(0,r.jsx)(n.code,{children:"juneau-shaded-core"})," (2.1 MB) for core-only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client only"})," - Use ",(0,r.jsx)(n.code,{children:"juneau-shaded-rest-client"})," (3.8 MB)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server only"})," - Use ",(0,r.jsx)(n.code,{children:"juneau-shaded-rest-server"})," (3.8 MB)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"comparison-with-other-shaded-artifacts",children:"Comparison with Other Shaded Artifacts"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Artifact"}),(0,r.jsx)(n.th,{children:"Size"}),(0,r.jsx)(n.th,{children:"Use When"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedCore",children:"juneau-shaded-core"})}),(0,r.jsx)(n.td,{children:"2.0 MB"}),(0,r.jsx)(n.td,{children:"Only need marshalling/config"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestClient",children:"juneau-shaded-rest-client"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"Building REST clients"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestServer",children:"juneau-shaded-rest-server"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"Building REST servers"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestServerSpringboot",children:"juneau-shaded-rest-server-springboot"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"Using Spring Boot"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-all"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"4.0 MB"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Need everything"})})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-individual-modules",children:"Migration from Individual Modules"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Before"})," (managing many dependencies):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-marshall</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-rest-client</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-rest-server</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-rest-server-springboot</artifactId>\n</dependency>\n\x3c!-- ... many more --\x3e\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"After"})," (one dependency):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-all</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.p,{children:"All imports and API usage remain exactly the same!"}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauEcosystemOverview",children:"Juneau Ecosystem Overview"})})," - Explore all Juneau modules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauRestServerBasics",children:"REST Server Basics"})})," - Build REST APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauRestClientBasics",children:"REST Client Basics"})})," - Consume REST APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauMarshallBasics",children:"Marshalling Basics"})})," - Serialize/deserialize objects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauMicroserviceCoreBasics",children:"Microservice Basics"})})," - Build microservices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/SpringBootIntegration",children:"Spring Boot Integration"})})," - Use with Spring Boot"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/juneau-shaded/BAZEL_USAGE_EXAMPLES.md",children:"Bazel Usage Guide"})})," - Detailed Bazel examples"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);