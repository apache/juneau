"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1334],{12388:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/jrs.HelloWorldExample.1-43a7735277653e50937e9444c8ea95f0.png"},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var t=s(96540);const a={},r=t.createContext(a);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},53411:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"topics/01.04.00.RestServer","title":"REST Server","description":"@Rest-Annotated Resources","source":"@site/docs-staging/topics/01.04.00.RestServer.md","sourceDirName":"topics","slug":"/topics/01.04.00.RestServer","permalink":"/docs/topics/01.04.00.RestServer","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/01.04.00.RestServer.md","tags":[],"version":"current","frontMatter":{"title":"REST Server"},"sidebar":"tutorialSidebar","previous":{"title":"1.3. End-to-End REST","permalink":"/docs/topics/01.03.00.EndToEndRest"},"next":{"title":"1.5. REST Client","permalink":"/docs/topics/01.05.00.RestClient"}}');var a=s(74848),r=s(28453);const o={title:"REST Server"},i=void 0,l={},c=[{value:"<code>@Rest</code>-Annotated Resources",id:"rest-annotated-resources",level:4},{value:"REST Children",id:"rest-children",level:4},{value:"Predefined Configuration Interfaces",id:"predefined-configuration-interfaces",level:4},{value:"REST Group Pages",id:"rest-group-pages",level:4},{value:"REST Resource Methods",id:"rest-resource-methods",level:4},{value:"Deploying as a Servlet",id:"deploying-as-a-servlet",level:4},{value:"Deploying in Spring Boot",id:"deploying-in-spring-boot",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h4,{id:"rest-annotated-resources",children:[(0,a.jsx)(n.code,{children:"@Rest"}),"-Annotated Resources"]}),"\n",(0,a.jsxs)(n.p,{children:["A REST resource is simply a Java class annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"Rest"}),".\nThe most common case is a class that extends ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"}),", which itself is simply an extension of ",(0,a.jsx)(n.a,{href:"../apidocs/jakarta/servlet/http/HttpServlet.html",children:"HttpServlet"})," which allows it to be deployed as a servlet."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Sample REST resource that prints out a simple "Hello world!" message.\n@Rest(\n    path="/helloWorld",\n    title="Hello World",\n    description="An example of the simplest-possible resource"\n)\n@HtmlDoc(\n    navlinks={\n        "up: request:/..",\n        "options: servlet:/?method=OPTIONS"\n    },\n    aside={\n        "This page shows a resource that simply response with a \'Hello world!\' message",\n        "The POJO serialized is a simple String.",\n    }\n)\n@BeanConfig(sortProperties="true")\npublic class HelloWorldResource extends BasicRestServlet {\n\n    @RestGet(path="/*", summary="Responds with \\"Hello world!\\"")\n    public String sayHello() {\n        return "Hello world!";\n    }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"This is what it looks like in a browser."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"http://localhost:10000/helloWorld\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Hello World Example",src:s(12388).A+"",width:"1600",height:"449"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Parsers for request bodies are selected based on the request ",(0,a.jsx)(n.code,{children:"Content-Type"})," header."]}),"\n",(0,a.jsxs)(n.li,{children:["Serializers for response bodies are selected based on the request ",(0,a.jsx)(n.code,{children:"Accept"})," header."]}),"\n",(0,a.jsxs)(n.li,{children:["In this case, it's the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/HtmlDocSerializer.html",children:"HtmlDocSerializer"})," serializer based on the browser's default ",(0,a.jsx)(n.code,{children:"Accept"})," header that's asking for HTML."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["REST resource classes and methods can be annotated with configuration annotations for the serializers and parsers (such\nas ",(0,a.jsx)(n.code,{children:"@HtmlConfig"})," and ",(0,a.jsx)(n.code,{children:"@BeanConfig"})," shown above)."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Annotations such as the title, summary, and descriptions shown above are used for auto-generated Swagger UI pages (described later)."}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"rest-children",children:"REST Children"}),"\n",(0,a.jsxs)(n.p,{children:["Child Resources are REST servlets or objects that are linked to parent resources through the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#children()",children:"@Rest(children)"})," annotation."]}),"\n",(0,a.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/** Parent Resource */\n@Rest(\n    path="/parent",\n    children={\n        MyChildResource.class\n    }\n)\npublic MyParentResource extends BasicRestServlet {...}\n'})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/** Child Resource */\n@Rest(\n    path="/child"  // Path relative to parent resource.\n)\n// Note that we don\'t need to extend from RestServlet.\npublic MyChildResource implements BasicRestObject {\n    ...\n}\n'})})]}),"\n",(0,a.jsx)(n.p,{children:"The path of the child resource gets appended to the path of the parent resource.\nSo in the example above, the child resource is accessed through the URL /parent/child."}),"\n",(0,a.jsx)(n.p,{children:"The advantage of using child resources is that they do not need to be declared in the JEE web.xml file."}),"\n",(0,a.jsx)(n.p,{children:"Initialization of and access to the child resources occurs through the parent resource."}),"\n",(0,a.jsx)(n.p,{children:"Children can be nested arbitrary deep to create complex REST interfaces with a single top-level REST servlet."}),"\n",(0,a.jsx)(n.h4,{id:"predefined-configuration-interfaces",children:"Predefined Configuration Interfaces"}),"\n",(0,a.jsxs)(n.p,{children:["The servlets in the previous section implemented the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/config/BasicUniversalConfig.html",children:"BasicUniversalConfig"})," which simply defines a preconfigured set of annotations that get inherited by the child classes:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"/**\n* Predefined configuration for a REST resource that supports all languages\n* and provides common default configuration values.\n*/\n@Rest(\n\n    // Default serializers for all Java methods in the class.\n    serializers={\n        HtmlDocSerializer.class,\n        HtmlStrippedDocSerializer.class,\n        HtmlSchemaDocSerializer.class,\n        JsonSerializer.class,\n        Json5Serializer.class,\n        JsonSchemaSerializer.class,\n        XmlDocSerializer.class,\n        UonSerializer.class,\n        UrlEncodingSerializer.class,\n        OpenApiSerializer.class,\n        MsgPackSerializer.class,\n        SoapXmlSerializer.class,\n        PlainTextSerializer.class,\n        CsvSerializer.class\n    },\n\n    // Default parsers for all Java methods in the class.\n    parsers={\n        JsonParser.class,\n        Json5Parser.class,\n        XmlParser.class,\n        HtmlParser.class,\n        UonParser.class,\n        UrlEncodingParser.class,\n        OpenApiParser.class,\n        MsgPackParser.class,\n        PlainTextParser.class,\n        CsvParser.class\n    }\n)\npublic interface BasicUniversalConfig extends DefaultConfig, DefaultHtmlConfig {}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n* Predefined REST configuration that defines common default values for all configurations.\n*/\n@Rest(\n    // Configuration file.\n    config="$S{j.configFile,$E{J_CONFIG_FILE,SYSTEM_DEFAULT}}",\n\n    // Standard fields.\n    path="",\n    roleGuard="",\n    rolesDeclared="",\n\n    // Configuration beans.\n    converters={},\n    encoders={IdentityEncoder.class},\n    guards={},\n    parsers={},\n    partParser=OpenApiParser.class,\n    partSerializer=OpenApiSerializer.class,\n    responseProcessors={\n        ReaderProcessor.class,\n        InputStreamProcessor.class,\n        ThrowableProcessor.class,\n        HttpResponseProcessor.class,\n        HttpResourceProcessor.class,\n        HttpEntityProcessor.class,\n        ResponseBeanProcessor.class,\n        PlainTextPojoProcessor.class,\n        SerializedPojoProcessor.class\n    },\n    restOpArgs={\n        AttributeArg.class,\n        ContentArg.class,\n        FormDataArg.class,\n        HasFormDataArg.class,\n        HasQueryArg.class,\n        HeaderArg.class,\n        HttpServletRequestArgs.class,\n        HttpServletResponseArgs.class,\n        HttpSessionArgs.class,\n        InputStreamParserArg.class,\n        MethodArg.class,\n        ParserArg.class,\n        PathArg.class,\n        QueryArg.class,\n        ReaderParserArg.class,\n        RequestBeanArg.class,\n        ResponseBeanArg.class,\n        ResponseHeaderArg.class,\n        ResponseCodeArg.class,\n        RestContextArgs.class,\n        RestSessionArgs.class,\n        RestOpContextArgs.class,\n        RestOpSessionArgs.class,\n        RestRequestArgs.class,\n        RestResponseArgs.class,\n        DefaultArg.class\n    },\n    serializers={},\n\n    // Configurable settings.\n    allowedHeaderParams="$S{j.allowedHeaderParams,$E{J_ALLOWED_HEADER_PARAMS,Accept,Content-Type}}",\n    allowedMethodHeaders="$S{j.allowedMethodHeaders,$E{J_ALLOWED_METHOD_HEADERS,}}",\n    allowedMethodParams="$S{j.allowedMethodParams,$E{J_ALLOWED_METHOD_PARAMS,HEAD,OPTIONS}}",\n    clientVersionHeader="$S{j.clientVersionHeader,$E{J_CLIENT_VERSION_HEADER,Client-Version}}",\n    debug="$S{j.debug,$E{J_DEBUG,}}",\n    debugOn="$S{j.debugOn,$E{J_DEBUG_ON,}}",\n    defaultAccept="$S{j.defaultAccept,$E{J_DEFAULT_ACCEPT,}}",\n    defaultCharset="$S{j.defaultCharset,$E{J_DEFAULT_CHARSET,UTF-8}}",\n    defaultContentType="$S{j.defaultContentType,$E{J_DEFAULT_CONTENT_TYPE,}}",\n    defaultRequestAttributes="$S{j.defaultRequestAttributes,$E{J_DEFAULT_REQUEST_ATTRIBUTES,}}",\n    defaultRequestHeaders="$S{j.defaultRequestHeaders,$E{J_DEFAULT_REQUEST_HEADERS,}}",\n    defaultResponseHeaders="$S{j.defaultResponseHeaders,$E{J_DEFAULT_RESPONSE_HEADERS,}}",\n    disableContentParam="$S{j.disableContentParam,$E{J_DISABLE_CONTENT_PARAM,false}}",\n    maxInput="$S{j.maxInput,$E{J_MAX_INPUT,1000000}}",\n    messages="$S{j.messages,$E{J_MESSAGES,}}",\n    renderResponseStackTraces="$S{j.renderResponseStackTraces,$E{J_RENDER_RESPONSE_STACK_TRACES,false}}",\n    uriAuthority="$S{j.uriAuthority,$E{J_URI_AUTHORITY,}}",\n    uriContext="$S{j.uriContext,$E{J_URI_CONTEXT,}}",\n    uriRelativity="$S{j.uriRelativity,$E{J_URI_RELATIVITY,}}",\n    uriResolution="$S{j.uriResolution,$E{J_URI_RESOLUTION,}}",\n\n    // Metadata settings.\n    consumes={},\n    description="",\n    produces={},\n    siteName="$S{j.siteName,$E{J_SITE_NAME,}}",\n    swagger=@Swagger,\n    title="$S{j.title,$E{J_TITLE,}}",\n\n    // Injectable/overridable beans.\n    beanStore=BeanStore.Void.class,  // Defaults to BeanStore.\n    callLogger=CallLogger.Void.class,  // Defaults to BasicCallLogger.\n    debugEnablement=DebugEnablement.Void.class,  // Defaults to BasicDefaultEnablement.\n    fileFinder=FileFinder.Void.class,  // Defaults to BasicFileFinder.\n    staticFiles=StaticFiles.Void.class,  // Defaults to BasicStaticFiles.\n    swaggerProvider=SwaggerProvider.Void.class,  // Defaults to BasicSwaggerProvider.\n\n    // Overridable context classes.\n    contextClass=RestContext.class,\n    restChildrenClass=RestChildren.class,\n    restOpContextClass=RestOpContext.class,\n    restOperationsClass=RestOperations.class\n)\n@BeanConfig(\n    // When parsing generated beans, ignore unknown properties\n    // that may only exist as getters and not setters.\n    ignoreUnknownBeanProperties="true",\n    ignoreUnknownEnumValues="true"\n)\n@SerializerConfig(\n    // Enable automatic resolution of URI objects to root-relative values.\n    uriResolution="ROOT_RELATIVE"\n)\npublic interface DefaultConfig {}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n* Predefined REST configuration that defines common default values the HTML Doc serializer.\n*/\n@HtmlDocConfig(\n\n    // Default page header contents.\n    header={\n        "$RS{title}",  // Use @Rest(title)\n        "$RS{operationSummary,description}", // Use either @RestOp(summary) or @Rest(description)\n        "$C{REST/header}"  // Extra header HTML defined in external config file.\n    },\n\n    // Basic page navigation links.\n    navlinks={\n        "up: request:/.."\n    },\n\n    // Default stylesheet to use for the page.\n    // Can be overridden from external config file.\n    // Default is DevOps look-and-feel (aka Depression look-and-feel).\n    stylesheet="$C{REST/theme,servlet:/htdocs/themes/devops.css}",\n\n    // Default contents to add to the  section of the HTML page.\n    // Use it to add a favicon link to the page.\n    head="$C{REST/head}",\n\n    // No default page footer contents.\n    // Can be overridden from external config file.\n    footer="$C{REST/footer}",\n\n    // By default, table cell contents should not wrap.\n    nowrap="true"\n)\npublic interface DefaultHtmlConfig {}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/config.html",children:"org.apache.juneau.rest.config"})," package contains other basic configurations for use.\nAnnotations are aggregated from child-to-parent order allowing for these basic configurations to be extended and\nmodified, or you can create your own annotations from scratch."]}),"\n",(0,a.jsx)(n.h4,{id:"rest-group-pages",children:"REST Group Pages"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServletGroup.html",children:"BasicRestServletGroup"}),' class provides a\ndefault "router" page for child resources when a parent resource is nothing more than a grouping of child resources.\nThe RootResources class in the Samples project is an example of a router page:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'/**\n* Sample REST resource showing how to implement a "router" resource page.\n*/\n@Rest(\n    path="/",\n    title="Root resources",\n    description="Example of a router resource page.",\n    children={\n        HelloWorldResource.class,\n        PetStoreResource.class,\n        DtoExamples.class,\n        ConfigResource.class,\n        LogsResource.class,\n        ShutdownResource.class\n    }\n)\npublic class RootResources extends BasicRestServletGroup {\n    // NO CODE!!!\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"When you bring up this resource in a browser, you see the following that provides a list of navigable links to your\nchild resources:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"http://localhost:10000\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Router Pages Example",src:s(62051).A+"",width:"1600",height:"816"})}),"\n",(0,a.jsx)(n.h4,{id:"rest-resource-methods",children:"REST Resource Methods"}),"\n",(0,a.jsx)(n.p,{children:"The real power behind the REST server API is the ability to define Java methods as REST endpoints."}),"\n",(0,a.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@RestPost(path="/pets", guards=AdminGuard.class)\npublic Ok addPet(\n    @Content CreatePet createPetBean,\n    @Header("E-Tag") UUID etag,\n    @Query("debug") boolean debug\n) throws BadRequest, Unauthorized, InternalServerError {\n    // Process request.\n    return Ok.OK;\n}\n'})})}),"\n",(0,a.jsxs)(n.p,{children:["Java methods on ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"@Rest"}),"-annotated classes have the following\nformat:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@RestOp(method="...", path="...")\n\npublic  method() throws  {\n    ...\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"The various parts require their own topics to fully appreciate the scope of abilities but the following is a summary:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html",children:"@RestOp"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Also available: ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestGet.html",children:"@RestGet"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestPut.html",children:"@RestPut"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestPost.html",children:"@RestPost"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestDelete.html",children:"@RestDelete"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Annotation optional if using standard naming conventions (e.g. ",(0,a.jsx)(n.code,{children:"getFoo()"})," equivalent to ",(0,a.jsx)(n.code,{children:'@RestGet(path="/foo")'}),")."]}),"\n",(0,a.jsxs)(n.li,{children:["Optionally annotated with config annotations such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanConfig.html",children:"@BeanConfig"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/HtmlDocConfig.html",children:"@HtmlDocConfig"})," that customize the behavior of serializers and parsers at the method level."]}),"\n",(0,a.jsx)(n.li,{children:"Returned object gets serialized as the HTTP response body."}),"\n",(0,a.jsxs)(n.li,{children:["Typically a POJO serialized based on ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/header/Accept.html",children:"Accept"})," request header."]}),"\n",(0,a.jsxs)(n.li,{children:["Support for raw values such as ",(0,a.jsx)(n.code,{children:"Readers"})," and ",(0,a.jsx)(n.code,{children:"InputStreams"})," (among others)."]}),"\n",(0,a.jsxs)(n.li,{children:["Support for response beans annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Response.html",children:"@Response"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Support for Apache Http Core interfaces: ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/http/HttpEntity.html",children:"HttpEntity"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/http/HttpResponse.html",children:"HttpResponse"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/resource/HttpResource.html",children:"HttpResource"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Standard HTTP responses such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response/Ok.html",children:"Ok"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response/TemporaryRedirect.html",children:"TemporaryRedirect"})," provided in ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response.html",children:"org.apache.juneau.http.response"})," package."]}),"\n",(0,a.jsx)(n.li,{children:"Extensible API for defining custom return types."}),"\n",(0,a.jsx)(n.li,{children:"A wide range of possible argument types including:"}),"\n",(0,a.jsxs)(n.li,{children:["Standard ",(0,a.jsx)(n.a,{href:"../apidocs/jakarta/servlet/http/HttpServletRequest.html",children:"HttpServletRequest"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/jakarta/servlet/http/HttpServletResponse.html",children:"HttpServletResponse"})," objects."]}),"\n",(0,a.jsxs)(n.li,{children:["Extended ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestRequest.html",children:"RestRequest"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestResponse.html",children:"RestResponse"})," objects."]}),"\n",(0,a.jsxs)(n.li,{children:["Parsed HTTP parts with either the arguments or beans annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Path.html",children:"@Path"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Header.html",children:"@Header"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html",children:"@Query"})," / ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/FormData.html",children:"@FormData"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Parsed HTTP body with either the argument or bean annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Content.html",children:"@Content"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Raw HTTP request body with ",(0,a.jsx)(n.code,{children:"InputStream"})," or ",(0,a.jsx)(n.code,{children:"Reader"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Raw HTTP response body with ",(0,a.jsx)(n.code,{children:"OutputStream"})," or ",(0,a.jsx)(n.code,{children:"Writer"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Request beans annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"@Request"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Response beans annotated with ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Response.html",children:"@Response"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Standard HTTP headers such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/header/Accept.html",children:"Accept"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/header/ContentType.html",children:"ContentType"}),"  provided in ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/header.html",children:"org.apache.juneau.http.header"})," package."]}),"\n",(0,a.jsxs)(n.li,{children:["Auto-generated ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/Swagger.html",children:"Swagger"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Various other standard objects such as ",(0,a.jsx)(n.a,{href:"../apidocs/java/security/Principal.html",children:"Principal"}),", ",(0,a.jsx)(n.a,{href:"../apidocs/jakarta/servlet/http/Cookie.html",children:"Cookie"}),", ",(0,a.jsx)(n.a,{href:"../apidocs/jakarta/servlet/http/HttpSession.html",children:"HttpSession"}),", and ",(0,a.jsx)(n.a,{href:"../apidocs/java/util/ResourceBundle.html",children:"ResourceBundle"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Spring beans or other injectable beans."}),"\n",(0,a.jsx)(n.li,{children:"Extensible API for defining custom argument types."}),"\n",(0,a.jsx)(n.li,{children:"Throwables can be anything."}),"\n",(0,a.jsxs)(n.li,{children:["Typically one of the standard HTTP responses such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response/BadRequest.html",children:"BadRequest"})," or ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response/NotFound.html",children:"NotFound"})," provided in ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response.html",children:"org.apache.juneau.http.response"})," package."]}),"\n",(0,a.jsxs)(n.li,{children:["Can define your own ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Response.html",children:"@Response"}),"-annotated throwables."]}),"\n",(0,a.jsxs)(n.li,{children:["Anything else gets converted to an ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response/InternalServerError.html",children:"InternalServerError"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"deploying-as-a-servlet",children:"Deploying as a Servlet"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"})," class is the entry point for\nyour REST resources.\nIt extends directly from HttpServlet and is deployed like any other servlet (such as a standard ",(0,a.jsx)(n.code,{children:"web.xml"})," file).\nWhen the servlet init() method is called, it triggers the code to find and process the @Rest annotations on that class\nand all child classes.\nThese get constructed into a ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestContext.html",children:"RestContext"})," object that holds all\nthe configuration information about your resource in a read-only object."]}),"\n",(0,a.jsxs)(n.p,{children:["Most developers are not going to be using the RestServlet class itself, and instead will extend from one of the\npreconfigured default servlets such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServletGroup.html",children:"BasicRestServletGroup"})," which provides universal language support, basic instrumentation, and auto-generated Swagger UI."]}),"\n",(0,a.jsx)(n.h4,{id:"deploying-in-spring-boot",children:"Deploying in Spring Boot"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/springboot/BasicSpringRestServlet.html",children:"BasicSpringRestServlet"})," class is\ntypically entry point for your REST resources when working within a Spring Boot environment.\nIt extends from ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/springboot/SpringRestServlet.html",children:"SpringRestServlet"})," which\nprovides additional capabilities including:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Your REST resources can be defined as injectable Spring beans."}),"\n",(0,a.jsx)(n.li,{children:"Various capabilities within the REST Server library (e.g. logging, instrumentation, call handling, API extensions) can be defined via"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Spring beans and automatically pulled into the framework."}),"\n",(0,a.jsxs)(n.p,{children:["Most developers are not going to be using the RestServlet class itself, and instead will extend from one of the\npreconfigured default servlets such as ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/springboot/BasicSpringRestServlet.html",children:"BasicSpringRestServlet"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/springboot/BasicSpringRestServletGroup.html",children:"BasicSpringRestServletGroup"})," that have the same capabilites as the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServletGroup.html",children:"BasicRestServletGroup"})," counterparts."]}),"\n",(0,a.jsxs)(n.admonition,{title:"Example configuration file",type:"tip",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Configuration\npublic class MySpringConfiguration {\n\n    /**\n    * Our root REST bean.\n    * Note that this must extend from SpringRestServlet so that child resources can be\n    * resolved as Spring beans.\n    * All REST objects are attached to this bean using the [Rest.children()](../apidocs/org/apache/juneau/rest/annotation/Rest.html#children()) annotation.\n    */\n    @Bean\n    public RootResources getRootResources() {\n        return new RootResources();\n    }\n\n    /**\n    * Optionally return the HelloWorldResource object as an injectable bean.\n    */\n    @Bean\n    public HelloWorldResource getHelloWorldResource() {\n        return new HelloWorldResource();\n    }\n\n    /**\n    * Map our servlet to a path.\n    */\n    @Bean\n    public ServletRegistrationBean getRootServlet(RootResources rootResources) {\n        return new ServletRegistrationBean(rootResources, "/*");\n    }\n}\n'})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"@Rest(\n    children={\n        HelloWorldResource.class\n    }\n)\npublic class RootResources extends BasicSpringRestServletGroup {\n    // No code!\n}\n"})})]}),"\n",(0,a.jsx)(n.admonition,{title:"See Also",type:"info",children:(0,a.jsx)(n.p,{children:"juneau-rest-server for more information."})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},62051:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/jrs.RouterPages.1-43c03ac0d6e469d2f3ecca736f017867.png"}}]);