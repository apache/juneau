"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9303],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},46413:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"topics/17.03.00.SvlSecurity","title":"SVL Security","description":"Care must be used when defining new Vars using the SVL API since mistakes","source":"@site/docs-staging/topics/17.03.00.SvlSecurity.md","sourceDirName":"topics","slug":"/topics/17.03.00.SvlSecurity","permalink":"/docs/topics/17.03.00.SvlSecurity","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/17.03.00.SvlSecurity.md","tags":[],"version":"current","frontMatter":{"title":"SVL Security"},"sidebar":"mainSidebar","previous":{"title":"17.2. Marshalling Security","permalink":"/docs/topics/17.02.00.MarshallingSecurity"},"next":{"title":"17.4. REST Security","permalink":"/docs/topics/17.04.00.RestSecurity"}}');var r=s(74848),i=s(28453);const o={title:"SVL Security"},a=void 0,l={},c=[];function d(e){const t={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Care must be used when defining new ",(0,r.jsx)(t.a,{href:"../apidocs/org/apache/juneau/svl/Var.html",children:"Vars"})," using the SVL API since mistakes\ncould potentially expose system properties, environment variables, or even file system files."]}),"\n",(0,r.jsxs)(t.p,{children:["For recap, the SVL support allows you to embed variables of the form ",(0,r.jsx)(t.code,{children:"$X{key}"})," inside strings that get resolved to other\nstrings."]}),"\n",(0,r.jsx)(t.p,{children:"The resolved strings themselves can also contain variables that also get recursively resolved."}),"\n",(0,r.jsx)(t.p,{children:"An example of a potential security hole is shown below that could potentially expose any file on a file system through a\nREST request:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'public String doUnsafeGet(RestRequest req) {\n    // Security hole!\n    return req.getVarResolver().resolve("$RQ{foo}");\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["This code is simply echoing the value of the ",(0,r.jsx)(t.code,{children:"foo"})," query parameter."]}),"\n",(0,r.jsxs)(t.p,{children:["Now say for example that a bad actor passes in the query string ",(0,r.jsx)(t.code,{children:"foo=$F{/some/file/on/file/system}"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"$F"})," variable allows you to resolve the contents of files using SVL, and is provided by default using the built-in\nvariable resolver returned by the ",(0,r.jsx)(t.code,{children:"RestRequest"})," object."]}),"\n",(0,r.jsx)(t.p,{children:"You've potentially just exposed the contents of that file through your REST interface.\nIn reality, the above security hole does not exist because of the following restrictions:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Vars"})," have two methods ",(0,r.jsx)(t.a,{href:"../apidocs/org/apache/juneau/svl/Var.html#allowNested()",children:"Var.allowNested()"})," and ",(0,r.jsx)(t.a,{href:"../apidocs/org/apache/juneau/svl/Var.html#allowRecurse()",children:"Var.allowRecurse()"})," that can be overridden to prevent recursive processing of string variables.\nThese are both false for the ",(0,r.jsx)(t.code,{children:"$R"})," variable, so the ",(0,r.jsx)(t.code,{children:"$F"})," variable in the result will never get processed and instead be\ntreated as plain text."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"$F"})," variable only allows you to retrieve files within the JVM starting directory."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Even though the built-in Juneau variables are safe, special care is needed when defining your own custom variables.\nIf your variable resolves user input in any way, it's HIGHLY recommended that you override the ",(0,r.jsx)(t.a,{href:"../apidocs/org/apache/juneau/svl/Var.html#allowNested()",children:"Var.allowNested()"})," and ",(0,r.jsx)(t.a,{href:"../apidocs/org/apache/juneau/svl/Var.html#allowRecurse()",children:"Var.allowRecurse()"})," methods to prevent recursive handling of variables."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);