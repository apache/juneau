"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7906],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(96540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}},59112:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"topics/08.05.05.RequestBeans","title":"Request Beans","description":"The @Request annotation can used to define proxy","source":"@site/docs-staging/topics/08.05.05.RequestBeans.md","sourceDirName":"topics","slug":"/topics/08.05.05.RequestBeans","permalink":"/docs/topics/08.05.05.RequestBeans","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/08.05.05.RequestBeans.md","tags":[],"version":"current","frontMatter":{"title":"Request Beans"},"sidebar":"mainSidebar","previous":{"title":"8.5.4. Default Parts","permalink":"/docs/topics/08.05.04.DefaultParts"},"next":{"title":"8.5.6. Response Beans","permalink":"/docs/topics/08.05.06.ResponseBeans"}}');var s=n(74848),i=n(28453);const o={title:"Request Beans"},r=void 0,c={},d=[];function p(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"@Request"})," annotation can used to define proxy\ninterfaces against HTTP requests in combination with the following annotations used on methods:"]}),"\n",(0,s.jsx)("tree",{children:(0,s.jsxs)("node-0",{children:[(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Header.html",children:"Header"})})," ",(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html",children:"Query"})})," ",(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/FormData.html",children:"FormData"})})," ",(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Path.html",children:"Path"})})," ",(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Content.html",children:"Content"})})," ",(0,s.jsx)("javac-annotation",{children:(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/annotation/Schema.html",children:"Schema"})})]})}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@RestPut("/pets/{petId}")\npublic void addPet(UpdatePetBean updatePet) {...}\n\n@Request\npublic interface UpdatePetBean {\n\n    @Path // {petId} inferred.\n    int getPetId();\n\n    @Query("verbose")\n    boolean isDebug();\n\n    @Header("*")\n    Map getAllHeaders();\n\n    @Content\n    Pet getPet();\n}\n'})}),(0,s.jsxs)(t.p,{children:["The example above is identical in behavior to specifying individual annotated parameters on the ",(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html",children:"@RestOp"}),"-annotated\nmethod:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@RestPut("/pets/{petId}")\npublic void addPet(\n    @Path("petId") int petId,\n    @Query("verbose") boolean debug,\n    @Header("*") Map allHeaders,\n    @Content UpdatePetBean pet\n)\n{...}\n'})}),(0,s.jsx)(t.p,{children:"The return types of the getters must be the supported parameter types for the HTTP-part annotation used."}),(0,s.jsx)(t.p,{children:"Schema-based serialization and parsing is used just as if used as individual parameter types.\nAnnotations used are the exact same used on REST parameters and have all the same feature support including automatic\nSwagger validation and documentation."}),(0,s.jsx)(t.p,{children:"Part names can either be explicitly specified or automatically inferred from the getter names."}),(0,s.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Request\npublic interface MyRequest {\n\n    // Schema-based query parameter "pipedCdlInts":\n    // Pipe-delimited list of comma-delimited lists of integers.\n    @Query\n    @Schema(\n        collectionFormat="pipes"\n        items=@Items(\n            items=@SubItems(\n                collectionFormat="csv"\n                type="integer",\n                minimum=1,\n                maximum=100\n            ),\n            maximumLength=10\n        )\n    )\n    int[][] getPipedCdlInts();\n}\n'})})})]}),"\n",(0,s.jsxs)(t.p,{children:["For clarity, the ",(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"@Request"})," annotation can be defined on the parameter, class, or both."]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@RestPut("/pets/{petId}")\npublic void addPet(@Request UpdatePetBean updatePet) {...}\n\n@Request\npublic interface UpdatePetBean {...}\n'})})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);