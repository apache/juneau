"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[5450],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var a=n(96540);const s={},r=a.createContext(s);function l(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:t},e.children)}},93070:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"topics/11.10.01.RestProxyBasics","title":"REST Proxy Basics","description":"One of the more powerful features of the REST client class is the ability to produce Java interface proxies against","source":"@site/docs/topics/11.10.01.RestProxyBasics.md","sourceDirName":"topics","slug":"/topics/RestProxyBasics","permalink":"/docs/topics/RestProxyBasics","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/11.10.01.RestProxyBasics.md","tags":[],"version":"current","frontMatter":{"title":"REST Proxy Basics","slug":"RestProxyBasics"},"sidebar":"mainSidebar","previous":{"title":"11.9. Interceptors","permalink":"/docs/topics/Interceptors"},"next":{"title":"11.10.2. @Remote","permalink":"/docs/topics/Remote"}}');var s=n(74848),r=n(28453);const l={title:"REST Proxy Basics",slug:"RestProxyBasics"},i=void 0,o={},c=[{value:"Default Values",id:"default-values",level:2},{value:"Basic Usage - Parameter-Level Defaults",id:"basic-usage---parameter-level-defaults",level:3},{value:"Supported Annotations",id:"supported-annotations",level:3},{value:"Method-Level Defaults (Alternative Approach)",id:"method-level-defaults-alternative-approach",level:3},{value:"Precedence: Parameter vs. Method Level",id:"precedence-parameter-vs-method-level",level:3},{value:"Content Body Defaults",id:"content-body-defaults",level:3},{value:"Use Cases",id:"use-cases",level:3}];function d(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"One of the more powerful features of the REST client class is the ability to produce Java interface proxies against\narbitrary 3rd party REST resources."}),"\n",(0,s.jsx)(t.p,{children:"The methods to retrieve remote interfaces are:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/client/RestClient.html",target:"_blank",children:"RestClient"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/client/RestClient.html#getRemote(java.lang.Class)",target:"_blank",children:"getRemote(Class)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/client/RestClient.html#getRemote(java.lang.Class)",target:"_blank",children:"getRemote(Class,Object)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/client/RestClient.html#getRemote(java.lang.Class)",target:"_blank",children:"getRemote(Class,Object,Serializer,Parser)"})})})]}),"\n",(0,s.jsx)(t.p,{children:"Annotations are used on the interface and interface methods to specify how to convert input and output to HTTP headers,\nquery parameters, form post parameters, or request/response bodies:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsxs)("node-0",{children:[(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/remote/Remote.html",target:"_blank",children:"Remote"})})," - Applied to interface class."]}),(0,s.jsxs)("node-0",{children:[(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/remote/RemoteOp.html",target:"_blank",children:"RemoteOp"})})," - Applied to interface methods."]}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Content.html",target:"_blank",children:"Content"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Header.html",target:"_blank",children:"Header"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/FormData.html",target:"_blank",children:"FormData"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html",target:"_blank",children:"Query"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Path.html",target:"_blank",children:"Path"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Request.html",target:"_blank",children:"Request"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Response.html",target:"_blank",children:"Response"})})})]}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    @RemotePost("/pets")\n    Pet addPet(\n        @Content CreatePet createPet,\n        @Header("E-Tag") UUID etag,\n        @Query("debug") boolean debug\n    );\n}\n'})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// Use a RestClient with default JSON 5 support.\nRestClient client = RestClient.create().json5().build();\n\n// Instantiate our proxy interface.\nPetStore store = client.getRemote(PetStore.class, "http://localhost:10000");\n\n// Use it to create a pet.\nCreatePet createPet = new CreatePet("Fluffy", 9.99);\nPet pet = store.addPet(createPet, UUID.randomUUID(), true);\n'})})]}),"\n",(0,s.jsx)(t.p,{children:"The call above translates to the following REST call:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"POST http://localhost:10000/petstore/pets?debug=true HTTP/1.1\nAccept: application/json\nContent-Type: application/json\nE-Tag: 475588d4-0b27-4f56-9296-cc683251d314\n\n{\n    name: 'Fluffy',\n    price: 9.99\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/remote/RemoteOp.html",target:"_blank",children:"@RemoteOp"})," annotations can be eliminated if you use specific naming conventions on your method names to identify\nthe HTTP method and path."]}),"\n",(0,s.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    // @RemoteOp optional since method and path is inferred from method name.\n    String postPets(@Content CreatePet pet);\n}\n'})})}),"\n",(0,s.jsx)(t.h2,{id:"default-values",children:"Default Values"}),"\n",(0,s.jsxs)(t.p,{children:["As of Juneau 9.2.0, you can specify default values for method parameters using the ",(0,s.jsx)(t.code,{children:"def"})," attribute. Defaults can be specified either at the ",(0,s.jsx)(t.strong,{children:"method level"})," (on the method itself) or at the ",(0,s.jsx)(t.strong,{children:"parameter level"})," (on individual parameters). Parameter-level defaults take precedence when both are present."]}),"\n",(0,s.jsx)(t.h3,{id:"basic-usage---parameter-level-defaults",children:"Basic Usage - Parameter-Level Defaults"}),"\n",(0,s.jsx)(t.p,{children:"The most straightforward approach is to specify defaults directly on the parameters:"}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    @RemoteGet("/pets")\n    Pet[] getPets(\n        @Header(name="Accept-Language", def="en-US") String language,\n        @Query(name="limit", def="10") Integer limit\n    );\n}\n'})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'PetStore store = client.getRemote(PetStore.class, "http://localhost:10000");\n\n// Uses default language="en-US" and limit=10\nPet[] pets1 = store.getPets(null, null);\n\n// Uses custom language, default limit=10\nPet[] pets2 = store.getPets("fr-FR", null);\n\n// Uses default language="en-US", custom limit\nPet[] pets3 = store.getPets(null, 25);\n'})})]}),"\n",(0,s.jsx)(t.p,{children:"The above examples translate to the following REST calls:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-text",children:"GET http://localhost:10000/petstore/pets?limit=10 HTTP/1.1\nAccept-Language: en-US\n\nGET http://localhost:10000/petstore/pets?limit=10 HTTP/1.1\nAccept-Language: fr-FR\n\nGET http://localhost:10000/petstore/pets?limit=25 HTTP/1.1\nAccept-Language: en-US\n"})}),"\n",(0,s.jsx)(t.h3,{id:"supported-annotations",children:"Supported Annotations"}),"\n",(0,s.jsx)(t.p,{children:"Default values are supported on the following annotations:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:'@Header(name="...", def="...")'})," - HTTP request headers"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:'@Query(name="...", def="...")'})," - Query string parameters"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:'@FormData(name="...", def="...")'})," - Form post parameters"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:'@Path(name="...", def="...")'})," - Path variables"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:'@Content(def="...")'})," - Request body (new in 9.2.0)"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"method-level-defaults-alternative-approach",children:"Method-Level Defaults (Alternative Approach)"}),"\n",(0,s.jsx)(t.p,{children:"You can also specify defaults at the method level, which can be useful for interface-level configuration:"}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/api")\npublic interface MyApi {\n\n    @RemotePost("/resource")\n    @Header(name="X-API-Key", def="default-key")\n    @Header(name="X-Client-Version", def="1.0")\n    @Query(name="format", def="json")\n    @Content(def="{}")\n    String createResource(\n        @Header("X-API-Key") String apiKey,\n        @Header("X-Client-Version") String clientVersion,\n        @Query("format") String format,\n        @Content String data\n    );\n}\n'})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'// All parameters null - all defaults applied\nString result = api.createResource(null, null, null, null);\n// POST /api/resource?format=json\n// X-API-Key: default-key\n// X-Client-Version: 1.0\n// Content: {}\n\n// Mix of provided and null values\nString result = api.createResource("my-key", null, "xml", "{data:true}");\n// POST /api/resource?format=xml\n// X-API-Key: my-key\n// X-Client-Version: 1.0\n// Content: {data:true}\n'})})]}),"\n",(0,s.jsx)(t.h3,{id:"precedence-parameter-vs-method-level",children:"Precedence: Parameter vs. Method Level"}),"\n",(0,s.jsxs)(t.p,{children:["When defaults are specified at both the parameter and method level, the ",(0,s.jsx)(t.strong,{children:"parameter-level default takes precedence"}),":"]}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/api")\npublic interface MyApi {\n\n    @RemoteGet("/data")\n    @Query(name="format", def="xml")  // Method-level default\n    String getData(\n        @Query(name="format", def="json") String format  // Parameter-level default (takes precedence)\n    );\n}\n'})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// Uses parameter-level default: format=json\nString result = api.getData(null);\n"})})]}),"\n",(0,s.jsx)(t.p,{children:"This precedence allows you to:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Define common defaults at the method level for multiple parameters"}),"\n",(0,s.jsx)(t.li,{children:"Override specific parameters with more specific defaults at the parameter level"}),"\n",(0,s.jsx)(t.li,{children:"Keep your interface clean by placing defaults where they're most relevant"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"content-body-defaults",children:"Content Body Defaults"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"@Content"})," annotation now supports a ",(0,s.jsx)(t.code,{children:"def"})," attribute for specifying a default request body:"]}),"\n",(0,s.jsxs)(t.admonition,{title:"Example",type:"tip",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    @RemotePost("/pets")\n    @Content(def="{name:\'Unknown\',price:0}")\n    Pet addPet(@Content CreatePet pet);\n}\n'})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:"// When pet is null, sends default JSON\nPet result = store.addPet(null);\n// POST /petstore/pets\n// Content-Type: application/json\n// Content: {name:'Unknown',price:0}\n"})})]}),"\n",(0,s.jsx)(t.h3,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsx)(t.p,{children:"Default values are particularly useful for:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"API Keys and Authentication"}),": Provide default credentials that can be overridden per call"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Versioning"}),": Specify default API versions"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Pagination"}),": Set default page sizes and limits"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Content Negotiation"}),": Specify default content types and languages"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Feature Flags"}),": Enable/disable features with default values"]}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Default values are only applied when the parameter value is ",(0,s.jsx)(t.code,{children:"null"}),". Empty strings, zero values, and empty collections are considered valid values and will not trigger the default."]})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);