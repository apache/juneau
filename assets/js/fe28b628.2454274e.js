"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8631],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var o=t(96540);const s={},r=o.createContext(s);function d(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:n},e.children)}},64505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"topics/10.10.03.RemoteMethod","title":"@RemoteOp","description":"The @RemoteOp annotation is applied to methods of","source":"@site/docs-staging/topics/10.10.03.RemoteMethod.md","sourceDirName":"topics","slug":"/topics/10.10.03.RemoteMethod","permalink":"/docs/topics/10.10.03.RemoteMethod","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/10.10.03.RemoteMethod.md","tags":[],"version":"current","frontMatter":{"title":"@RemoteOp"},"sidebar":"mainSidebar","previous":{"title":"10.10.2. @Remote","permalink":"/docs/topics/10.10.02.Remote"},"next":{"title":"10.10.4. @Content","permalink":"/docs/topics/10.10.04.Content"}}');var s=t(74848),r=t(28453);const d={title:"@RemoteOp"},i=void 0,h={},c=[{value:"@RemoteOp(method/path)",id:"remoteopmethodpath",level:4},{value:"Inferred method/path",id:"inferred-methodpath",level:4},{value:"@RemoteOp(returns)",id:"remoteopreturns",level:4}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html",children:"@RemoteOp"})," annotation is applied to methods of\n@Remote-annotated interfaces to identify REST endpoints."]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html",children:"RemoteOp"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html#method",children:"method"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html#path",children:"path"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html#returns",children:"returns"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Specialized sub-annotations are provided for common HTTP methods:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteGet.html",children:"RemoteGet"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemotePost.html",children:"RemotePost"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemotePut.html",children:"RemotePut"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemotePatch.html",children:"RemotePatch"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteDelete.html",children:"RemoteDelete"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"remoteopmethodpath",children:"@RemoteOp(method/path)"}),"\n",(0,s.jsxs)(n.p,{children:["The HTTP method and path are mapped to a Java method using the ",(0,s.jsx)(n.code,{children:"method"})," and ",(0,s.jsx)(n.code,{children:"path"})," annotations."]}),"\n",(0,s.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Remote\npublic interface PetStore {\n\n    // GET /pets/{petId}\n    @RemoteGet("/pets/{petId}")\n    Pet getPet(@Path("petId") int id);\n}\n'})})}),"\n",(0,s.jsx)(n.p,{children:"The Java method name can be anything."}),"\n",(0,s.jsx)(n.h4,{id:"inferred-methodpath",children:"Inferred method/path"}),"\n",(0,s.jsxs)(n.p,{children:["In such cases, ",(0,s.jsx)(n.code,{children:"method"})," and ",(0,s.jsx)(n.code,{children:"path"})," annotations are optional if you follow certain naming conventions on your method that\nidentify the method and path.\nFor example, the ",(0,s.jsx)(n.code,{children:"getPet"})," method below defaults to ",(0,s.jsx)(n.code,{children:"GET /pet"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Remote\npublic interface PetStore {\n\n    // GET /pet\n    @RemoteOp\n    Pet getPet(...);\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"In such cases, the @RemoteOp annotation is optional.\nMethod names matching the following pattern are assumed to be implying the HTTP method name:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"(get|put|post|delete|options|head|connect|trace|patch).*\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"do(?i)(get|put|post|delete|options|head|connect|trace|patch)\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"tip",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Java method name"}),(0,s.jsx)(n.th,{children:"Inferred HTTP method"}),(0,s.jsx)(n.th,{children:"Inferred HTTP path"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"getPet()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GET"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/pet"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"get()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GET"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"postPet()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"POST"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/pet"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fooPet()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[default]"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/fooPet"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doGet()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GET"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doGET()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GET"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"doFoo()"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[default]"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/doFoo"})})]})]})]})}),"\n",(0,s.jsx)(n.h4,{id:"remoteopreturns",children:"@RemoteOp(returns)"}),"\n",(0,s.jsx)(n.p,{children:"The return type of the Java methods can be any of the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["void/",(0,s.jsx)(n.a,{href:"../apidocs/java/lang/Void.html",children:"Void"})]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Don't parse any response."}),"\n",(0,s.jsx)(n.li,{children:"Note that the method will still throw a runtime exception if an error HTTP status is returned."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Any parseable POJO"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The body of the response will be converted to the POJO using the parser defined on the ",(0,s.jsx)(n.code,{children:"RestClient"})," based on the ",(0,s.jsx)(n.code,{children:"Content-Type"})," of the response."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Any ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Response.html",children:"@Response"}),"-annotated type"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For returning custom response objects with status codes and headers."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"HttpResponse"})})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Returns the raw ",(0,s.jsx)(n.code,{children:"HttpResponse"})," returned by the inner ",(0,s.jsx)(n.code,{children:"HttpClient"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"../apidocs/java/io/Reader.html",children:"Reader"})})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Returns access to the raw reader of the response."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"../apidocs/java/io/InputStream.html",children:"InputStream"})})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Returns access to the raw input stream of the response."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.a,{href:"../apidocs/java/util/concurrent/Future.html",children:"Future"})," or ",(0,s.jsx)(n.a,{href:"../apidocs/java/util/concurrent/CompletableFuture.html",children:"CompletableFuture"})]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Of any type on this list for asynchronous processing."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you're only interested in the HTTP status code of the response, you can use the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html#returns()",children:"returns"})," annotation with a value of ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteReturn.html#STATUS",children:"STATUS"}),":"]}),"\n",(0,s.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Remote\npublic interface PetStore {\n\n    // POST /pets\n    // Returns HTTP status code.\n    @RemotePost(returns=STATUS)\n    int pets(...);\n}\n"})})}),"\n",(0,s.jsxs)(n.p,{children:["If your ",(0,s.jsx)(n.code,{children:"RestClient"})," does not have a parser associated with it, then the value is converted directly from a String using\nthe rules defined in ",(0,s.jsx)(n.a,{href:"/docs/topics/TODO",children:"TODO: POJO Categories"}),"."]})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);