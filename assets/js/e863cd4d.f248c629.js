"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[6164],{28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var l=a(96540);const s={},t=l.createContext(s);function r(e){const n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:n},e.children)}},38183:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"topics/02.26.07.XmlFormatAnnotation","title":"@Xml(format) Annotation","description":"The @Xml(format)) annotation can be used to tweak the","source":"@site/docs-staging/topics/02.26.07.XmlFormatAnnotation.md","sourceDirName":"topics","slug":"/topics/02.26.07.XmlFormatAnnotation","permalink":"/docs/topics/02.26.07.XmlFormatAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/02.26.07.XmlFormatAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@Xml(format) Annotation"},"sidebar":"mainSidebar","previous":{"title":"2.26.6. @XmlChildName Annotation","permalink":"/docs/topics/02.26.06.XmlChildNameAnnotation"},"next":{"title":"2.26.8. XML Namespaces","permalink":"/docs/topics/02.26.08.XmlNamespaces"}}');var s=a(74848),t=a(28453);const r={title:"@Xml(format) Annotation"},c=void 0,i={},o=[{value:"Example",id:"example",level:5},{value:"Example",id:"example-1",level:5},{value:"Example",id:"example-2",level:5},{value:"Example",id:"example-3",level:5}];function d(e){const n={a:"a",code:"code",em:"em",h5:"h5",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/Xml.html#format()",children:"@Xml(format)"})," annotation can be used to tweak the\nXML format of a POJO.\nThe value is set to an enum value of type ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html",children:"XmlFormat"}),".\nThis annotation can be applied to both classes and bean properties.\nThe ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ATTR",children:"XmlFormat.ATTR"})," format can be applied to bean\nproperties to serialize them as XML attributes instead of elements.\nNote that this only supports properties of simple types (e.g.\nstrings, numbers, booleans)."]}),"\n",(0,s.jsx)(n.h5,{id:"example",children:"Example"}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.ATTR)\n  public String a;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo'\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>foo</a>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object a='foo'/>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ATTRS",children:"XmlFormat.ATTRS"})," format can be applied to bean\nclasses to force all bean properties to be serialized as XML attributes instead of child elements."]}),"\n",(0,s.jsx)(n.h5,{id:"example-1",children:"Example"}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Xml(format=XmlFormat.ATTRS)\nclass MyBean {\n  public String a;\n  public int b;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo',\n  b: 123\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>foo</a>\n  <b>123</b>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object a='foo' b='123'/>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ELEMENT",children:"XmlFormat.ELEMENT"})," format can be applied to\nbean properties to override the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ATTRS",children:"XmlFormat.ATTRS"}),"\nformat applied on the bean class."]}),"\n",(0,s.jsx)(n.h5,{id:"example-2",children:"Example"}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Xml(format=XmlFormat.ATTRS)\nclass MyBean {\n  public String a;\n  @Xml(format=XmlFormat.ELEMENT)\n  public int b;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo',\n  b: 123\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>foo</a>\n  <b>123</b>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object a='foo'>\n  <b>123</b>\n</object>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ATTRS",children:"XmlFormat.ATTRS"})," format can be applied to a\nsingle bean property of type ",(0,s.jsx)(n.code,{children:"Map"})," to denote arbitrary XML attribute values on the element.\nThese can be mixed with other ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ATTR",children:"XmlFormat.ATTR"}),"\nannotated properties but there must not be an overlap in bean property names and map keys."]}),"\n",(0,s.jsx)(n.h5,{id:"example-3",children:"Example"}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.ATTRS)\n  public Map<String,Object> a;\n  @Xml(format=XmlFormat.ATTR)\n  public int b;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: {\n    k1: 'foo',\n    k2: 123\n  },\n  b: 456\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>\n    <k1>foo</k1>\n    <k2 _type='number'>123</k2>\n  </a>\n  <b>456</b>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object k1='foo' k2='123' b='456'/>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#COLLAPSED",children:"XmlFormat.COLLAPSED"})," format can be applied\nto bean properties of type array/",(0,s.jsx)(n.code,{children:"Collection"}),".\nThis causes the child objects to be serialized directly inside the bean element.\nThis format must be used in conjunction with ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/Xml.html#childName()",children:"@Xml(childName)"})," to differentiate which collection the values came from if you plan on parsing the output back into beans.\nNote that child names must not conflict with other property names."]}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'class MyBean {\n  @Xml(childName="A",format=XmlFormat.COLLAPSED)\n  public String[] a;\n  @Xml(childName="B",format=XmlFormat.COLLAPSED)\n  public int[] b;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: ['foo','bar'],\n  b: [123,456]\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>\n    <string>foo</string>\n    <string>bar</string>\n  </a>\n  <b>\n    <number>123</number>\n    <number>456</number>\n  </b>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <A>foo</A>\n  <A>bar</A>\n  <B>123</B>\n  <B>456</B>\n</object>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ELEMENTS",children:"XmlFormat.ELEMENTS"})," format can be applied to\na single bean property of either a simple type or array/",(0,s.jsx)(n.code,{children:"Collection"}),".\nIt allows free-form child elements to be formed.\nAll other properties on the bean MUST be serialized as attributes."]}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.ATTR)\n  public String a;\n  @Xml(format=XmlFormat.ELEMENTS)\n  public String b;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo',\n  b: 'bar'\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object a='foo'>\n  bar\n</object>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.ATTR)\n  public String a;\n  @Xml(format=XmlFormat.ELEMENTS)\n  public Object[] b;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo',\n  b: ['bar', 'baz', 123, true, null]\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object a='foo'>\n  bar\n  baz\n  123\n  true\n</object>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#MIXED",children:"XmlFormat.MIXED"})," format is similar to ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#ELEMENTS",children:"XmlFormat.ELEMENTS"})," except elements names on primitive types (string/number/boolean/null) are stripped from the output.\nThis format particularly useful when combined with bean dictionaries to produce mixed content.\nThe bean dictionary isn't used during serializationbut it is needed during parsing to resolve bean types.\nThe ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#MIXED_PWS",children:"XmlFormat.MIXED_PWS"})," format identical to ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#MIXED",children:"XmlFormat.MIXED"})," except whitespace characters are preserved in the output."]}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotations"}),(0,s.jsx)("th",{children:"With annotations"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'class MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  @Beanp(dictionary={MyBeanX.class, MyBeanY.class})\n  public Object[] a;\n}\n\n@Bean(typeName="X")\nclass MyBeanX {\n  @Xml(format=XmlFormat.ATTR)\n  public String b;\n}\n\n@Bean(typeName="Y")\nclass MyBeanY {\n  @Xml(format=XmlFormat.ATTR)\n  public String c;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: [\n    'foo',\n    { _type:'X', b:'bar' },\n    'baz',\n    { _type:'Y', c:'qux' },\n    'quux'\n  ]\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>\n    <string>foo</string>\n    <object>\n      <b>bar</b>\n    </object>\n    <string>baz</string>\n    <object>\n      <c>qux</c>\n    </object>\n    <string>quux</string>\n  </a>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  foo<X b='bar'/>baz<Y c='qux'/>quux\n</object>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["Whitespace (tabs and newlines) are not added to MIXED child nodes in readable-output mode.\nThis helps ensures strings in the serialized output can be losslessly parsed back into their original forms when they\ncontain whitespace characters.\nIf the ",(0,s.jsx)(n.a,{href:"../apidocs/javax/xml/stream/XMLInputFactory.html#IS_REPLACING_ENTITY_REFERENCES",children:"XMLInputFactory.IS_REPLACING_ENTITY_REFERENCES"}),' setting was not useless in Java, we could support lossless readable XML for MIXED content.\nBut as of Java 8, it still does not work.\nXML suffers from other deficiencies as well that affect MIXED content.\nFor example,  and  are equivalent in XML and indistinguishable by the Java XML parsers.\nThis makes it impossible to differentiate between an empty element and an element containing an empty string.\nThis causes empty strings to get lost in translation.\nTo alleviate this, we use the constructs "',(0,s.jsx)(n.em,{children:"xE000"}),'" to represent an empty string, and "',(0,s.jsx)(n.em,{children:"x0020"}),'" to represent leading and\ntrailing spaces.\nThe examples below show how whitespace is handled under various circumstances:']}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"XML"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a = null;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X/>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a = "";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_xE000_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a = " ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a = "  ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020__x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a = "  foobar  ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020_ foobar _x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT_PWS)\n  public String a = null;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X/>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT_PWS)\n  public String a = "";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_xE000_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT_PWS)\n  public String a = " ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X> </X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT_PWS)\n  public String a = "  ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>  </X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.TEXT_PWS)\n  public String a = "  foobar  ";\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>  foobar  </X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  public String[] a = null;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X/>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  public String[] a = {""};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_xE000_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  public String[] a = {" "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  public String[] a = {"  "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020__x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED)\n  public String[] a = {"  foobar  "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_x0020_ foobar _x0020_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED_PWS)\n  public String[] a = null;\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X/>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED_PWS)\n  public String[] a = {""};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>_xE000_</X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED_PWS)\n  public String[] a = {" "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X> </X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED_PWS)\n  public String[] a = {"  "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>  </X>\n"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(typeName="X")\nclass MyBean {\n  @Xml(format=XmlFormat.MIXED_PWS)\n  public String[] a = {"  foobar  "};\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<X>  foobar  </X>\n"})})})]})]}),"\n",(0,s.jsx)(n.p,{children:"It should be noted that when using MIXED, you are not guaranteed to parse back the exact same content since side-by-side\nstrings in the content will end up concatenated when parsed."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#TEXT",children:"XmlFormat.TEXT"})," format is similar to ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#MIXED",children:"XmlFormat.MIXED"})," except it's meant for solitary objects that get serialized as simple child text nodes.\nAny object that can be serialize to a ",(0,s.jsx)(n.code,{children:"String"})," can be used.\nThe ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#TEXT_PWS",children:"XmlFormat.TEXT_PWS"})," is the same except\nwhitespace is preserved in the output."]}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"Without annotations"}),(0,s.jsx)("th",{children:"With annotations"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.TEXT)\n  public String a;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'foo'\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  <a>foo</a>\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  foo\n</object>\n"})})})]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#XMLTEXT",children:"XmlFormat.XMLTEXT"})," format is similar to ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#TEXT",children:"XmlFormat.TEXT"})," except it's meant for strings containing XML that should be serialized as-is to the document.\nAny object that can be serialize to a ",(0,s.jsx)(n.code,{children:"String"})," can be used.\nDuring parsing, the element content gets parsed with the rest of the document and then re-serialized to XML before being\nset as the property value.\nThis process may not be perfect (e.g.\ndouble quotes may be replaced by single quotes, etc...)."]}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Data type"}),(0,s.jsx)("th",{children:"JSON example"}),(0,s.jsx)("th",{children:"With TEXT annotation"}),(0,s.jsx)("th",{children:"With XMLTEXT annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class MyBean {\n  @Xml(format=XmlFormat.XMLTEXT)\n  public String a;\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  a: 'Some <b>XML</b> text'\n}\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  Some &lt;b&gt;XML&lt;/b&gt; text\n</object>\n"})})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<object>\n  Some <b>XML</b> text\n</object>\n"})})})]})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);