"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[4609],{16944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"topics/08.18.05.HtmlUiCustomization","title":"UI Customization","description":"The HTML views of POJOs can somewhat be considered a rudimentary User Interface.","source":"@site/docs-staging/topics/08.18.05.HtmlUiCustomization.md","sourceDirName":"topics","slug":"/topics/08.18.05.HtmlUiCustomization","permalink":"/docs/topics/08.18.05.HtmlUiCustomization","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/08.18.05.HtmlUiCustomization.md","tags":[],"version":"current","frontMatter":{"title":"UI Customization"},"sidebar":"mainSidebar","previous":{"title":"8.18.4. HTML Predefined Widgets","permalink":"/docs/topics/08.18.04.HtmlPredefinedWidgets"},"next":{"title":"8.18.6. HTML Stylesheets","permalink":"/docs/topics/08.18.06.HtmlStylesheets"}}');var o=t(74848),a=t(28453);const i={title:"UI Customization"},r=void 0,c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The HTML views of POJOs can somewhat be considered a rudimentary User Interface.\nIn reality, a better term for them would be a Developer Interface as they're meant to be used primarily by developers\nand not end users.\nDespite that distinction, it is possible to 'brand' the HTML page to whatever you desire."}),"\n",(0,o.jsx)(n.p,{children:"The sample root page below includes some default branding for Juneau and Apache:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:"http://localhost:10000/helloWorld\n"})}),"\n",(0,o.jsx)(n.p,{children:"The Juneau REST framework does not provide specific branding support (i.e. there is no concept of a brand icon).\nInstead, it just uses the existing open-ended API for defining branding via annotations on your REST classes."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(\n    // Optional external configuration file.\n    config="$S{juneau.configFile}",\n)\n@HtmlDocConfig(\n\n    // Default stylesheet to use for the page.\n    // Can be overridden from external config file.\n    // Default is DevOps look-and-feel (aka Depression look-and-feel).\n    stylesheet="$C{REST/theme,servlet:/htdocs/themes/devops.css}",\n\n    // Default page header contents.\n    header={\n        "$RS{title}",  // Use @Rest(title)\n        "$RS{operationSummary,description}", // Use either @RestOp(summary) or @Rest(description)\n        "$C{REST/header}"  // Extra header HTML defined in external config file.\n    },\n\n    // Default contents to add to the  section of the HTML page.\n    // Use it to add a favicon link to the page.\n    head={\n        ""\n    },\n\n    // Basic page navigation links.\n    navlinks={\n        "up: request:/.."\n    },\n\n    // No default page footer contents.\n    // Can be overridden from external config file.\n    footer="$C{REST/footer}"\n)\n\npublic interface BasicUniversalConfig {}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Notice how this is implemented using nested ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/HtmlDocConfig.html",children:"@HtmlDocConfig"})," annotations nested within parent configurations.\nA simpler approach is to implement your interface on your REST resource class."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(...)\n@HtmlDocConfig(\n    widgets={\n        ContentTypeMenuItem.class,\n        ThemeMenuItem.class\n    },\n    navlinks={\n        "options: ?method=OPTIONS",\n        "$W{ContentTypeMenuItem}",\n        "$W{ThemeMenuItem}",\n        "source: $C{Source/gitHub}/org/apache/juneau/examples/rest/$R{servletClassSimple}.java"\n    },\n    aside={\n        "<div class=\'text\'>",\n        "\t<p>This is an example of a \'router\' page that serves as a jumping-off point to child resources.</p>",\n        "\t<p>Resources can be nested arbitrarily deep through router pages.</p>",\n        "\t<p>Note the <span class=\'link\'>OPTIONS</span> link provided that lets you see the generated swagger doc for this page.</p>",\n        "\t<p>Also note the <span class=\'link\'>SOURCE</span> link on these pages to view the source code for the page.</p>",\n        "\t<p>All content on pages in the UI are serialized POJOs. In this case, it\'s a serialized array of beans with 2 properties, \'name\' and \'description\'.</p>",\n        "\t<p>Other features (such as this aside) are added through annotations.</p>",\n        "</div>"\n    },\n    asideFloat="RIGHT"\n)\npublic class RootResources extends BasicRestServletGroup {...}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The default annotation values use ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/vars/ConfigVar.html",children:"$C"})," variables to pull in\nvalues from an optional external configuration file such as the one shown below:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"#=======================================================================================================================\n# REST settings\n#=======================================================================================================================\n[REST]\n\nstaticFiles = htdocs:files/htdocs\n\n# Stylesheet to use for HTML views.\ntheme = servlet:/htdocs/themes/devops.css\n\nheaderIcon = servlet:/htdocs/images/juneau.png\nheaderLink = http://juneau.apache.org\nfooterIcon = servlet:/htdocs/images/asf.png\nfooterLink = http://www.apache.org\n\nfavicon = $C{REST/headerIcon}\nheader =\n\nfooter =\n"})}),"\n",(0,o.jsx)(n.p,{children:'The take-away here is that the "User Interface" is open-ended, lets you define pretty much anything you want through\narbitrary HTML, and allows you either hardcode your interface inside annotations or pull them in via string variables\nfrom other places such as external config files.'}),"\n",(0,o.jsx)(n.admonition,{title:"See Also",type:"info",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"..",children:"TODO-UI Customization"})})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(96540);const o={},a=s.createContext(o);function i(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);