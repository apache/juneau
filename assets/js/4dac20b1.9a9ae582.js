"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1758],{21931:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"release-notes/5.1.0.00","title":"Release 5.1.0.0","description":"Date: Jan 18, 2014","source":"@site/docs-staging/release-notes/5.1.0.00.md","sourceDirName":"release-notes","slug":"/release-notes/5.1.0.00","permalink":"/docs/release-notes/5.1.0.00","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/release-notes/5.1.0.00.md","tags":[],"version":"current","frontMatter":{"title":"Release 5.1.0.0"},"sidebar":"tutorialSidebar","previous":{"title":"5.1.0.01","permalink":"/docs/release-notes/5.1.0.01"},"next":{"title":"5.0.0.36","permalink":"/docs/release-notes/5.0.0.36"}}');var t=s(74848),a=s(28453);const i={title:"Release 5.1.0.0"},l="Release 5.1.0.0",o={},c=[{value:"Major changes",id:"major-changes",level:3},{value:"Other changes",id:"other-changes",level:3}];function d(e){const n={a:"a",code:"code",del:"del",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"release-5100",children:"Release 5.1.0.0"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Date:"})," Jan 18, 2014"]}),"\n",(0,t.jsx)(n.p,{children:"Juno 5.1.0.0 is a major update."}),"\n",(0,t.jsx)(n.h3,{id:"major-changes",children:"Major changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Brand new REST client API that uses Apache HttpClient for HTTP communication.\nThe new client API is simply a thin layer on top of ",(0,t.jsx)(n.code,{children:"HttpClient"})," that performs serialization and parsing using Juno\nparsers but leaves all the details of the HTTP connection to the Apache code.\nSee the  ",(0,t.jsx)(n.del,{children:"client"})," package for details."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.code,{children:"org.apache.juneau.rest.client.jazz"})," package and ",(0,t.jsx)(n.code,{children:"org.apache.juneau.rest.client.jazz.JazzRestClient"})," class for performing REST operations against Jazz servers.\nIncludes improved support for FORM authentication, and better SSL certificate validation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Completely redesigned URL-Encoding support.\nSee  ",(0,t.jsx)(n.del,{children:"urlencoding"})," package for details."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Changes to Parser API."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Removal of ",(0,t.jsx)(n.code,{children:"ExtendedReaderParser"})," abstract class and moved methods into ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/parser/ReaderParser.html",children:"ReaderParser"})," class."]}),"\n",(0,t.jsxs)(n.li,{children:["Removal of ",(0,t.jsx)(n.code,{children:"DataFormat"})," class from API since it was no longer necessary due to API change above."]}),"\n",(0,t.jsxs)(n.li,{children:["Removal of ",(0,t.jsx)(n.code,{children:"ParserStringReader"})," class.\nThis was a reader optimized to work with ",(0,t.jsx)(n.code,{children:"String"})," input.\nHowever, it could interfere with garbage collection of the original string object.\nInstead, the existing ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/parser/ParserReader.html",children:"ParserReader"})," was enhanced to work well\nwith ",(0,t.jsx)(n.code,{children:"String"})," input, and tests show no significant performance differences."]}),"\n",(0,t.jsxs)(n.li,{children:["New ",(0,t.jsx)(n.code,{children:"org.apache.juneau.parser.Parser.parse(Object,int,ClassMeta)"})," convenience method added."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"other-changes",children:"Other changes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Various new methods added to  ",(0,t.jsx)(n.del,{children:"StringUtils"})," and  ",(0,t.jsx)(n.del,{children:"ClassUtils"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Improved support on ",(0,t.jsx)(n.del,{children:"BeanContext.getClassMetaFromString(String)"}),".\nNow supports resolving ",(0,t.jsx)(n.code,{children:'"long[]"'}),", and so forth."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"ResourceDescription"})," name parameter is now automatically URL-encoded in links."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../apidocs/oajr/RestRequest.html",children:"RestRequest"})," now correctly handles cases involving URL-encoded characters in the path info portion of URLs (e.g. ",(0,t.jsx)(n.code,{children:"http://host/contextRoot/foo%2Fbar"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Removed lazy-initialization that required locking in ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/ClassMeta.html",children:"ClassMeta"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.code,{children:"BeanContext.setDefaultParser(ReaderParser)"})," method added for specifying a default parser to use in a bean context (used when converting beans to ",(0,t.jsx)(n.code,{children:"Strings"})," using ",(0,t.jsx)(n.del,{children:"BeanContext.convertToType(Object,Class)"}),").\nOld behavior simply used the default JSON serializer in these cases."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"More consistent handling of exceptions across all parsers."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Minor changes to ",(0,t.jsx)(n.a,{href:"../apidocs/oajr/RestRequest.html",children:"RestRequest"})," class."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Changed the order of parameters on ",(0,t.jsx)(n.del,{children:"RestRequest.getParameter(String,Class)"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Added ",(0,t.jsx)(n.code,{children:"RestRequest.getMapParameter(String,Class,Class,Class)"})," and ",(0,t.jsx)(n.code,{children:"RestRequest.getCollectionParameter(String,Class,Class)"})," methods."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(96540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);