"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7384],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(96540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},47135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"topics/16.01.00.JuneauPetstoreBasics","title":"juneau-petstore Basics","description":"The PetStore application is an functional application meant to demonstrate using Juneau with Spring Boot to create an","source":"@site/docs/topics/16.01.00.JuneauPetstoreBasics.md","sourceDirName":"topics","slug":"/topics/JuneauPetstoreBasics","permalink":"/docs/topics/JuneauPetstoreBasics","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/16.01.00.JuneauPetstoreBasics.md","tags":[],"version":"current","frontMatter":{"title":"juneau-petstore Basics","slug":"JuneauPetstoreBasics"},"sidebar":"mainSidebar","previous":{"title":"15.4. Building","permalink":"/docs/topics/MySpringBootMicroserviceBuilding"},"next":{"title":"16.2. Running the App","permalink":"/docs/topics/JuneauPetstoreRunning"}}');var i=n(74848),o=n(28453);const a={title:"juneau-petstore Basics",slug:"JuneauPetstoreBasics"},r=void 0,c={},u=[];function l(e){const t={code:"code",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"PetStore"})," application is an functional application meant to demonstrate using Juneau with Spring Boot to create an\nend-to-end client/server REST API."]}),"\n",(0,i.jsx)(t.p,{children:"What makes Juneau unique is the ability to create Java interfaces that behave just like RPC but using REST as the\nunderlying protocol."}),"\n",(0,i.jsx)(t.p,{children:"And the technology it not tied to any platform so it can be used in any environment by simply pulling in Maven\ndependencies."}),"\n",(0,i.jsx)(t.p,{children:"The server-side need only provide the ability to host a servlet."}),"\n",(0,i.jsx)(t.p,{children:"Visit the GitHub project hosting the application."}),"\n",(0,i.jsx)(t.p,{children:"The project is broken down into the following subprojects:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"juneau-petstore-api"})," - Contains the Java interface and DTOs for the petstore application."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"juneau-petstore-server"})," - Contains the server-side Java implementation of the petstore Java interface as a REST resource."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"juneau-petstore-client"})," - Contains the client-side Java proxy of the petstore Java interface."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);