"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8124],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(96540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},62267:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"topics/02.24.01.JsonBasics","title":"JSON Basics","description":"Juneau supports converting arbitrary POJOs to and from JSON using ultra-efficient serializers and parsers.","source":"@site/docs/topics/02.24.01.JsonBasics.md","sourceDirName":"topics","slug":"/topics/JsonBasics","permalink":"/docs/topics/JsonBasics","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.24.01.JsonBasics.md","tags":[],"version":"current","frontMatter":{"title":"JSON Basics","slug":"JsonBasics"},"sidebar":"mainSidebar","previous":{"title":"2.23. Object Tools","permalink":"/docs/topics/ObjectTools"},"next":{"title":"2.24.2. JSON Methodology","permalink":"/docs/topics/JsonMethodology"}}');var r=s(74848),a=s(28453);const i={title:"JSON Basics",slug:"JsonBasics"},o=void 0,c={},l=[{value:"Sample Beans",id:"sample-beans",level:5},{value:"Sample Code",id:"sample-code",level:5},{value:"Normal JSON",id:"normal-json",level:5},{value:"JSON5",id:"json5",level:5}];function d(e){const n={code:"code",h5:"h5",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Juneau supports converting arbitrary POJOs to and from JSON using ultra-efficient serializers and parsers.\nThe JSON serializer converts POJOs directly to JSON without the need for intermediate DOM objects using a\nhighly-efficient state machine.\nLikewise, the ",(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JSON parser"})," creates POJOs directly from JSON without the need for intermediate DOM objects."]}),"\n",(0,r.jsx)(n.p,{children:"The following example shows JSON for a typical bean:"}),"\n",(0,r.jsx)(n.h5,{id:"sample-beans",children:"Sample Beans"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public class Person {\n\n    // Bean properties\n    public String name;\n    @Swap(TemporalCalendarSwap.IsoInstant.class) public Calendar birthDate;\n    public List addresses;\n\n    // Getters/setters omitted\n}\n\npublic class Address {\n\n    // Bean properties\n    public String street, city;\n    public StateEnum state;\n    public int zip;\n    public boolean isCurrent;\n\n    // Getters/setters omitted\n}\n"})}),"\n",(0,r.jsx)(n.h5,{id:"sample-code",children:"Sample Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'Person person = new Person()\n    .name("John Smith")\n    .birthDate("1946-08-12T00:00:00Z")\n    .addresses(\n        new Address()\n            .street("100 Main Street")\n            .city("Anywhereville")\n            .state(NY)\n            .zip(12345)\n            .isCurrent(true);\n    );\n'})}),"\n",(0,r.jsx)(n.h5,{id:"normal-json",children:"Normal JSON"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "name": "John Smith",\n    "birthDate": "1946-08-12T00:00:00Z",\n    "addresses": [\n        {\n            "street": "100 Main Street",\n            "city": "Anywhereville",\n            "state": "NY",\n            "zip": 12345,\n            "isCurrent": true\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"json5",children:"JSON5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n    name: 'John Smith',\n    birthDate: '1946-08-12T00:00:00Z',\n    addresses: [\n        {\n            street: '100 Main Street',\n            city: 'Anywhereville',\n            state: 'NY',\n            zip: 12345,\n            isCurrent: true\n        }\n    ]\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);