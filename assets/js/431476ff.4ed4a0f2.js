"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[5684],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(96540);const s={},r=i.createContext(s);function o(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:t},e.children)}},54370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"topics/17.04.00.RestSecurity","title":"REST Security","description":"Denial of service attacks can be alleviated through the maxInput()) setting.","source":"@site/docs-staging/topics/17.04.00.RestSecurity.md","sourceDirName":"topics","slug":"/topics/17.04.00.RestSecurity","permalink":"/docs/topics/17.04.00.RestSecurity","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/17.04.00.RestSecurity.md","tags":[],"version":"current","frontMatter":{"title":"REST Security"},"sidebar":"mainSidebar","previous":{"title":"17.3. SVL Security","permalink":"/docs/topics/17.03.00.SvlSecurity"},"next":{"title":"18. V9.0 Migration Guide","permalink":"/docs/topics/18.01.00.V9.0-migration-guide"}}');var s=n(74848),r=n(28453);const o={title:"REST Security"},a=void 0,c={},u=[];function l(e){const t={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Denial of service attacks can be alleviated through the ",(0,s.jsx)(t.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#maxInput()",children:"maxInput()"})," setting."]}),"\n",(0,s.jsx)(t.p,{children:"Arbitrarily-large input will trigger an exception before causing out-of-memory errors."}),"\n",(0,s.jsx)(t.p,{children:"The default value for this setting is 100MB."}),"\n",(0,s.jsx)(t.p,{children:"Since the parsers do not use intermediate DOMs and instead parse directly into Java objects, deeply nested data\nstructures will almost always trigger stack overflow errors long before memory consumption becomes an issue."}),"\n",(0,s.jsx)(t.p,{children:"However, this is NOT true of the RDF parsers that use an intermediate DOM."}),"\n",(0,s.jsx)(t.p,{children:"If parsing RDF, you may want to consider lowering the max-input value above."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);