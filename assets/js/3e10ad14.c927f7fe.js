"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7140],{28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>o});var n=r(96540);const a={},t=n.createContext(a);function i(e){const s=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(t.Provider,{value:s},e.children)}},83283:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"topics/02.24.05.JsonParsers","title":"JSON Parsers","description":"The JsonParser class is used to parse JSON into POJOs.","source":"@site/docs/topics/02.24.05.JsonParsers.md","sourceDirName":"topics","slug":"/topics/JsonParsers","permalink":"/docs/topics/JsonParsers","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.24.05.JsonParsers.md","tags":[],"version":"current","frontMatter":{"title":"JSON Parsers","slug":"JsonParsers"},"sidebar":"mainSidebar","previous":{"title":"2.24.4. JSON5","permalink":"/docs/topics/Json5"},"next":{"title":"2.24.6. @Json Annotation","permalink":"/docs/topics/JsonAnnotation"}}');var a=r(74848),t=r(28453);const i={title:"JSON Parsers",slug:"JsonParsers"},o=void 0,c={},l=[];function d(e){const s={li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JsonParser"})," class is used to parse JSON into POJOs."]}),"\n",(0,a.jsx)(s.p,{children:"The class hierarchy for the builder of this parser is:"}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/Context.Builder.html",target:"_blank",children:"Context.Builder"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/BeanContextable.Builder.html",target:"_blank",children:"BeanContextable.Builder"})})}),(0,a.jsx)("node-2",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/parser/Parser.Builder.html",target:"_blank",children:"Parser.Builder"})})}),(0,a.jsx)("node-3",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/parser/ReaderParser.Builder.html",target:"_blank",children:"ReaderParser.Builder"})})}),(0,a.jsx)("node-4",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.Builder.html",target:"_blank",children:"JsonParser.Builder"})})})]}),"\n",(0,a.jsx)(s.p,{children:"Refer to the builder javadocs for configurable settings."}),"\n",(0,a.jsx)(s.p,{children:"The following pre-configured parsers are provided for convenience:"}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JsonParser"})})}),(0,a.jsxs)("node-1",{children:[(0,a.jsx)("javac-field",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html#DEFAULT",target:"_blank",children:"DEFAULT"})}),(0,a.jsx)("javac-field",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html#DEFAULT_STRICT",target:"_blank",children:"DEFAULT_STRICT"})})]})]}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JSON parser"})," supports ALL valid JSON, including:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Javascript comments."}),"\n",(0,a.jsx)(s.li,{children:"Single or double quoted values."}),"\n",(0,a.jsx)(s.li,{children:"Quoted (strict) or unquoted (non-strict) attributes."}),"\n",(0,a.jsx)(s.li,{children:"JSON fragments (such as string, numeric, or boolean primitive values)."}),"\n",(0,a.jsx)(s.li,{children:"Concatenated strings."}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);