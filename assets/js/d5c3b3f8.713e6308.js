"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[4379],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(96540);const a={},r=o.createContext(a);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:n},e.children)}},84944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"topics/02.04.07.NamePropertyAnnotation","title":"@NameProperty Annotation","description":"The @NameProperty annotation is used to identify a setter","source":"@site/docs-staging/topics/02.04.07.NamePropertyAnnotation.md","sourceDirName":"topics","slug":"/topics/02.04.07.NamePropertyAnnotation","permalink":"/docs/topics/02.04.07.NamePropertyAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/02.04.07.NamePropertyAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@NameProperty Annotation"},"sidebar":"tutorialSidebar","previous":{"title":"2.4.6. @BeanIgnore Annotation","permalink":"/docs/topics/02.04.06.BeanIgnoreAnnotation"},"next":{"title":"2.4.8. @ParentProperty Annotation","permalink":"/docs/topics/02.04.08.ParentPropertyAnnotation"}}');var a=t(74848),r=t(28453);const i={title:"@NameProperty Annotation"},s=void 0,c={},p=[];function u(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/NameProperty.html",children:"@NameProperty"})," annotation is used to identify a setter\nas a method for setting the name of a POJO as it's known by its parent object."]}),"\n",(0,a.jsx)(n.p,{children:"A commonly-used case is when you're parsing a JSON map containing beans where one of the bean properties is the key used\nin the map."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// JSON\n{\n    id1: {name: 'John Smith', sex: 'M'},\n    id2: {name: 'Jane Doe', sex: 'F'}\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"public class Person {\n\n    @NameProperty\n    public String id;  // Value gets assigned from object key\n\n    public String name;\n\n    public char sex;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);