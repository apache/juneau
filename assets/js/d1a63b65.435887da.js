"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8731],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var a=s(96540);const t={},l=a.createContext(t);function i(e){const n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(l.Provider,{value:n},e.children)}},77848:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"release-notes/8.2.0","title":"Release 8.2.0","description":"Date: Oct 14, 2020","source":"@site/docs-staging/release-notes/8.2.0.md","sourceDirName":"release-notes","slug":"/release-notes/8.2.0","permalink":"/docs/release-notes/8.2.0","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/release-notes/8.2.0.md","tags":[],"version":"current","frontMatter":{"title":"Release 8.2.0"},"sidebar":"mainSidebar","previous":{"title":"9.0.0","permalink":"/docs/release-notes/9.0.0"},"next":{"title":"8.1.3","permalink":"/docs/release-notes/8.1.3"}}');var t=s(74848),l=s(28453);const i={title:"Release 8.2.0"},r="Release 8.2.0",o={},d=[{value:"juneau-marshall",id:"juneau-marshall",level:3},{value:"juneau-rest-server",id:"juneau-rest-server",level:3},{value:"juneau-rest-server-springboot",id:"juneau-rest-server-springboot",level:3},{value:"juneau-rest-client",id:"juneau-rest-client",level:3},{value:"juneau-rest-mock",id:"juneau-rest-mock",level:3}];function c(e){const n={a:"a",code:"code",del:"del",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"release-820",children:"Release 8.2.0"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Date:"})," Oct 14, 2020"]}),"\n",(0,t.jsx)(n.p,{children:"Juneau 8.2.0 is a major release."}),"\n",(0,t.jsxs)(n.p,{children:["The most significant change is the addition of an entirely new  ",(0,t.jsx)(n.del,{children:"RestClient"})," API build from scratch with near 100% unit test coverage."]}),"\n",(0,t.jsxs)(n.p,{children:["The new API is located in the ",(0,t.jsx)(n.code,{children:"org.apache.juneau.rest.client2"})," package and will replace the old API in 9.0."]}),"\n",(0,t.jsx)(n.h3,{id:"juneau-marshall",children:"juneau-marshall"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," and ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanIgnore.html",children:"@BeanIgnore"})," annotations can alternately occur in parent class hierarchy.\nThe first one found dictates whether a class is ignored as a bean or not."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Applying the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," annotation on a class will now force non-public classes to be interpreted as beans.\nFor example, applying ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," to a ",(0,t.jsx)(n.code,{children:"private"})," class will force it to be treated as a bean.\nAlso, if a public bean constructor cannot be found, the default constructor will be used regardless of it's visibility if the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," annotation is on the class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@Beanc"})," annotation can now be recognized and used on non-public constructors."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Annotations are now aggregated across the entire class hierarchy instead of simply being overridden."}),"\n",(0,t.jsx)(n.p,{children:"The following is an example."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Parent class with properties a,b,c\n@Bean(bpi="a,b,c")\npublic class MyClass {\npublic int a, b, c, d;\n}\n\n// New behavior:  Child class with properties a,c because @Beans are aggregated.\n// Old behavior:  Child class with properties a,c,d because @Bean is overridden.\n@Bean(bpx="b")\npublic class MyChildClass extends MyClass {\npublic int a, b, c, d;\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Include/exclude/read-only/write-only properties defined on the bean context now override those defined on annotations of the class itself.\nFor example, the following methods override the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," annotations on classes:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/BeanContext/Builder.html",children:"BeanContext.Builder"})})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpi(Class,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpi(String,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpx(Class,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpx(String,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpro(Class,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpro(String,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpwo(Class,String)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"bpwo(String,String)"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Config annotations now override class-level annotations.\nFor example, only the 'a' and 'b' properties get serialized on the bean below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Parent class with properties a,b,c\n@Bean(bpi="a,b,c")\n   public class MyClass {\n   public int a, b, c, d;\n}\n\n@RestMethod\n@BeanConfig(beanApply={@Bean(on="MyClass",bpi="a,b")}\npublic MyClass getMyClass() {...}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The following concrete annotation implementation classes are now provided that can be used with the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/BeanContext/Builder.html#annotations(Annotation...)",children:"BeanContext.Builder.annotations(Annotation...)"})," method:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanAnnotation.html",children:"BeanAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeancAnnotation.html",children:"BeancAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Beanc.html",children:"@Beanc"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanIgnoreAnnotation.html",children:"BeanIgnoreAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanIgnore.html",children:"@BeanIgnore"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/BeanpAnnotation.html",children:"BeanpAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Beanp.html",children:"@Beanp"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/ExampleAnnotation.html",children:"ExampleAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Example.html",children:"@Example"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/NamePropertyAnnotation.html",children:"NamePropertyAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/NameProperty.html",children:"@NameProperty"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/ParentPropertyAnnotation.html",children:"ParentPropertyAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/ParentProperty.html",children:"@ParentProperty"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/SwapAnnotation.html",children:"SwapAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Swap.html",children:"@Swap"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/UriAnnotation.html",children:"UriAnnotation"})})," implements ",(0,t.jsx)(n.del,{children:"@URI"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/csv/annotation/CsvAnnotation.html",children:"CsvAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/csv/annotation/Csv.html",children:"@Csv"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/HtmlAnnotation.html",children:"HtmlAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/Html.html",children:"@Html"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"JsoAnnotation"})]})," implements ",(0,t.jsx)(n.del,{children:"@Jso"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/json/annotation/JsonAnnotation.html",children:"JsonAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/json/annotation/Json.html",children:"@Json"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"SchemaAnnotation"})]})," implements ",(0,t.jsx)(n.del,{children:"@Schema"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/msgpack/annotation/MsgPackAnnotation.html",children:"MsgPackAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/msgpack/annotation/MsgPack.html",children:"@MsgPack"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/annotation/OpenApiAnnotation.html",children:"OpenApiAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/annotation/OpenApi.html",children:"@OpenApi"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/plaintext/annotation/PlainTextAnnotation.html",children:"PlainTextAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/plaintext/annotation/PlainText.html",children:"@PlainText"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/soap/annotation/SoapXmlAnnotation.html",children:"SoapXmlAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/soap/annotation/SoapXml.html",children:"@SoapXml"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/uon/annotation/UonAnnotation.html",children:"UonAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/uon/annotation/Uon.html",children:"@Uon"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/urlencoding/annotation/UrlEncodingAnnotation.html",children:"UrlEncodingAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/urlencoding/annotation/UrlEncoding.html",children:"@UrlEncoding"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlAnnotation.html",children:"XmlAnnotation"})})," implements ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/Xml.html",children:"@Xml"})]})]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Bean(bpi="street,city") // Will be overridden\npublic class AddressBean {...}\n\nBean ba = new BeanAnnotation("AddressBean").bpi("street,city,state");\nWriterSerializer ws = JsonSerializer.create().annotations(ba).build();\nString json = ws.toString(addressBean);  // Will print street,city,state\n'})}),"\n",(0,t.jsx)(n.p,{children:"Plus similar annotation classes for other serializer/parser annotations."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/BeanContext/Builder.html#annotations(Annotation...)",children:"BeanContext.Builder.annotations(Annotation...)"})," method can be used to apply annotations to classes during runtime."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:['Bean maps now have the concept of "hidden" properties (properties that aren\'t serialized but otherwise accessible).\nFor example, the ',(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/Html.html#link()",children:"@Html.link"})," can now reference hidden properties:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Bean(bpi="a") // Will be overridden\npublic class MyBean {\n    \n    @Html(link="servlet:/{b}")\n    public String a;\n    \n    public String b;  // Not serialized but referenced in link on a.  \n        \n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The general rule for the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/BeanMap.html",children:"BeanMap"})," class is that ",(0,t.jsx)(n.code,{children:"get()"}),", ",(0,t.jsx)(n.code,{children:"put()"}),", and ",(0,t.jsx)(n.code,{children:"containsKey()"})," will work against hidden properties but ",(0,t.jsx)(n.code,{children:"keySet()"})," and ",(0,t.jsx)(n.code,{children:"entrySet()"})," will skip them."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Several bug fixes in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/HtmlSerializer.html",children:"HtmlSerializer"})," and ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/HtmlParser.html",children:"HtmlParser"})," classes around the handling of collections and arrays of beans with ",(0,t.jsx)(n.code,{children:"@Bean(typeName)"})," annotations."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"New swaps auto-added to all serializers/parsers:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"MatchResultSwap"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"StackTraceElementSwap"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/Html.html#noTableHeaders()",children:"@Html.noTableHeaders"})," now can be applied to collections of beans."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/HtmlDocConfig.html#asideFloat()",children:"@HtmlDocConfig.asideFloat"})," setting so that you can position the contents of the aside section on the page."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Various minor fixes surrounding HTML serialization:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Collections of beans that were supposed to be serialized as tables were being serialized as lists."}),"\n",(0,t.jsxs)(n.li,{children:["Collections of beans with ",(0,t.jsx)(n.code,{children:"@Bean(bpi)"})," were not being serialized in the correct column order."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Fixed a bug where a copy constructor can erroneously be recognized as a builder constructor if the class also has a static ",(0,t.jsx)(n.code,{children:"create"})," method.\nNet effect was that the copy constructor would needlessly be called during parsing."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/collections.html",children:"org.apache.juneau.collections"})," package containing various convenience fluent-style collection classes:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"AList"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"ASet"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"ASortedSet"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"AMap"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"ASortedMap"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"OMap"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"OList"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"ObjectMap"})," is being deprecated and replaced with  ",(0,t.jsx)(n.del,{children:"OMap"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"ObjectList"})," is being deprecated and replaced with  ",(0,t.jsx)(n.del,{children:"OList"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["All classes in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/response.html",children:"org.apache.juneau.http.response"})," and  ",(0,t.jsx)(n.del,{children:"exception"})," now have ",(0,t.jsx)(n.code,{children:"header(String,Object)"})," methods for adding response headers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Method that performs a BASIC Auth handshake.\n@RestMethod\npublic Ok checkBasicAuth(@Header("Authorization") String auth) throws Unauthorized {\n    if (auth == null) \n        throw new Unauthorized().header("WWW-Authenticate", "BASIC realm=\\"foo\\"");\n    return Ok.OK;\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"New annotations for multi-part support:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"Header.multi()"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"Query.multi()"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"FormData.multi()"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"BeanTraverseContext.BEANTRAVERSE_ignoreRecursions"})," setting no longer requires  ",(0,t.jsx)(n.del,{children:"BeanTraverseContext.BEANTRAVERSE_detectRecursions"})," to be enabled."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Fixed bug in JSON/UON/URL-Encoding serializers where indentation was not correct of first line when  ",(0,t.jsx)(n.del,{children:"BeanTraverseContext.BEANTRAVERSE_initialDepth"})," used."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Fixed bug in JSON/UON/URL-Encoding serializers where properties past the max depth were being serialized as null instead of being treated as null and not being serialized at all."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Fixed bug in HTML serializer where tables of maps were not sorted if ",(0,t.jsx)(n.code,{children:"SERIALIZER_sortMaps"})," was specified."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"SERIALIZER_trimNullProperties"})," has been replaced with  ",(0,t.jsx)(n.del,{children:"Serializer.SERIALIZER_keepNullProperties SERIALIZER_keepNullProperties"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Improvements to OpenAPI serializer and parser:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Collection format can now be specified on OBJECTs to allow key/value pairs to be delimited with the same support as ARRAYs."}),"\n",(0,t.jsxs)(n.li,{children:["New  ",(0,t.jsx)(n.del,{children:"OpenApiCommon.OAPI_format OAPI_format"})," and  ",(0,t.jsx)(n.del,{children:"OpenApiCommon.OAPI_collectionFormat OAPI_collectionFormat"})," properties."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Convenience methods added to ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSchema.html",children:"HttpPartSchema"})," and related classes to simplify schema definitions:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import static org.apache.juneau.httppart.HttpPartSchema.*;\n    \n// Old\nHttpPartSchema s = schema("object")\n    .property("f01", schema("array").collectionFormat("pipes").items(schema("string")))\n    .property("f02", schema("array").collectionFormat("pipes").items(schema("string", "byte")))\n    .property("f03", schema("array").collectionFormat("pipes").items(schema("string", "date-time")))\n    .build();\n\n// New\nHttpPartSchema s = tObject()\n    .p("f01", tArray(tString()))\n    .p("f02", tArray(tByte()))\n    .p("f03", tArray(tDateTime()))\n    .build();\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Fixes where the bean method/constructor visibility wasn't being used when finding swap methods and constructors."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"HTML-Schema support is being deprecated due to low-use and difficulty in maintaining. It will be removed in 9.0."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"JuneauLogger"})," class is being deprecated. Improvements in logging in Java 8 make it obsolete."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Bean filters can now be specified programmatically through a builder API."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Create a JSON serializer that only includes specified fields on a specific class.\nWriterSerializer s = JsonSerializer\n    .create()\n    .beanFilters(BeanFilter.create(MyBean.class).bpi("foo,bar,baz").build())\n    .build();\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"BeanContext.REST_pojoSwaps"})," replaced with  ",(0,t.jsx)(n.del,{children:"BeanContext.BEAN_swaps"})," (and builder methods as well)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/transform/RootBeanPropertyMeta.html",children:"RootBeanPropertyMeta"})," class added for when you need ",(0,t.jsx)(n.code,{children:"BeanPropertyMeta"})," from somewhere and all you have is a Class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"New Bean Property Interceptor API for intercepting calls to bean getters/setters."}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BeanInterceptor"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#interceptor()",children:"@Bean.interceptor"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-method",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/BeanContext/Builder.html#beanInterceptor(Class,Class)",children:"BeanContext.Builder.beanInterceptor(Class,Class)"})})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Fluent setters that follow the ",(0,t.jsx)(n.code,{children:"withX"})," convention are now automatically detected by all parsers."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// A bean with a fluent setter.\npublic class MyBean {\n    public MyBean withFoo(String foo) {\n        this.foo = foo;\n        return this;\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Note you could previously use the ",(0,t.jsx)(n.code,{children:"@BeanProperty"})," annotation to identify these setters."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"juneau-rest-server",children:"juneau-rest-server"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New  ",(0,t.jsx)(n.del,{children:"RestContext.REST_context REST_context"}),"/",(0,t.jsx)(n.del,{children:"Rest.context() @Rest(context)"})," setting to allow you to extend the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestContext.html",children:"RestContext"})," class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"@Rest"}),"-annotated classes can now implement the following interfaces directly instead of having to define secondary classes and hook them up through annotations:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-interface",{children:[" ",(0,t.jsx)(n.del,{children:"RestCallHandler"})]})," - Normally defined through  ",(0,t.jsx)(n.del,{children:"@Rest.callHandler()"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-interface",{children:[" ",(0,t.jsx)(n.del,{children:"RestInfoProvider"})]})," - Normally defined through  ",(0,t.jsx)(n.del,{children:"@Rest.infoProvider()"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-interface",{children:[" ",(0,t.jsx)(n.del,{children:"RestCallLogger"})]})," - Normally defined through  ",(0,t.jsx)(n.del,{children:"@Rest.callLogger()"})]}),(0,t.jsxs)("node-0",{children:[(0,t.jsxs)("java-interface",{children:[" ",(0,t.jsx)(n.del,{children:"ClasspathResourceFinder"})]})," - Normally defined through  ",(0,t.jsx)(n.del,{children:"@Rest.classpathResourceFinder()"})]})]}),"\n",(0,t.jsxs)(n.p,{children:["The methods added for  ",(0,t.jsx)(n.del,{children:"RestInfoProvider"})," are:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getSwagger(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getSiteName(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getTitle(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getDescription(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getMethodSummary(Method,RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getMethodDescription(Method,RestRequest)"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getSwagger(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getSiteName(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getTitle(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getDescription(RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getMethodSummary(Method,RestRequest)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"getMethodDescription(Method,RestRequest)"})]})})]}),"\n",(0,t.jsxs)(n.p,{children:["The methods added for  ",(0,t.jsx)(n.del,{children:"RestCallLogger"})," are:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.log(RestCallLoggerConfig,HttpServletRequest,HttpServletResponse) log(RestCallLoggerConfig,HttpServletRequest,HttpServletResponse)"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.log(RestCallLoggerConfig,HttpServletRequest,HttpServletResponse) log(RestCallLoggerConfig,HttpServletRequest,HttpServletResponse)"})]})})]}),"\n",(0,t.jsxs)(n.p,{children:["The methods added for  ",(0,t.jsx)(n.del,{children:"ClasspathResourceFinder"})," are:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.findResource(Class,String,Locale) findResource(Class,String,Locale)"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.findResource(Class,String,Locale) findResource(Class,String,Locale)"})]})})]}),"\n",(0,t.jsxs)(n.p,{children:["The methods added for  ",(0,t.jsx)(n.del,{children:"RestResourceResolver"})," are:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"oajr.RestServlet.resolve(Object,Class,RestContext.Builder,Object...) resolve(Object,Class,RestContext.Builder,Object...)"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Added the following convenience hook methods on the  ",(0,t.jsx)(n.del,{children:"RestServlet"})," and  ",(0,t.jsx)(n.del,{children:"BasicRest"})," classes:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"oajr.RestServlet.onInit(RestContext.Builder) onInit(RestContext.Builder)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onPostInit(RestContext) onPostInit(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onPostInitChildFirst(RestContext) onPostInitChildFirst(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onDestroy(RestContext) onDestroy(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onStartCall(HttpServletRequest,HttpServletResponse) onStartCall(HttpServletRequest,HttpServletResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onPreCall(RestRequest,RestResponse) onPreCall(RestRequest,RestResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onPostCall(RestRequest,RestResponse) onPostCall(RestRequest,RestResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"RestServlet.onEndCall(HttpServletRequest,HttpServletResponse) onEndCall(HttpServletRequest,HttpServletResponse)"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"oajr.BasicRest.onInit(RestContext.Builder) onInit(RestContext.Builder)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onPostInit(RestContext) onPostInit(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onPostInitChildFirst(RestContext) onPostInitChildFirst(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onDestroy(RestContext) onDestroy(RestContext)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onStartCall(HttpServletRequest,HttpServletResponse) onStartCall(HttpServletRequest,HttpServletResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onPreCall(RestRequest,RestResponse) onPreCall(RestRequest,RestResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onPostCall(RestRequest,RestResponse) onPostCall(RestRequest,RestResponse)"})]})}),(0,t.jsx)("node-1",{children:(0,t.jsxs)("java-method",{children:[" ",(0,t.jsx)(n.del,{children:"BasicRest.onEndCall(HttpServletRequest,HttpServletResponse) onEndCall(HttpServletRequest,HttpServletResponse)"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#debugOn()",children:"@Rest.debugOn"})," annotation for turning on debug mode using class/method identifiers:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Turn on debug per-request on the class and always on the doX() method.\n@Rest(\n    debugOn="MyResource=per-request,Mysource.doX=true"  // Typically defined via system or env property.\n)\npublic class MyResource {\n\n    @RestMethod\n    public void String doX() {\n        ...\n    }\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"BasicRestConfig"})," has been broken up into  ",(0,t.jsx)(n.del,{children:"BasicRestConfig"})," and  ",(0,t.jsx)(n.del,{children:"BasicRestMethods"})," so that you're not forced to implement methods such as ",(0,t.jsx)(n.code,{children:"getOptions()"})," and ",(0,t.jsx)(n.code,{children:"getStats()"})," if you're implementing the interface to configure your REST class."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Any of the following classes can now be instantiated with ",(0,t.jsx)(n.code,{children:"public static create()"})," methods:"]}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestCallHandler"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestCallLogger"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestInfoProvider"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"ClasspathResourceFinder"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestResourceResolver"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"RestGuard"})]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[" ",(0,t.jsx)(n.del,{children:"ResponseHandler"})]})})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New  ",(0,t.jsx)(n.del,{children:"Path.required() @Path(required)"})," annotation support.\nA path can be marked as not-required when the path variable is resolved by a parent resource like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(path="/parent/{p1}",children=Child.class)\npublic class Parent {\n    ...\n}\n\n@Rest(path="/child")\npublic class Child {\n\n    @RestMethod(path="/")\n    public String doGet(@Path(name="p1",required=false) String p1) {\n        // p1 will be null when accessed via "/child"\n        // p1 will be non-null when accessed via "/parent/p1/child".\n    }\n    ...\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"This allows the child resource to be mapped to multiple parents that may resolve various different path variables."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New  ",(0,t.jsx)(n.del,{children:"RestMethod.paths() @RestMethod(paths)"})," annotation that allows you to map multiple paths to the same Java method."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestMethod(\n    name=GET,\n    paths={"/","/{foo}"}\n)\npublic String doGet(@Path(name="foo",required=false) String foo) {...}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The  ",(0,t.jsx)(n.del,{children:"RestMethod @RestMethod"})," annotation is now implied on all unannotated methods of a ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"@Rest"})," @Rest-annotated interface."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest\npublic interface MyRest {\n    String getFoo();  // @RestMethod(name=GET,path="/foo") is implied.\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Improved  ",(0,t.jsx)(n.del,{children:"RestContext.REST_messages REST_messages"})," support (mostly bug fixes)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"juneau-rest-server-springboot",children:"juneau-rest-server-springboot"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.del,{children:"JuneauRestInitializer"})," now provides a no-arg constructor so that it can be used in the ",(0,t.jsx)(n.code,{children:"@ConfigurationContext(initializers=JuneauRestInitializer.class)"})," when unit testing using ",(0,t.jsx)(n.code,{children:"@SpringBootTest"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New  ",(0,t.jsx)(n.del,{children:"ResourceDescription.ResourceDescription(String,String,String)"})," constructor and  ",(0,t.jsx)(n.del,{children:"ResourceDescriptions.append(String,String,String)"})," method."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["New  ",(0,t.jsx)(n.del,{children:"Hyperlink"})," class."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"juneau-rest-client",children:"juneau-rest-client"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Completely revamped RestClient API."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"All APIs now extend from HttpClient interfaces."}),"\n",(0,t.jsx)(n.li,{children:"Better integration with HttpClient."}),"\n",(0,t.jsx)(n.li,{children:"New fluent-style methods with many new convenience methods."}),"\n",(0,t.jsx)(n.li,{children:"Updated juneau-rest-client."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"@RemoteMethod"}),"-annotated methods can now return ",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html",children:"Future"})," and ",(0,t.jsx)(n.a,{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html",children:"CompletableFuture"})," for concurrent processing of requests."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Remote\npublic interface MyInterface {\n    public Future<String> doGet();\n}\n    \nMyInterface i = client.getRemote(MyInterface.class, "http://localhost:12345/myInterface");\nFuture<String> f = i.doGet();\n// Do other stuff.\nString result = f.get();   \n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Additions to ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/Remote.html",children:"@Remote"})," annotation:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/Remote.html#version()",children:"@Remote.version"})," - Adds a client version header to all requests."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/Remote.html#headers()",children:"@Remote.headers"})," - Adds a set of headers to all requests."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.del,{children:"headerSupplier"})," - Adds a dynamic supplier of headers to all requests."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"juneau-rest-mock",children:"juneau-rest-mock"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"MockRest"})," and ",(0,t.jsx)(n.code,{children:"MockRemote"})," classes have been remove entirely and all existing functions have been moved into the improved  ",(0,t.jsx)(n.del,{children:"MockRestClient"})," class.\nAll REST test mocking can be done through this single class."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);