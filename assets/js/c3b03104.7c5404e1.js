"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8475],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var s=i(96540);const o={},t=s.createContext(o);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:n},e.children)}},95568:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"topics/05.02.01.ConfigOverviewBasics","title":"Config Overview Basics","description":"The juneau-config library contains a powerful API for creating and using INI-style config files.","source":"@site/docs-staging/topics/05.02.01.ConfigOverviewBasics.md","sourceDirName":"topics","slug":"/topics/05.02.01.ConfigOverviewBasics","permalink":"/docs/topics/05.02.01.ConfigOverviewBasics","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/05.02.01.ConfigOverviewBasics.md","tags":[],"version":"current","frontMatter":{"title":"Config Overview Basics"},"sidebar":"tutorialSidebar","previous":{"title":"5.1. juneau-config Basics","permalink":"/docs/topics/05.01.00.JuneauConfigBasics"},"next":{"title":"5.2.2. Syntax Rules","permalink":"/docs/topics/05.02.02.SyntaxRules"}}');var o=i(74848),t=i(28453);const a={title:"Config Overview Basics"},c=void 0,r={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"juneau-config"})," library contains a powerful API for creating and using INI-style config files."]}),"\n",(0,o.jsx)(n.admonition,{title:"Example configuration file",type:"tip",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"# A set of entries\n[Section1]\n\n# An integer\nkey1 = 1\n\n# A boolean\nkey2 = true\n\n# An array\nkey3 = 1,2,3\n\n# A POJO\nkey4 = http://bar\n"})})}),"\n",(0,o.jsxs)(n.p,{children:["Config files are accessed through the ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config.html",children:"Config"})," class which are\ncreated through the ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config/Builder.html",children:"Config.Builder"})," class."]}),"\n",(0,o.jsxs)(n.p,{children:["Builder creator methods are provided on the ",(0,o.jsx)(n.code,{children:"Config"})," class:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Create a Config object\nConfig config = Config.create().name("MyConfig.cfg").build();\n\n// Shortcut\nConfig config = Config.create("MyConfig.cfg").build();\n'})}),"\n",(0,o.jsx)(n.p,{children:"Once instantiated, reading values from the config are simple:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Read values from section #1\nint key1 = config.get("Section1/key1").asInteger().orElse(-1);\nboolean key2 = config.get("Section1/key2").asBoolean().orElse(false);\nint[] key3 = config.get("Section1/key3").as(int[].class).orElse(null);\nURL key4 = config.get("Section1/key4").as(URL.class).orElse(null);\n'})}),"\n",(0,o.jsx)(n.p,{children:"The config language may look simple but it is a very powerful feature with many capabilities including:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Support for storing and retrieving any of the following data types:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Primitives"}),"\n",(0,o.jsx)(n.li,{children:"POJOs"}),"\n",(0,o.jsx)(n.li,{children:"Beans"}),"\n",(0,o.jsx)(n.li,{children:"Arrays, Maps, and Collections of anything"}),"\n",(0,o.jsx)(n.li,{children:"Binary data"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:"Transactional modifications with commit/rollback capabilities."}),"\n",(0,o.jsx)(n.li,{children:"A listener API."}),"\n",(0,o.jsx)(n.li,{children:"Filesystem watcher integration allowing changes on the file system to be reflected in real-time."}),"\n",(0,o.jsxs)(n.li,{children:["Modifications through the Config class (e.g. add/remove/modify sections and keys, add/remove comments and\nwhitespace, etc...) ",(0,o.jsx)(n.strong,{children:"DO NOT"})," cause loss of formatting in the file.\nAll existing whitespace and comments are preserved for you!"]}),"\n",(0,o.jsx)(n.li,{children:"Value encoding for added security."}),"\n",(0,o.jsx)(n.li,{children:"Support for SVL variables."}),"\n",(0,o.jsx)(n.li,{children:"Directly populate beans from config sections."}),"\n",(0,o.jsx)(n.li,{children:"Accessing config sections through Java interface proxies."}),"\n",(0,o.jsx)(n.li,{children:"An extensible storage API allows you to write your own config storage (e.g. storage in databases or the\ncloud)."}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);