"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[5863],{17091:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"topics/02.11.03.AutoSwaps","title":"Auto-detected swaps","description":"Various methods can be defined on a class directly to affect how it gets serialized.","source":"@site/docs/topics/02.11.03.AutoSwaps.md","sourceDirName":"topics","slug":"/topics/AutoSwaps","permalink":"/docs/topics/AutoSwaps","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.11.03.AutoSwaps.md","tags":[],"version":"current","frontMatter":{"title":"Auto-detected swaps","slug":"AutoSwaps"},"sidebar":"mainSidebar","previous":{"title":"2.11.2. Default Swaps","permalink":"/docs/topics/DefaultSwaps"},"next":{"title":"2.11.4. Per-media-type Swaps","permalink":"/docs/topics/02.11.04.PerMediaTypeSwaps"}}');var t=n(74848),i=n(28453);const o={title:"Auto-detected swaps",slug:"AutoSwaps"},l=void 0,c={},r=[];function d(e){const a={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.p,{children:["Various methods can be defined on a class directly to affect how it gets serialized.\nThis can often be simpler than using ",(0,t.jsx)(a.code,{children:"ObjectSwaps"}),"."]}),"\n",(0,t.jsxs)(a.p,{children:["Objects serialized as ",(0,t.jsx)(a.code,{children:"Strings"})," can be parsed back into their original objects by implementing one of the following methods on the class:"]}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public static T fromString(String)"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Any of the following method names also work:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.code,{children:"valueOf(String)"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.code,{children:"parse(String)"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.code,{children:"parseString(String)"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.code,{children:"forName(String)"})}),"\n",(0,t.jsx)(a.li,{children:(0,t.jsx)(a.code,{children:"forString(String)"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public T(String)"})," constructor."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.p,{children:"Note that these methods cover conversion from several built-in Java types, meaning the parsers can automatically construct these objects from strings:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"fromString(String)"})," - ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/UUID.html",target:"_blank",children:"UUID"})]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"valueOf(String)"})," - ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Boolean.html",target:"_blank",children:"Boolean"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Byte.html",target:"_blank",children:"Byte"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Double.html",target:"_blank",children:"Double"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Float.html",target:"_blank",children:"Float"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Integer.html",target:"_blank",children:"Integer"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Long.html",target:"_blank",children:"Long"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Short.html",target:"_blank",children:"Short"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/java/sql/Date.html",target:"_blank",children:"Date"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/java/sql/Time.html",target:"_blank",children:"Time"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.sql/java/sql/Timestamp.html",target:"_blank",children:"Timestamp"})]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"parse(String)"})," - ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/DateFormat.html",target:"_blank",children:"DateFormat"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/MessageFormat.html",target:"_blank",children:"MessageFormat"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/NumberFormat.html",target:"_blank",children:"NumberFormat"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Date.html",target:"_blank",children:"Date"}),", ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.logging/java/util/logging/Level.html",target:"_blank",children:"Level"})]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"parseString(String)"})," - ",(0,t.jsx)("a",{href:"https://docs.oracle.com/javase/8/docs/api/javax/xml/bind/DatatypeConverter.html",target:"_blank",children:"DatatypeConverter"})]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"forName(String)"})," - ",(0,t.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Class.html",target:"_blank",children:"Class"})]}),"\n"]}),"\n",(0,t.jsxs)(a.p,{children:["If you want to force a bean-like class to be serialized as a string, you can use the ",(0,t.jsx)("a",{href:"/site/apidocs/org/apache/juneau/annotation/BeanIgnore.html",target:"_blank",children:"@BeanIgnore"})," annotation on the class to force it to be serialized to a string using the ",(0,t.jsx)(a.code,{children:"toString()"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Serializing to other intermediate objects can be accomplished by defining a swap method directly on the class:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public X swap()"})," method, where ",(0,t.jsx)(a.code,{children:"X"})," is any serializable object."]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public X swap(BeanSession)"})," method, where ",(0,t.jsx)(a.code,{children:"X"})," is any serializable object."]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo unswap(X)"})," method, where ",(0,t.jsx)(a.code,{children:"X"})," is any serializable object."]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo unswap(X,BeanSession)"})," method, where ",(0,t.jsx)(a.code,{children:"X"})," is any serializable object."]}),"\n"]}),"\n",(0,t.jsxs)(a.p,{children:["Serializing to and from ",(0,t.jsx)(a.code,{children:"Maps"})," can be accomplished by defining any of the following methods:"]}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public Map toMap()"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Can be any type of map with string keys and object vals."}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public JsonMap toMap()"})," method."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public Map toMap(BeanSession)"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Can be any type of map with string keys and object vals."}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public JsonMap toMap(BeanSession)"})," method."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo fromMap(Map)"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Can be any type of map with string keys and object vals."}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo fromMap(JsonMap)"})," method."]}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo fromMap(Map,BeanSession)"})," method."]}),"\n",(0,t.jsx)(a.p,{children:"Can be any type of map with string keys and object vals."}),"\n"]}),"\n",(0,t.jsxs)(a.li,{children:["\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"public static MyPojo fromMap(JsonMap,BeanSession)"})," method."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(a.p,{children:["The ",(0,t.jsx)(a.code,{children:"BeanSession"})," parameter allows you access to various information about the current serialization session.\nFor example, you could provide customized results based on the media type being produced (",(0,t.jsx)("a",{href:"/site/apidocs/org/apache/juneau/BeanSession.html#getMediaType()",target:"_blank",children:"BeanSession.getMediaType()"}),")."]}),"\n",(0,t.jsxs)(a.p,{children:["The following example shows how an HTML5 form template object can be created that gets serialized as a populated HTML5 ",(0,t.jsx)("a",{href:"/site/apidocs/org/apache/juneau/bean/html5/Form.html",target:"_blank",children:"Form"})," bean."]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:'import static org.apache.juneau.bean.html5.HtmlBuilder.*;\n\n/**\n * A simple HTML form template whose serialized form is an HTML5 Form object.\n */\npublic class FormTemplate {\n\n    private String action;\n    private int value1;\n    private boolean value2;\n\n    // Some constructor that initializes our fields.\n    public FormTemplate(String action, int value1, boolean value2) {\n        this.action = action;\n        this.value1 = value1;\n        this.value2 = value2;\n    }\n\n    // Special swap method that converts this template to a serializable bean\n    public Form swap(BeanSession session) {\n        return form(action,\n            input("text").name("v1").value(value1),\n            input("text").name("v2").value(value2)\n        );\n    }\n}\n'})}),"\n",(0,t.jsx)(a.p,{children:"Swapped objects can be converted back into their original form by the parsers by specifying one of the following methods:"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public static T unswap(BeanSession, X)"})," method where ",(0,t.jsx)(a.code,{children:"X"})," is the swap class type."]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"public T(X)"})," constructor where ",(0,t.jsx)(a.code,{children:"X"})," is the swap class type."]}),"\n"]}),"\n",(0,t.jsx)(a.p,{children:"The following shows how our form template class can be modified to allow the parsers to reconstruct our original object:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-java",children:'import static org.apache.juneau.bean.html5.HtmlBuilder.*;\n\n/**\n * A simple HTML form template whose serialized form is an HTML5 Form object.\n * This time with parsing support.\n */\n@Bean(dictionary=HtmlBeanDictionary.class)\npublic class FormTemplate {\n\n    private String action;\n    private int value1;\n    private boolean value2;\n\n    // Our \'unswap\' constructor\n    public FormTemplate(Form form) {\n        this.action = form.getAttr("action");\n        this.value1 = form.getChild(Input.class, 0)\n            .getAttr(int.class, "value");\n        this.value2 = form.getChild(Input.class, 1)\n            .getAttr(boolean.class, "value");\n    }\n\n    public FormTemplate(String action, int value1, boolean value2) {\n        this.action = action;\n        this.value1 = value1;\n        this.value2 = value2;\n    }\n\n    public Form swap(BeanSession session) {\n        return form(action,\n            input("text").name("v1").value(value1),\n            input("text").name("v2").value(value2)\n        );\n    }\n}\n'})})]})}function h(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>l});var s=n(96540);const t={},i=s.createContext(t);function o(e){const a=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);