"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[3279],{2197:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"topics/05.11.01.ConfigStoresBasics","title":"Config Stores Basics","description":"Configuration files are stored in entities called Stores.","source":"@site/docs-staging/topics/05.11.01.ConfigStoresBasics.md","sourceDirName":"topics","slug":"/topics/05.11.01.ConfigStoresBasics","permalink":"/docs/topics/05.11.01.ConfigStoresBasics","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/05.11.01.ConfigStoresBasics.md","tags":[],"version":"current","frontMatter":{"title":"Config Stores Basics"},"sidebar":"mainSidebar","previous":{"title":"5.10. Imports","permalink":"/docs/topics/05.10.00.Imports"},"next":{"title":"5.11.2. Memory Store","permalink":"/docs/topics/05.11.02.MemoryStore"}}');var o=t(74848),r=t(28453);const s={title:"Config Stores Basics"},a=void 0,c={},d=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Configuration files are stored in entities called Stores."}),"\n",(0,o.jsx)(n.p,{children:"The methods that need to be implemented on a store are:"}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-class",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/ConfigStore.html",children:"ConfigStore"})})}),(0,o.jsx)("node-1",{children:(0,o.jsx)("java-method",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/ConfigStore.html#read(String)",children:"read(String)"})})}),(0,o.jsx)("node-1",{children:(0,o.jsx)("java-method",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/ConfigStore.html#write(String,String,String)",children:"write(String,String,String)"})})}),(0,o.jsx)("node-1",{children:(0,o.jsx)("java-method",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/ConfigStore.html#update(String,String)",children:"update(String,String)"})})})]}),"\n",(0,o.jsx)(n.p,{children:"Read is self-explanatory:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public String read(String name) {\n    // Return the contents of the specified configuration.\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Write is slightly trickier:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public String write(String name, String oldContents, String newContents) {\n\n    // If the old contents match the current stored contents, the new contents will get stored,\n    //\tand the method returns null indicating success.\n\n    // If the old contents DO NOT match the current stored contents (i.e. it was modified in some way),\n    //\tthe new contents are NOT stored, and the method returns the current stored contents.\n\n    // If the old contents are null, then just always write the new contents.\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"The update method is called whenever the stored file gets modified externally:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"public String update(String name, String newContents) {\n    // Do something with the updated contents.\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Two configuration stores are provided by default:"}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-class",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/FileStore.html",children:"FileStore"})})}),(0,o.jsx)("node-0",{children:(0,o.jsx)("java-class",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/MemoryStore.html",children:"MemoryStore"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The store is defined on the ",(0,o.jsx)(n.code,{children:"Config"})," object via the following setting:"]}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-class",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config/Builder.html",children:"Config.Builder"})})}),(0,o.jsx)("node-1",{children:(0,o.jsx)("java-method",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config/Builder.html#store(ConfigStore)",children:"store(ConfigStore)"})})})]}),"\n",(0,o.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'// Create a config with in-memory storage.\nConfig config = Config.create("MyConfig.cfg").store(ConfigMemoryStore.DEFAULT).build();\n'})})}),"\n",(0,o.jsxs)(n.p,{children:["The default store used is ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/store/FileStore.html#DEFAULT",children:"FileStore.DEFAULT"})," which\ndefines\nthe execution directory as the file system directory to store and retrieve files."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);