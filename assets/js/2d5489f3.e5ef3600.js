"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9850],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(96540);const o={},t=i.createContext(o);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},47540:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"topics/08.12.00.ConfigurationFiles","title":"Configuration Files","description":"The Server API provides methods for associating configuration files with REST servlets so that configuration properties","source":"@site/docs-staging/topics/08.12.00.ConfigurationFiles.md","sourceDirName":"topics","slug":"/topics/08.12.00.ConfigurationFiles","permalink":"/docs/topics/08.12.00.ConfigurationFiles","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/08.12.00.ConfigurationFiles.md","tags":[],"version":"current","frontMatter":{"title":"Configuration Files"},"sidebar":"mainSidebar","previous":{"title":"8.11. Encoders","permalink":"/docs/topics/08.11.00.Encoders"},"next":{"title":"8.13. SVL Variables","permalink":"/docs/topics/08.13.00.SvlVariables"}}');var o=s(74848),t=s(28453);const a={title:"Configuration Files"},r=void 0,c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The Server API provides methods for associating configuration files with REST servlets so that configuration properties\ncan be defined in external files."}),"\n",(0,o.jsx)(n.p,{children:"It uses the following annotation:"}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"Rest"})})}),(0,o.jsx)("node-1",{children:(0,o.jsx)("java-method-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#config()",children:"config"})})})]}),"\n",(0,o.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(\n    // Config file is located at ./config_dir/myconfig.cfg\n    config="config_dir/myconfig.cfg",\n    ...\n)\npublic class MyResource {...}\n'})})}),"\n",(0,o.jsx)(n.p,{children:"In recap, the Configuration API provides support for INI-style configuration files with embedded string variables:"}),"\n",(0,o.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"#--------------------------\n# Examples\n#--------------------------\n[MyProperties]\npath = $E{PATH}\njavaHome = $S{java.home}\ncustomMessage = Java home is $C{MyProperties/javaHome} and the\n    environment path is $C{MyProperties/path}.\n"})})}),"\n",(0,o.jsxs)(n.p,{children:["These properties are then accessible through the ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config.html",children:"Config"})," class."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@RestGet("/")\npublic String sample(Config config) {\n    String path = config.get("MyProperties/path").get();\n    File javaHome = config.get("MyProperties/javaHome").as(File.class).orElse(null);\n    String customMessage = config.get("MyProperties/customMessage").orElse("Hello");\n    ...\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"The annotation itself can contain string variables."}),"\n",(0,o.jsxs)(n.p,{children:["For example, the Microservice API ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"}),"\nclass defines the location of the config file as a system property ",(0,o.jsx)(n.code,{children:"juneau.configFile"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(\n    // Config file location is defined as a system property\n    config="$S{juneau.configFile}",\n    ...\n)\npublic class MyResource {...}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Spring Boot applications typically define an ",(0,o.jsx)(n.code,{children:"application.properties"})," file.\nYou can reuse it as a config file like so:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(\n    config="application.properties",\n    ...\n)\npublic class MyResource {...}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Note that properties files are a subset of functionality of INI files (they're basically just INI files with a single\ndefault section).\nIt's therefore possible to use INI-style syntax such as sections in your ",(0,o.jsx)(n.code,{children:"application.properties"})," file."]}),"\n",(0,o.jsxs)(n.p,{children:["Once a config file has been associated with a REST resource, it can be accessed through the ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestContext/Builder.html#getConfig()",children:"RestContext.Builder.getConfig()"})," method.\nIt can also be accessed by passing in a ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config.html",children:"Config"})," bean to any of your\nREST OP methods."]}),"\n",(0,o.jsx)(n.p,{children:"A common usage is to use this method to initialize fields in your servlet."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest(\n    // Config file is located at ./config_dir/myconfig.cfg\n    config="config_dir/myconfig.cfg",\n    ...\n)\npublic class MyResource {\n    private final String path;\n    private final File javaHome;\n\n    public MyResource(RestContext.Builder builder) {\n        Config config = builder.getConfig();\n        path = config.get("MyProperties/path").orElse("mypath");\n        javaHome = config.get("MyProperties/javaHome").as(File.class).orElse(null);\n    }\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Another common usage is to refer to config properties through ",(0,o.jsx)(n.code,{children:"$C"})," variables in your annotations:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Rest\n// Get stylesheet from myconfig.cfg but default to devops.css if it\'s not specified\n@HtmlDoc(\n    stylesheet="$C{MyServlet/stylesheet,servlet:/styles/devops.css}",\n)\npublic class MyResource {...}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["It's even possible to reference request-level variables in your config file if you use ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestRequest.html#getConfig()",children:"RestRequest.getConfig()"})," to access the config file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"#-------------------------------------\n# Contents of config_dir/myconfig.cfg\n#-------------------------------------\n[HelloWorldResource]\nmessage = Hello $RQ{person}!\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'/**\n* Sample REST resource that prints out a simple "Hello world!" message.\n*/\n@Rest(\n    config="config_dir/myconfig.cfg",\n    ...\n)\npublic class HelloWorldResource extends BasicRestServlet {\n\n    /**\n    * GET request handler.\n    * Specify the GET parameter "?person=X" for a specialized message!\n    */\n    @RestGet("/")\n    public String sayHello(Config config) {\n        return config.get("HelloWorldResource/message").get();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"You can even add resource bundles into the mix:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"#-------------------------------------\n# Contents of config_dir/myconfig.cfg\n#-------------------------------------\n[HelloWorldResource]\nmessage = $L{localizedMessage,$RQ{person}}\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"#-------------------------------------------\n# Contents of HelloWorldResource.properties\n#-------------------------------------------\nlocalizedMessage = Hello {0}!\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'/**\n* Sample REST resource that prints out a simple "Hello world!" message.\n*/\n@Rest(\n    messages="HelloWorldResources",\n    config="config_dir/myconfig.cfg",\n    ...\n)\npublic class HelloWorldResource extends BasicRestServlet {\n\n    /**\n    * GET request handler.\n    * Specify the GET parameter "?person=X" for a specialized message!\n    */\n    @RestGet("/")\n    public String sayHello(Config config) {\n        return config.get("HelloWorldResource/message").get();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{title:"See Also",type:"info",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/docs/topics/TODO",children:"juneau-config"})})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);