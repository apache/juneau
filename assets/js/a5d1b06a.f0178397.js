"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[6217],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(96540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},97585:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"topics/05.08.00.Listeners","title":"Listeners","description":"Configuration change events can be listened for using the following methods:","source":"@site/docs/topics/05.08.00.Listeners.md","sourceDirName":"topics","slug":"/topics/ConfigListeners","permalink":"/docs/topics/ConfigListeners","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/05.08.00.Listeners.md","tags":[],"version":"current","frontMatter":{"title":"Listeners","slug":"ConfigListeners"},"sidebar":"mainSidebar","previous":{"title":"5.7.4. Bulk Setting Values","permalink":"/docs/topics/BulkSettingValues"},"next":{"title":"5.9. Serializing Configs","permalink":"/docs/topics/SerializingConfigs"}}');var s=t(74848),a=t(28453);const o={title:"Listeners",slug:"ConfigListeners"},r=void 0,c={},l=[];function h(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Configuration change events can be listened for using the following methods:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/Config.html",target:"_blank",children:"Config"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/Config.html#addListener(org.apache.juneau.config.event.ConfigEventListener)",target:"_blank",children:"addListener(ConfigEventListener)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/Config.html#removeListener(org.apache.juneau.config.event.ConfigEventListener)",target:"_blank",children:"removeListener(ConfigEventListener)"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEventListener.html",target:"_blank",children:"ConfigEventListener"})," interface consists of\nthe following method:"]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEventListener.html",target:"_blank",children:"ConfigEventListener"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEventListener.html#onConfigChange(org.apache.juneau.config.event.ConfigEvents)",target:"_blank",children:"onConfigChange(ConfigEvents)"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html",target:"_blank",children:"ConfigEvent"})," class provides access to all the\ninformation about the updated entry:"]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html",target:"_blank",children:"ConfigEvent"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getType()",target:"_blank",children:"getType()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getSection()",target:"_blank",children:"getSection()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getKey()",target:"_blank",children:"getKey()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getValue()",target:"_blank",children:"getValue()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getModifiers()",target:"_blank",children:"getModifiers()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getComment()",target:"_blank",children:"getComment()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/event/ConfigEvent.html#getPreLines()",target:"_blank",children:"getPreLines"})})})]}),"\n",(0,s.jsx)(n.p,{children:"The listener method is triggered:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["After ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/config/Config.html#commit()",target:"_blank",children:"Config.commit()"})," is called."]}),"\n",(0,s.jsx)(n.li,{children:"When the file changes on the file system."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In both cases, the listener is triggered after the changes have been committed."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'final Config config = Config.create("MyConfig.cfg").build();\n\n// Add a listener for changes to MySection/key1\nconfig.addListener(\n    new ConfigEventListener() {\n        @Override\n        public void onConfigChange(ConfigEvents events) {\n            for (ConfigEvent event : events) {\n                if (event.getType() == SET_ENTRY) {\n\n                    String section = event.getSection();\n                    String key = event.getKey();\n\n                    if (section.equals("MySection") && key.equals("key1")) {\n\n                        // Get the new value from the event.\n                        String newVal = event.getValue();\n\n                        // Or get the new value from the config (since the change has already been committed).\n                        newVal = config.getString("MySection/key1");\n                    }\n                }\n            }\n        }\n    }\n)\n'})})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);