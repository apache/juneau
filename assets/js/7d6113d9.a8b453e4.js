"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9800],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(96540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},60722:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"topics/19.04.00.JuneauShadedRestServer","title":"juneau-shaded-rest-server","description":"The juneau-shaded-rest-server artifact bundles all core Juneau modules plus REST server functionality. At 3.8 MB, it provides everything needed for building REST server applications.","source":"@site/docs/topics/19.04.00.JuneauShadedRestServer.md","sourceDirName":"topics","slug":"/topics/JuneauShadedRestServer","permalink":"/docs/topics/JuneauShadedRestServer","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/19.04.00.JuneauShadedRestServer.md","tags":[],"version":"current","frontMatter":{"title":"juneau-shaded-rest-server","slug":"JuneauShadedRestServer"},"sidebar":"mainSidebar","previous":{"title":"19.3. juneau-shaded-rest-client","permalink":"/docs/topics/JuneauShadedRestClient"},"next":{"title":"19.5. juneau-shaded-rest-server-springboot","permalink":"/docs/topics/JuneauShadedRestServerSpringboot"}}');var t=s(74848),a=s(28453);const i={title:"juneau-shaded-rest-server",slug:"JuneauShadedRestServer"},l=void 0,d={},c=[{value:"What&#39;s Included",id:"whats-included",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Maven Dependency",id:"maven-dependency",level:2},{value:"Bazel Dependency",id:"bazel-dependency",level:2},{value:"External Dependencies",id:"external-dependencies",level:2},{value:"Required",id:"required",level:3},{value:"Optional",id:"optional",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Basic REST Resource",id:"basic-rest-resource",level:3},{value:"Automatic Content Negotiation",id:"automatic-content-negotiation",level:3},{value:"Request Body Parsing",id:"request-body-parsing",level:3},{value:"Path Parameters",id:"path-parameters",level:3},{value:"Query Parameters",id:"query-parameters",level:3},{value:"Request/Response Headers",id:"requestresponse-headers",level:3},{value:"Swagger/OpenAPI Integration",id:"swaggeropenapi-integration",level:3},{value:"Exception Handling",id:"exception-handling",level:3},{value:"Guards and Matchers",id:"guards-and-matchers",level:3},{value:"Converters",id:"converters",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Features",id:"features",level:2},{value:"Built-in Serializers/Parsers",id:"built-in-serializersparsers",level:3},{value:"Automatic Features",id:"automatic-features",level:3},{value:"Advanced Features",id:"advanced-features",level:3},{value:"Testing with Mock Framework",id:"testing-with-mock-framework",level:2},{value:"Performance Characteristics",id:"performance-characteristics",level:2},{value:"Migration from Individual Modules",id:"migration-from-individual-modules",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"juneau-shaded-rest-server"})," artifact bundles all core Juneau modules plus REST server functionality. At 3.8 MB, it provides everything needed for building REST server applications."]}),"\n",(0,t.jsx)(n.h2,{id:"whats-included",children:"What's Included"}),"\n",(0,t.jsx)(n.p,{children:"This artifact includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["All modules from ",(0,t.jsx)(n.a,{href:"/docs/topics/JuneauShadedCore",children:"juneau-shaded-core"})]})," (marshalling, config, testing)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"juneau-rest-common"})," - REST APIs common to client and server"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"juneau-rest-server"})," - Full-featured REST servlet API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"juneau-rest-server-rdf"})," - RDF support for REST servers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"juneau-rest-mock"})," - REST testing utilities"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"juneau-shaded-rest-server"})," when you need:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"REST API development"})," - Create RESTful web services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Servlet-based applications"})," - Deploy to any Servlet 6.1+ container"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automatic content negotiation"})," - Support multiple formats automatically"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Swagger/OpenAPI integration"})," - Built-in API documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing REST services"})," - Use the mock framework"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"maven-dependency",children:"Maven Dependency"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-rest-server</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"bazel-dependency",children:"Bazel Dependency"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'maven_jar(\n    name = "juneau_rest_server",\n    artifact = "org.apache.juneau:juneau-shaded-rest-server:${juneau.version}",\n)\n\n# External dependencies\nmaven_jar(\n    name = "jakarta_servlet_api",\n    artifact = "jakarta.servlet:jakarta.servlet-api:6.1.0",\n)\n\nmaven_jar(\n    name = "jetty_server",\n    artifact = "org.eclipse.jetty:jetty-server:12.0.5",\n)\n\njava_library(\n    name = "my_rest_api",\n    srcs = glob(["src/**/*.java"]),\n    deps = [\n        "@juneau_rest_server//jar",\n        "@jakarta_servlet_api//jar",\n        "@jetty_server//jar",\n    ],\n)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"external-dependencies",children:"External Dependencies"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"juneau-shaded-rest-server"})," requires:"]}),"\n",(0,t.jsx)(n.h3,{id:"required",children:"Required"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Jakarta Servlet API 6.1+"})," - Servlet specification"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"optional",children:"Optional"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Jakarta XML Bind API 3.0+"})," - For XML serialization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apache Jena"})," - For RDF support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Servlet Container"})," - Jetty, Tomcat, etc. (runtime dependency)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.h3,{id:"basic-rest-resource",children:"Basic REST Resource"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.apache.juneau.rest.annotation.*;\nimport org.apache.juneau.rest.servlet.*;\n\n@Rest(\n    path="/petstore",\n    title="Petstore API",\n    description="Sample REST API"\n)\npublic class PetStoreResource extends BasicRestServlet {\n    \n    @RestGet(path="/pets")\n    public List<Pet> getPets() {\n        return petService.getAllPets();\n    }\n    \n    @RestGet(path="/pets/{id}")\n    public Pet getPet(@Path int id) {\n        return petService.getPet(id);\n    }\n    \n    @RestPost(path="/pets")\n    public Pet createPet(@Content Pet pet) {\n        return petService.createPet(pet);\n    }\n    \n    @RestPut(path="/pets/{id}")\n    public Pet updatePet(@Path int id, @Content Pet pet) {\n        return petService.updatePet(id, pet);\n    }\n    \n    @RestDelete(path="/pets/{id}")\n    public void deletePet(@Path int id) {\n        petService.deletePet(id);\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"automatic-content-negotiation",children:"Automatic Content Negotiation"}),"\n",(0,t.jsxs)(n.p,{children:["Juneau automatically serializes responses based on the ",(0,t.jsx)(n.code,{children:"Accept"})," header:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestGet(path="/person/{id}")\npublic Person getPerson(@Path int id) {\n    return new Person("John Smith", 42);\n}\n\n// GET /person/1\n// Accept: application/json  \u2192  {"name":"John Smith","age":42}\n// Accept: text/xml          \u2192  <object><name>John Smith</name><age>42</age></object>\n// Accept: text/html         \u2192  <table>...</table>\n// Accept: text/plain        \u2192  name=John Smith, age=42\n'})}),"\n",(0,t.jsx)(n.h3,{id:"request-body-parsing",children:"Request Body Parsing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestPost(path="/person")\npublic Person createPerson(@Content Person person) {\n    // person is automatically parsed from JSON, XML, etc.\n    return personService.create(person);\n}\n\n// POST /person\n// Content-Type: application/json\n// Body: {"name":"John","age":42}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"path-parameters",children:"Path Parameters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestGet(path="/users/{userId}/posts/{postId}")\npublic Post getUserPost(\n    @Path("userId") int userId,\n    @Path("postId") int postId\n) {\n    return postService.getPost(userId, postId);\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestGet(path="/search")\npublic List<Result> search(\n    @Query("q") String query,\n    @Query("limit") @Default("10") int limit,\n    @Query("offset") @Default("0") int offset\n) {\n    return searchService.search(query, limit, offset);\n}\n\n// GET /search?q=juneau&limit=20&offset=40\n'})}),"\n",(0,t.jsx)(n.h3,{id:"requestresponse-headers",children:"Request/Response Headers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestGet(path="/data")\npublic String getData(\n    @Header("User-Agent") String userAgent,\n    RestResponse res\n) {\n    res.setHeader("X-Custom", "value");\n    return "data";\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"swaggeropenapi-integration",children:"Swagger/OpenAPI Integration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(\n    path="/api",\n    swagger=@Swagger(\n        title="My API",\n        version="1.0",\n        description="API Description",\n        contact=@Contact(name="Support", email="support@example.com")\n    )\n)\npublic class MyApi extends BasicRestServlet {\n    \n    @RestGet(\n        path="/items",\n        summary="Get all items",\n        description="Returns a list of all items"\n    )\n    public List<Item> getItems() {\n        return itemService.getAll();\n    }\n}\n\n// Swagger UI available at: /api/swagger\n// OpenAPI JSON at: /api/openapi.json\n'})}),"\n",(0,t.jsx)(n.h3,{id:"exception-handling",children:"Exception Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@RestGet(path="/person/{id}")\npublic Person getPerson(@Path int id) throws NotFound {\n    Person person = personService.getPerson(id);\n    if (person == null)\n        throw new NotFound("Person not found: {0}", id);\n    return person;\n}\n\n// Returns HTTP 404 with error message\n'})}),"\n",(0,t.jsx)(n.h3,{id:"guards-and-matchers",children:"Guards and Matchers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(path="/admin")\n@RestGuard(AdminGuard.class)  // Require admin role\npublic class AdminResource extends BasicRestServlet {\n    \n    @RestGet(path="/users")\n    public List<User> getUsers() {\n        return userService.getAllUsers();\n    }\n}\n\npublic class AdminGuard extends RestGuard {\n    @Override\n    public boolean guard(RestRequest req, RestResponse res) {\n        return req.isUserInRole("admin");\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"converters",children:"Converters"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(\n    path="/api",\n    converters={Queryable.class, Introspectable.class}\n)\npublic class MyApi extends BasicRestServlet {\n    \n    @RestGet(path="/people")\n    public List<Person> getPeople() {\n        return personService.getAll();\n    }\n    \n    // GET /people?s=age>21&v=name,age&o=age\n    // Returns filtered, sorted, and projected results\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(\n    path="/api",\n    config="myapi.cfg",  // External config file\n    defaultAccept="application/json",\n    defaultContentType="application/json",\n    maxInput="10M"  // Limit request size\n)\npublic class MyApi extends BasicRestServlet {\n    // ...\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,t.jsx)(n.h3,{id:"built-in-serializersparsers",children:"Built-in Serializers/Parsers"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"JSON (multiple flavors)"}),"\n",(0,t.jsx)(n.li,{children:"XML"}),"\n",(0,t.jsx)(n.li,{children:"HTML (with customizable styling)"}),"\n",(0,t.jsx)(n.li,{children:"URL-Encoding"}),"\n",(0,t.jsx)(n.li,{children:"MessagePack"}),"\n",(0,t.jsx)(n.li,{children:"OpenAPI"}),"\n",(0,t.jsx)(n.li,{children:"Plain Text"}),"\n",(0,t.jsx)(n.li,{children:"CSV"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"automatic-features",children:"Automatic Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Content negotiation"}),"\n",(0,t.jsx)(n.li,{children:"Character encoding detection"}),"\n",(0,t.jsx)(n.li,{children:"GZIP compression"}),"\n",(0,t.jsx)(n.li,{children:"Request/response logging"}),"\n",(0,t.jsx)(n.li,{children:"Exception mapping"}),"\n",(0,t.jsx)(n.li,{children:"Bean validation"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Role-based security"}),"\n",(0,t.jsx)(n.li,{children:"Method-level guards"}),"\n",(0,t.jsx)(n.li,{children:"Request/response interceptors"}),"\n",(0,t.jsx)(n.li,{children:"Custom converters"}),"\n",(0,t.jsx)(n.li,{children:"File uploads/downloads"}),"\n",(0,t.jsx)(n.li,{children:"Server-sent events"}),"\n",(0,t.jsx)(n.li,{children:"HTTP/2 support (via container)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"testing-with-mock-framework",children:"Testing with Mock Framework"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Test\npublic void testRestEndpoint() throws Exception {\n    MockRestClient client = MockRestClient.create(MyRestApi.class)\n        .json()\n        .build();\n    \n    // Test GET\n    Person person = client.get("/person/1")\n        .run()\n        .assertStatus().is(200)\n        .getContent().as(Person.class);\n    \n    assertEquals("John", person.getName());\n    \n    // Test POST\n    Person newPerson = new Person("Jane", 30);\n    client.post("/person")\n        .content(newPerson)\n        .run()\n        .assertStatus().is(201);\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"performance-characteristics",children:"Performance Characteristics"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Streaming"}),": Efficient memory usage for large requests/responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Thread-Safe"}),": All serializers/parsers are thread-safe"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Bean metadata is cached for performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimal Overhead"}),": No reflection during serialization/parsing"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"migration-from-individual-modules",children:"Migration from Individual Modules"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-marshall</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-rest-server</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-rest-common</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-rest-server</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Need Spring Boot?"})," Use ",(0,t.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestServerSpringboot",children:"juneau-shaded-rest-server-springboot"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Need client functionality too?"})," Use ",(0,t.jsx)(n.a,{href:"/docs/topics/JuneauShadedAll",children:"juneau-shaded-all"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Learn about REST server:"})," See ",(0,t.jsx)(n.a,{href:"/docs/topics/JuneauRestServerBasics",children:"REST Server Basics"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Learn about Swagger integration:"})," See ",(0,t.jsx)(n.a,{href:"/docs/topics/SwaggerIntegration",children:"Swagger Integration"})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);