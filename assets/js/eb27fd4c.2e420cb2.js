"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[2278],{19886:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/jd.SwaggerUI.json-cb1c29336d828439b40027b72cff37e8.png"},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var a=s(96540);const t={},r=a.createContext(t);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},34199:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/jd.SwaggerUI.html-0bea91eca4a14f98a32d2bc7b1f15f67.png"},67946:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>g});const a=JSON.parse('{"id":"topics/04.05.00.SwaggerUi","title":"Swagger UI","description":"The SwaggerUI class is a DTO class for generating","source":"@site/docs-staging/topics/04.05.00.SwaggerUi.md","sourceDirName":"topics","slug":"/topics/04.05.00.SwaggerUi","permalink":"/docs/topics/04.05.00.SwaggerUi","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/04.05.00.SwaggerUi.md","tags":[],"version":"current","frontMatter":{"title":"Swagger UI"},"sidebar":"mainSidebar","previous":{"title":"4.4. Swagger","permalink":"/docs/topics/04.04.00.Swagger"},"next":{"title":"5.1. juneau-config Basics","permalink":"/docs/topics/05.01.00.JuneauConfigBasics"}}');var t=s(74848),r=s(28453);const i={title:"Swagger UI"},o=void 0,c={},g=[];function l(e){const n={a:"a",code:"code",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/ui/SwaggerUI.html",children:"SwaggerUI"})," class is a DTO class for generating\nSwagger user interfaces from ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/Swagger.html",children:"Swagger"})," beans."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"PetStore"})," example described later provides an example of auto-generated Swagger JSON:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Swagger JSON",src:s(19886).A+"",width:"1800",height:"784"})}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/ui/SwaggerUI.html",children:"SwaggerUI"}),", we're able to render that JSON as a\nSwagger user interface when the request is asking for HTML:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Swagger UI",src:s(34199).A+"",width:"1800",height:"1136"})}),"\n",(0,t.jsxs)(n.p,{children:["The class itself is nothing more than a POJO swap that swaps out ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/Swagger.html",children:"Swagger"})," beans with ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/html5/Div.html",children:"Div"})," elements."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class SwaggerUI extends ObjectSwap {\n\n    @Override\n    public MediaType[] forMediaTypes() {\n        // Only use this swap when the Accept type is HTML.\n        return new MediaType[] {MediaType.HTML};\n    }\n\n    @Override\n    public Div swap(BeanSession beanSession, Swagger swagger) throws Exception {\n        ...\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/servlet/BasicRestServlet.html",children:"BasicRestServlet"})," class (describe later) shows\nhow this swap is used in the REST interface to generate the Swagger UI shown above:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(\n    // Allow OPTIONS requests to be simulated using ?method=OPTIONS query parameter.\n    allowedMethodParams="OPTIONS",\n    ...\n)\n@BeanConfig(\n    // POJO swaps to apply to all serializers/parsers.\n    swaps={\n        // Use the SwaggerUI swap when rendering Swagger beans.\n        SwaggerUI.class\n    }\n)\npublic abstract class BasicRestServlet extends RestServlet implements BasicRestConfig {\n\n    /**\n    * [OPTIONS /*] - Show resource options.\n    */\n    @RestOp(\n        method=OPTIONS,\n        path="/*",\n        summary="Swagger documentation",\n        description="Swagger documentation for this resource."\n    )\n    @HtmlDocConfig(\n        // Override the nav links for the swagger page.\n        navlinks={\n            "back: servlet:/",\n            "json: servlet:/?method=OPTIONS&Accept=text/json&plainText=true"\n        },\n        // Never show aside contents of page inherited from class.\n        aside="NONE"\n    )\n    public Swagger getOptions(RestRequest req) {\n        // Localized Swagger for this resource is available through the RestRequest object.\n        return req.getSwagger();\n    }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);