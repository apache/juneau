"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8188],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(96540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},41342:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>g});const s=JSON.parse('{"id":"topics/04.04.00.Swagger","title":"Swagger","description":"The Juneau Swagger DTOs are simply beans with fluent-style setters that allow you to quickly construct Swagger documents","source":"@site/docs/topics/04.04.00.Swagger.md","sourceDirName":"topics","slug":"/topics/04.04.00.Swagger","permalink":"/docs/topics/04.04.00.Swagger","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs/topics/04.04.00.Swagger.md","tags":[],"version":"current","frontMatter":{"title":"Swagger"},"sidebar":"tutorialSidebar","previous":{"title":"4.3. Atom","permalink":"/docs/topics/04.03.00.Atom"},"next":{"title":"4.5. Swagger UI","permalink":"/docs/topics/04.05.00.SwaggerUi"}}');var a=t(74848),r=t(28453);const o={title:"Swagger"},i=void 0,c={},g=[];function d(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The Juneau Swagger DTOs are simply beans with fluent-style setters that allow you to quickly construct Swagger documents\nas Java objects.\nThese object can then be serialized to JSON using one of the existing JSON serializers, or to other languages such as\nXML or HTML using the other serializers."}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/SwaggerBuilder.html",children:"SwaggerBuilder"})," class is a utility class with\npredefined static methods that allow you to easily construct DTO instances in a minimal amount of code."]}),"\n",(0,a.jsxs)(n.p,{children:["The following is an example Swagger document from the ",(0,a.jsx)(n.a,{href:"https://swagger.io/",children:"Swagger website"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'{\n    "swagger": "2.0",\n    "info": {\n        "title": "Swagger Petstore",\n        "description": "This is a sample server Petstore server.",\n        "version": "1.0.0",\n        "termsOfService": "http://swagger.io/terms/",\n        "contact": {\n            "email": "apiteam@swagger.io"\n        },\n        "license": {\n            "name": "Apache 2.0",\n            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"\n        }\n    },\n    "host": "petstore.swagger.io",\n    "basePath": "/v2",\n    "tags": [\n        {\n            "name": "pet",\n            "description": "Everything about your Pets",\n            "externalDocs": {\n                "description": "Find out more",\n                "url": "http://swagger.io"\n            }\n        }\n    ],\n    "schemes": [\n        "http"\n    ],\n    "paths": {\n        "/pet": {\n            "post": {\n                "tags": [\n                    "pet"\n                ],\n                "summary": "Add a new pet to the store",\n                "description": "",\n                "operationId": "addPet",\n                "consumes": [\n                    "application/json",\n                    "text/xml"\n                ],\n                "produces": [\n                    "application/json",\n                    "text/xml"\n                ],\n                "parameters": [\n                    {\n                        "in": "body",\n                        "name": "body",\n                        "description": "Pet object that needs to be added to the store",\n                        "required": true\n                    }\n                ],\n                "responses": {\n                    "405": {\n                        "description": "Invalid input"\n                    }\n                }\n            }\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"This document can be generated by the following Java code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'static import org.apache.juneau.dto.swagger.SwaggerBuilder.*;\n\nSwagger swagger = swagger()\n    .setSwagger("2.0")\n    .setInfo(\n        info("Swagger Petstore", "1.0.0")\n            .setDescription("This is a sample server Petstore server.")\n            .setTermsOfService("http://swagger.io/terms/")\n            .setContact(\n                contact().setEmail("apiteam@swagger.io")\n            )\n            .setLicense(\n                license("Apache 2.0").setUrl("http://www.apache.org/licenses/LICENSE-2.0.html")\n            )\n    )\n    .setHost("petstore.swagger.io")\n    .setBasePath("/v2")\n    .setTags(\n        tag("pet").setDescription("Everything about your Pets")\n            .setExternalDocs(\n                externalDocumentation("http://swagger.io", "http://swagger.io")\n            )\n    )\n    .setSchemes("http")\n    .setPath("/pet", "post",\n        operation()\n            .setTags("pet")\n            .setSummary("Add a new pet to the store")\n            .setDescription("")\n            .setOperationId("addPet")\n            .setConsumes(MediaType.JSON, MediaType.XML)\n            .setProduces(MediaType.JSON, MediaType.XML)\n            .setParameters(\n                parameterInfo("body", "body")\n                    .setDescription("Pet object that needs to be added to the store")\n                    .setRequired(true)\n            )\n            .setResponse(405, responseInfo("Invalid input"))\n    );\n\n// Serialize using JSON serializer.\nString swaggerJson = Json.of(swagger);\n\n// Or just use toString().\nString swaggerJson = swagger.toString();\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Methods that take in beans and ",(0,a.jsx)(n.code,{children:"Collections"})," of beans can also take in JSON representations of those objects."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Pass in a JSON object representation of an Info object.\nswagger.info("");\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Properties can also be accessed via the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/SwaggerElement.html#get(String,Class)",children:"SwaggerElement.get()"})," and ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/SwaggerElement.html#set(String,Object)",children:"SwaggerElement.set()"})," methods.\nThese methods can also be used to set and retrieve non-Swagger attributes such as ",(0,a.jsx)(n.code,{children:"$ref"})," (which is not a part of the\nSwagger spec but is part of the JSON Schema spec)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Set a non-standard attribute.\nswagger.set("$ref", "http://foo.com");\n\n// Retrieve a non-standard attribute.\nURI ref = swagger.get("$ref", URI.class);\n'})}),"\n",(0,a.jsx)(n.p,{children:"Swagger docs can be parsed back into Swagger beans using the following code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"Swagger swagger = JsonParser.DEFAULT.parse(swaggerJson, Swagger.class);\n"})})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);