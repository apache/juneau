"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1766],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var a=t(96540);const i={},s=a.createContext(i);function o(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},44850:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"topics/05.06.00.Sections","title":"Sections","description":"Config sections can be retrieved in-bulk using the Config.getSection(String)) method.","source":"@site/docs-staging/topics/05.06.00.Sections.md","sourceDirName":"topics","slug":"/topics/05.06.00.Sections","permalink":"/docs/topics/05.06.00.Sections","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/05.06.00.Sections.md","tags":[],"version":"current","frontMatter":{"title":"Sections"},"sidebar":"mainSidebar","previous":{"title":"5.5. Modded/Encoded Entries","permalink":"/docs/topics/05.05.00.ModdedEntries"},"next":{"title":"5.7.1. Setting Values Basics","permalink":"/docs/topics/05.07.01.SettingValuesBasics"}}');var i=t(74848),s=t(28453);const o={title:"Sections"},c=void 0,r={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Config sections can be retrieved in-bulk using the ",(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Config.html#getSection(String)",children:"Config.getSection(String)"})," method."]}),"\n",(0,i.jsx)(n.p,{children:"It returns the following bean:"}),"\n",(0,i.jsx)("tree",{children:(0,i.jsxs)("node-0",{children:[(0,i.jsx)("javac-class",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html",children:"Section"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asBean(Class)",children:"asBean(Class)"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asBean(Class,boolean)",children:"asBean(Class,boolean)"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asInterface(Class)",children:"asInterface(Class)"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asMap()",children:"asMap()"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#isPresent()",children:"isPresent()"})})," ",(0,i.jsx)("javac-method",{children:(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#writeToBean(Object,boolean)",children:"writeToBean(Object,boolean)"})})]})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asMap()",children:"asMap()"})," method allows you to access a section as\nsimple key/value pairs."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"// Example config file\n[MyAddress]\nstreet = 123 Main Street\ncity = Anywhere\nstate = NY\nzip = 12345\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Example usage\nConfig config = Config.create("MyConfig.cfg").build();\n\nJsonMap map = config.getSection("MyAddress").asMap().get();\n\nString street = map.getString("street");\nString city = map.getString("city");\nString state = map.getString("state");\nint zip = map.getInt("zip");\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Maps"})," created this way are snapshot copies of the section at the time of the method call.\nConfig files can also be used to directly populate beans using ",(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asBean(Class)",children:"asBean()"})," or ",(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#writeToBean(Object,boolean)",children:"writeToBean()"}),"."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"// Example config file\n[MyAddress]\nstreet = 123 Main Street\ncity = Anywhere\nstate = NY\nzip = 12345\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Example bean\npublic class Address {\n    public String street, city;\n    public StateEnum state;\n    public int zip;\n}\n\n// Example usage\nConfig config = Config.create("MyConfig.cfg").build();\nAddress myAddress = config.getSection("MyAddress").as(Address.class).orElse(null);\n'})})]}),"\n",(0,i.jsxs)(n.p,{children:["Like ",(0,i.jsx)(n.code,{children:"Maps"}),", beans created this way are snapshot copies of the section at the time of the method call.\nConfig sections can also be accessed via interface proxies using ",(0,i.jsx)(n.a,{href:"../apidocs/org/apache/juneau/config/Section.html#asInterface(Class)",children:"Section.asInterface(Class)"}),".\nWhile section ",(0,i.jsx)(n.code,{children:"Maps"})," and beans retrieve copies of the configuration data at the time of the method call, section\ninterfaces can also be use to set values in the underlying configuration."]}),"\n",(0,i.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"// Example config file\n[MySection]\nstring = foo\nint = 123\nenum = ONE\nbean = {foo:'bar',baz:123}\nint3dArray = [[[123,null],null],null]\nbean1d3dListMap = {key:[[[[{foo:'bar',baz:123}]]]]}\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Example interface.\n// Setters are optional.\npublic interface MyConfigInterface {\n\n    String getString();\n    void setString(String value);\n\n    int getInt();\n    void setInt(int value);\n\n    MyEnum getEnum();\n    void setEnum(MyEnum value);\n\n    MyBean getBean();\n    void setBean(MyBean value);\n\n    int[][][] getInt3dArray();\n    void setInt3dArray(int[][][] value);\n\n    Map> getBean1d3dListMap();\n    void setBean1d3dListMap(Map> value);\n}\n\n// Example usage.\nConfig config = Config.create("MyConfig.cfg").build();\nMyConfigInterface intf = config.getSection("MySection").asInterface(MyConfigInterface.class).get();\n\n// Read a value.\nint myInt = intf.getInt();\n\n// Write a value.\nintf.setBean(new MyBean());\n\n// Commit your changes to the store.\nconfig.commit();\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);