"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[3856],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(96540);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},44008:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"topics/08.18.02.HtmlUIvsDI","title":"User Interfaces (UI) vs. Developer Interfaces (DI)","description":"An important distinction needs to be made about the HTML representations produced by the REST API.","source":"@site/docs/topics/08.18.02.HtmlUIvsDI.md","sourceDirName":"topics","slug":"/topics/08.18.02.HtmlUIvsDI","permalink":"/docs/topics/08.18.02.HtmlUIvsDI","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs/topics/08.18.02.HtmlUIvsDI.md","tags":[],"version":"current","frontMatter":{"title":"User Interfaces (UI) vs. Developer Interfaces (DI)"},"sidebar":"tutorialSidebar","previous":{"title":"8.18.1. @HtmlDocConfig Annotation Basics","permalink":"/docs/topics/08.18.01.HtmlDocConfigAnnotationBasics"},"next":{"title":"8.18.3. HTML Widgets","permalink":"/docs/topics/08.18.03.HtmlWidgets"}}');var o=n(74848),i=n(28453);const r={title:"User Interfaces (UI) vs. Developer Interfaces (DI)"},a=void 0,c={},l=[];function d(e){const t={li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"An important distinction needs to be made about the HTML representations produced by the REST API.\nThese should not be considered User Interfaces but rather Developer Interfaces.\nUIs should hide the end-user from the underlying architecture.\nThe audience generally consists of non-technical people not interested in how the UI works.\nDIs, on the other hand, should NOT hide the end-user from the underlying architecture.\nInstead, it's a thin veneer over the REST interface with the following goals:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Make it easy for the developer to explore and understand the REST API."}),"\n",(0,o.jsx)(t.li,{children:"Make it easy for the developer to debug the REST API using simple tools (hopefully just a browser)."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"As a result, the following guidelines are recommended:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Use titles/descriptions/asides to describe why the REST interface exists."}),"\nA developer knowing little about it should be able to access it with a browser and quickly understand what it is and how to use it."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Don't hide the raw data!"}),"\nThe HTML view should simply be considered an easier-to-read representation of the data normally rendered in JSON or some other format."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Limit your use of Javascript!"}),"\nYou can use it sparingly if you want to implement something simple like a pull-down menu to simplify some debug task but remember that your audience cares more about interacting with your service programmatically using REST.\nRemember that the HTML is just icing on the cake."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Don't use it to implement a Web 2.0 interface!"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"If you want a Web 2.0 UI, implement it separately ON TOP OF this REST interface.\nThe architecture is flexible enough that you could in theory pull in and use jQuery, React, Angular, or any number of\nsophisticated Javascript UI frameworks.\nResist the urge to do so."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);