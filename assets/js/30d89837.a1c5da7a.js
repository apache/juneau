"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9903],{28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var t=r(96540);const a={},s=t.createContext(a);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(s.Provider,{value:n},e.children)}},45605:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>i});const t=JSON.parse('{"id":"topics/02.22.00.Encoders","title":"Encoders","description":"The org.apache.juneau.encoders package defines an API for handling encoding-based matching","source":"@site/docs/topics/02.22.00.Encoders.md","sourceDirName":"topics","slug":"/topics/MarshallEncoders","permalink":"/docs/topics/MarshallEncoders","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.22.00.Encoders.md","tags":[],"version":"current","frontMatter":{"title":"Encoders","slug":"MarshallEncoders"},"sidebar":"mainSidebar","previous":{"title":"2.21.5. SVL Other Notes","permalink":"/docs/topics/SvlOtherNotes"},"next":{"title":"2.23. Object Tools","permalink":"/docs/topics/ObjectTools"}}');var a=r(74848),s=r(28453);const c={title:"Encoders",slug:"MarshallEncoders"},o=void 0,d={},i=[{value:"EncoderSet",id:"encoderset",level:4},{value:"Match ordering",id:"match-ordering",level:4},{value:"Encoder API",id:"encoder-api",level:4}];function l(e){const n={admonition:"admonition",code:"code",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/package-summary.html",target:"_blank",children:"org.apache.juneau.encoders"})," package defines an API for handling encoding-based matching\nof ",(0,a.jsx)(n.code,{children:"Accept-Encoding"}),"/",(0,a.jsx)(n.code,{children:"Content-Encoding"})," HTTP headers."]}),"\n",(0,a.jsx)(n.p,{children:"It consists of the following classes:"}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.html",target:"_blank",children:"EncoderSet"})})}),(0,a.jsx)("node-0",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html",target:"_blank",children:"Encoder"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/IdentityEncoder.html",target:"_blank",children:"IdentityEncoder"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/GzipEncoder.html",target:"_blank",children:"GzipEncoder"})})})]}),"\n",(0,a.jsx)(n.h4,{id:"encoderset",children:"EncoderSet"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.html",target:"_blank",children:"EncoderSet"})," class represents the set of ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html",target:"_blank",children:"org.apache.juneau.encoders"})," keyed by codings.\nIt maintains a set of encoders and the codings that they can handle."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.html#getEncoderMatch(java.lang.String)",target:"_blank",children:"getEncoderMatch(String)"})," and ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.html#getEncoder(java.lang.String)",target:"_blank",children:"EncoderSet.getEncoder(String)"})," methods are then used to find appropriate encoders for specific ",(0,a.jsx)(n.code,{children:"Accept-Encoding"})," and ",(0,a.jsx)(n.code,{children:"Content-Encoding"})," header values."]}),"\n",(0,a.jsx)(n.h4,{id:"match-ordering",children:"Match ordering"}),"\n",(0,a.jsxs)(n.p,{children:["Encoders are tried in the order they appear in the set.\nThe ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.Builder.html#add(java.lang.Class...)",target:"_blank",children:"EncoderSet.Builder.add(Class...)"})," / ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/EncoderSet.Builder.html#add(org.apache.juneau.encoders.Encoder...)",target:"_blank",children:"EncoderSet.Builder.add(Encoder...)"})," methods prepend the values to the list to allow them the opportunity to override encoders already in the list."]}),"\n",(0,a.jsxs)(n.p,{children:["For example, calling ",(0,a.jsx)(n.code,{children:"builder.add(E1.class,E2.class).add(E3.class, E4.class)"})," will result in the order ",(0,a.jsx)(n.code,{children:"E3, E4, E1, E2"}),"."]}),"\n",(0,a.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Create an encoder group with support for gzip compression.\nEncoderSet encoders = EncoderSet\n    .create()\n    .add(GzipEncoder.class)\n    .build();\n\n// Should return "gzip"\nString matchedCoding = encoders.findMatch("compress;q=1.0, gzip;q=0.8, identity;q=0.5, *;q=0");\n\n// Get the encoder\nEncoder encoder = encoders.getEncoder(matchedCoding);\n'})})}),"\n",(0,a.jsx)(n.h4,{id:"encoder-api",children:"Encoder API"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html",target:"_blank",children:"Encoder"})," interface is used for enabling decompression on\nrequests and compression on responses, such as support for GZIP compression.\nIt is used to wrap input and output streams within compression/decompression streams."]}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-abstract-class",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html",target:"_blank",children:"Encoder"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-method",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html#getCodings()",target:"_blank",children:"getCodings()"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-method",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html#getInputStream(java.io.InputStream)",target:"_blank",children:"getInputStream(InputStream)"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-method",{children:(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/encoders/Encoder.html#getOutputStream(java.io.OutputStream)",target:"_blank",children:"getOutputStream(OutputStream)"})})})]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Encoders are registered with ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/servlet/RestServlet.html",target:"_blank",children:"RestServlets"})," through the ",(0,a.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/annotation/Rest.html#encoders()",target:"_blank",children:"@Rest(encoders)"})," annotation."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);