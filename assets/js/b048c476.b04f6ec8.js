"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[6628],{28453:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>o});var t=r(96540);const s={},n=t.createContext(s);function i(e){const a=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(n.Provider,{value:a},e.children)}},91832:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"topics/08.05.02.PartMarshallers","title":"Part Marshallers","description":"Juneau comes with three basic marshaller types for serializing and parsing Header, Query, Form, and Path parts:","source":"@site/docs-staging/topics/08.05.02.PartMarshallers.md","sourceDirName":"topics","slug":"/topics/08.05.02.PartMarshallers","permalink":"/docs/topics/08.05.02.PartMarshallers","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/08.05.02.PartMarshallers.md","tags":[],"version":"current","frontMatter":{"title":"Part Marshallers"},"sidebar":"mainSidebar","previous":{"title":"8.5.1. HTTP Part Basics","permalink":"/docs/topics/08.05.01.HttpPartBasics"},"next":{"title":"8.5.3. HTTP Part Annotations","permalink":"/docs/topics/08.05.03.HttpPartAnnotations"}}');var s=r(74848),n=r(28453);const i={title:"Part Marshallers"},o=void 0,l={},c=[];function h(e){const a={a:"a",code:"code",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:"Juneau comes with three basic marshaller types for serializing and parsing Header, Query, Form, and Path parts:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-interface",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",children:"HttpPartSerializer"})})}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/httppart/SimplePartSerializer.html",children:"SimplePartSerializer"})})," - Serializes directly to strings."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/uon/UonSerializer.html",children:"UonSerializer"})})," - Serializes to UON notation."]}),(0,s.jsxs)("node-2",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",children:"OpenApiSerializer"})})," - Serializes using OpenAPI schema rules."]}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-interface",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartParser.html",children:"HttpPartParser"})})}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/httppart/SimplePartParser.html",children:"SimplePartParser"})})," - Parses directly from strings."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/uon/UonParser.html",children:"UonParser"})})," - Parses from UON notation."]}),(0,s.jsxs)("node-2",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiParser.html",children:"OpenApiParser"})})," - Parses using OpenAPI schema rules."]})]}),"\n",(0,s.jsx)(a.p,{children:"By default, the REST API uses the OpenAPI serializer and parser which allows for schema-based marshalling."}),"\n",(0,s.jsx)(a.p,{children:"You also have the option to use UON marshalling which is schema-less but allows for JSON-equivalent data structures\n(object/array/primitives/...) using URL-encoding notation.\nThis can be done by overriding the part marshallers through the following APIs:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"Rest"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#partSerializer()",children:"partSerializer"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#partParser()",children:"partParser"})})}),(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/RestContext/Builder.html",children:"RestContext.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/RestContext/Builder.html#partSerializer(HttpPartSerializer)",children:"partSerializer(HttpPartSerializer)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(a.a,{href:"../apidocs/org/apache/juneau/rest/RestContext/Builder.html#partParser(HttpPartParser)",children:"partParser(HttpPartParser)"})})})]}),"\n",(0,s.jsx)(a.p,{children:"The OpenAPI marshallers themselves also have the ability to support UON notation for individual parts via the schema\nitself:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'@Query(..., schema=@Schema(format="uon")) Map myMap\n'})})]})}function d(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);