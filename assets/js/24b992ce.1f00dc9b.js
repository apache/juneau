"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9087],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var r=s(96540);const t={},a=r.createContext(t);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}},32010:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"topics/02.23.00.ObjectTools","title":"Object Tools","description":"The org.apache.juneau.objecttools package defines convenience utility","source":"@site/docs-staging/topics/02.23.00.ObjectTools.md","sourceDirName":"topics","slug":"/topics/02.23.00.ObjectTools","permalink":"/docs/topics/02.23.00.ObjectTools","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/02.23.00.ObjectTools.md","tags":[],"version":"current","frontMatter":{"title":"Object Tools"},"sidebar":"mainSidebar","previous":{"title":"2.22. Encoders","permalink":"/docs/topics/02.22.00.Encoders"},"next":{"title":"2.24.1. JSON Basics","permalink":"/docs/topics/02.24.01.JsonBasics"}}');var t=s(74848),a=s(28453);const o={title:"Object Tools"},i=void 0,c={},l=[{value:"ObjectRest",id:"objectrest",level:4},{value:"ObjectSearcher",id:"objectsearcher",level:4},{value:"ObjectSorter",id:"objectsorter",level:4},{value:"ObjectViewer",id:"objectviewer",level:4},{value:"ObjectPaginator",id:"objectpaginator",level:4},{value:"ObjectIntrospector",id:"objectintrospector",level:4},{value:"ObjectMerger",id:"objectmerger",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools.html",children:"org.apache.juneau.objecttools"})," package defines convenience utility\nclasses for accessing and manipulating POJOs."]}),"\n",(0,t.jsx)(n.p,{children:"It consists of the following classes:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html",children:"ObjectRest"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectSearcher.html",children:"ObjectSearcher"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectSorter.html",children:"ObjectSorter"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectViewer.html",children:"ObjectViewer"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectPaginator.html",children:"ObjectPaginator"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectIntrospector.html",children:"ObjectIntrospector"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectMerger.html",children:"ObjectMerger"})})})]}),"\n",(0,t.jsx)(n.h4,{id:"objectrest",children:"ObjectRest"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html",children:"ObjectRest"})," class provides the ability to perform\nstandard REST operations (GET, PUT, POST, DELETE) against nodes in a POJO model.\nNodes in the POJO model are addressed using URLs."]}),"\n",(0,t.jsx)(n.p,{children:"A POJO model is defined as a tree model where nodes consist of consisting of the following:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[(0,t.jsx)(n.a,{href:"../apidocs/java/util/Map.html",children:"Maps"})," and Java beans representing JSON objects."]})}),(0,t.jsx)("node-0",{children:(0,t.jsxs)("java-class",{children:[(0,t.jsx)(n.a,{href:"../apidocs/java/util/Collection.html",children:"Collections"})," and arrays representing JSON arrays."]})}),(0,t.jsx)("node-0",{children:"Java beans."})]}),"\n",(0,t.jsx)(n.p,{children:"Leaves of the tree can be any type of object."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html#get(String)",children:"get()"})," to retrieve an element from a JSON tree."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html#put(String,Object)",children:"put()"})," to create (or overwrite) an element in a JSON tree."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html#post(String,Object)",children:"post()"})," to add an element to a list in a JSON tree."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectRest.html#delete(String)",children:"delete()"})," to remove an element from a JSON tree."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Construct an unstructured POJO model\nJsonMap map = JsonMap.ofJson(""\n    + "{"\n    + "    name:\'John Smith\', "\n    + "    address:{ "\n    + "        streetAddress:\'21 2nd Street\', "\n    + "        city:\'New York\', "\n    + "        state:\'NY\', "\n    + "        postalCode:10021 "\n    + "    }, "\n    + "    phoneNumbers:[ "\n    + "        \'212 555-1111\', "\n    + "        \'212 555-2222\' "\n    + "    ], "\n    + "    additionalInfo:null, "\n    + "    remote:false, "\n    + "    height:62.4, "\n    + "    \'fico score\':\' > 640\' "\n    + "} "\n\n);\n\n// Wrap Map inside an ObjectRest object\nObjectRest johnSmith = ObjectRest.create(map);\n\n// Get a simple value at the top level\n// "John Smith"\nString name = johnSmith.getString("name");\n\n// Change a simple value at the top level\njohnSmith.put("name", "The late John Smith");\n\n// Get a simple value at a deep level\n// "21 2nd Street"\nString streetAddress = johnSmith.getString("address/streetAddress");\n\n// Set a simple value at a deep level\njohnSmith.put("address/streetAddress", "101 Cemetery Way");\n\n// Get entries in a list\n// "212 555-1111"\nString firstPhoneNumber = johnSmith.getString("phoneNumbers/0");\n\n// Add entries to a list\njohnSmith.post("phoneNumbers", "212 555-3333");\n\n// Delete entries from a model\njohnSmith.delete("fico score");\n\n// Add entirely new structures to the tree\nJsonMap medicalInfo = JsonMap.ofJson(""\n    + "{"\n    + "\tcurrentStatus: \'deceased\',"\n    + "\thealth: \'non-existent\',"\n    + "\tcreditWorthiness: \'not good\'"\n    + "}"\n\n);\njohnSmith.put("additionalInfo/medicalInfo", medicalInfo);\n'})})}),"\n",(0,t.jsxs)(n.p,{children:["In the special case of ",(0,t.jsx)(n.code,{children:"Collections"}),"/arrays of ",(0,t.jsx)(n.code,{children:"Maps"}),"/beans, a special XPath-like selector notation can be used in lieu of\nindex numbers on GET requests to return a map/bean with a specified attribute value.\nThe syntax is ",(0,t.jsx)(n.code,{children:"@attr=val"}),", where attr is the attribute name on the child map, and val is the matching value."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// Get map/bean with name attribute value of 'foo' from a list of items\nMap map = objectRest.getMap(\"/items/@name=foo\");\n"})})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Traversable.html",children:"Traversable"})," REST response\nconverter."]})}),"\n",(0,t.jsx)(n.h4,{id:"objectsearcher",children:"ObjectSearcher"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectSearcher.html",children:"ObjectSearcher"})," class is designed to provide\nsearches across arrays and ",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans.\nIt allows you to quickly filter beans and ",(0,t.jsx)(n.code,{children:"Maps"})," using simple yet sophisticated search arguments."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"MyBean[] arrayOfBeans = ...;\nObjectSearcher searcher = ObjectSearcher.create();\n\n// Returns a list of beans whose 'foo' property is 'X' and 'bar' property is 'Y'.\nList result = searcher.run(arrayOfBeans, \"foo=X,bar=Y\");\n"})})}),"\n",(0,t.jsx)(n.p,{children:"The tool can be used against the following data types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Arrays/",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The default searcher is configured with the following matcher factories that provides the capabilities of matching\nagainst various data types.\nThis list is extensible:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/StringMatcherFactory.html",children:"StringMatcherFactory"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/NumberMatcherFactory.html",children:"NumberMatcherFactory"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-class",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/TimeMatcherFactory.html",children:"TimeMatcherFactory"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/StringMatcherFactory.html",children:"StringMatcherFactory"})," class provides\nsearching based on the following patterns:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=foo"'})," - Simple full word match"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=fo*"'}),", ",(0,t.jsx)(n.code,{children:'"property=?ar"'})," - Meta-character matching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=foo bar"'}),"(implicit), ",(0,t.jsx)(n.code,{children:'"property=^foo ^bar"'}),"(explicit) - Multiple OR'ed patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=+fo* +*ar"'})," - Multiple AND'ed patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=fo* -bar"'})," - Negative patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"\"property='foo bar'\""})," - Patterns with whitespace"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=foo\\\\\'bar"'})," - Patterns with single-quotes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=/foo\\\\s+bar"'})," - Regular expression match"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/NumberMatcherFactory.html",children:"NumberMatcherFactory"})," class provides\nsearching based on the following patterns:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=1"'})," - A single number"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=1 2"'})," - Multiple OR'ed numbers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=-1 -2"'})," - Multiple OR'ed negative numbers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=1-2"'}),", ",(0,t.jsx)(n.code,{children:'"property=-2--1"'})," - A range of numbers (whitespace ignored)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=1-2 4-5"'})," - Multiple OR'ed ranges"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=<1"'}),", ",(0,t.jsx)(n.code,{children:'"property=<=1"'}),", ",(0,t.jsx)(n.code,{children:'"property=>1"'}),", ",(0,t.jsx)(n.code,{children:'"property=>=1"'})," - Open-ended ranges"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=!1"'}),", ",(0,t.jsx)(n.code,{children:'"property=!1-2"'})," - Negation"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/TimeMatcherFactory.html",children:"TimeMatcherFactory"})," class provides searching\nbased on the following patterns:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011"'})," - A single year"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011 2013 2015"'})," - Multiple years"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011-01"'})," - A single month"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011-01-01"'})," - A single day"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011-01-01T12"'})," - A single hour"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011-01-01T12:30"'})," - A single minute"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011-01-01T12:30:45"'})," - A single second"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=>2011"'}),", ",(0,t.jsx)(n.code,{children:'"property=>=2011"'}),", ",(0,t.jsx)(n.code,{children:'"property=<2011"'}),", ",(0,t.jsx)(n.code,{children:'"property=<=2011"'})," - Open-ended ranges"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"property=2011 - 2013-06-30"'})," - Closed ranges"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Queryable.html",children:"Queryable"})," REST response\nconverter."]})}),"\n",(0,t.jsx)(n.h4,{id:"objectsorter",children:"ObjectSorter"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectSorter.html",children:"ObjectSorter"})," class is designed to sort arrays and\ncollections of maps or beans."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'MyBean[] arrayOfBeans = ...;\nObjectSorter sorter = ObjectSorter.create();\n\n// Returns a list of beans sorted accordingly.\nList result = sorter.run(arrayOfBeans, "foo,bar-");\n'})})}),"\n",(0,t.jsx)(n.p,{children:"The tool can be used against the following data types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Arrays/",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The arguments are a simple comma-delimited list of property names optionally suffixed with '+' and '-' to\ndenote ascending/descending order."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Queryable.html",children:"Queryable"})," REST response\nconverter."]})}),"\n",(0,t.jsx)(n.h4,{id:"objectviewer",children:"ObjectViewer"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectViewer.html",children:"ObjectViewer"})," class is designed to extract properties\nfrom ",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"MyBean[] arrayOfBeans = ...;\nObjectViewer viewer = ObjectViewer.create();\n// Returns the 'foo' and 'bar' properties extracted into a list of maps.\nList result = viewer.run(arrayOfBeans, \"foo,bar\");\n"})})}),"\n",(0,t.jsx)(n.p,{children:"The tool can be used against the following data types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Arrays/",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans."]}),"\n",(0,t.jsx)(n.li,{children:"Singular maps or beans."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Queryable.html",children:"Queryable"})," REST response\nconverter."]})}),"\n",(0,t.jsx)(n.h4,{id:"objectpaginator",children:"ObjectPaginator"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectPaginator.html",children:"ObjectPaginator"})," class is designed to extract\nsublists from arrays/collections of maps or beans."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"MyBean[] arrayOfBeans = ...;\nObjectPaginator paginator = ObjectPaginator.create();\n\n// Returns all rows from 100 to 110.\nList result = paginator.run(arrayOfBeans, 100, 10);\n"})})}),"\n",(0,t.jsx)(n.p,{children:"The tool can be used against the following data types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Arrays/",(0,t.jsx)(n.code,{children:"Collections"})," of ",(0,t.jsx)(n.code,{children:"Maps"})," or beans."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Queryable.html",children:"Queryable"})," REST response\nconverter."]})}),"\n",(0,t.jsx)(n.h4,{id:"objectintrospector",children:"ObjectIntrospector"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectIntrospector.html",children:"ObjectIntrospector"})," class is used to invoke\nmethods on ",(0,t.jsx)(n.code,{children:"Objects"})," using arguments in serialized form."]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'String string1 = "foobar";\nString string2 = ObjectIntrospector\n    .create(string)\n    .invoke(String.class, "substring(int,int)", "[3,6]");  // "bar"\n'})})}),"\n",(0,t.jsx)(n.p,{children:"The arguments passed to the identified method are POJOs serialized in JSON format.\nArbitrarily complex arguments can be passed\nin as arguments."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["This class is used in the ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Introspectable.html",children:"Introspectable"})," REST\nresponse converter."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"This is an extremely powerful but potentially dangerous tool.\nUse wisely."})}),"\n",(0,t.jsx)(n.h4,{id:"objectmerger",children:"ObjectMerger"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/objecttools/ObjectMerger.html",children:"ObjectMerger"})," class is used for merging POJOs behind\na single interface.\nThis is particularly useful in cases where you want to define beans with 'default' values.\nFor example, given the following bean classes:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public interface IA {\n    String getX();\n    void setX(String x);\n}\n\npublic class A implements IA {\n    private String x;\n\n    public A(String x) {\n        this.x = x;\n    }\n\n    public String getX() {\n        return x;\n    }\n\n    public void setX(String x) {\n        this.x = x;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"The getters will be called in order until the first non-null value is returned:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'merge = ObjectMerger.merger(IA.class, new A("1"), new A("2"));\nassertEquals("1", merge.getX());\n\nmerge = ObjectMerger.merger(IA.class, new A(null), new A("2"));\nassertEquals("2", merge.getX());\n\nmerge = ObjectMerger.merger(IA.class, new A(null), new A(null));\nassertEquals(null, merge.getX());\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);