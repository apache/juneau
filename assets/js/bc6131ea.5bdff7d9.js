"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9023],{28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>i});var o=t(96540);const a={},s=o.createContext(a);function r(n){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(s.Provider,{value:e},n.children)}},79787:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"topics/02.04.06.BeanIgnoreAnnotation","title":"@BeanIgnore Annotation","description":"The @BeanIgnore annotation is used to ignore classes,","source":"@site/docs-staging/topics/02.04.06.BeanIgnoreAnnotation.md","sourceDirName":"topics","slug":"/topics/02.04.06.BeanIgnoreAnnotation","permalink":"/docs/topics/02.04.06.BeanIgnoreAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/02.04.06.BeanIgnoreAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@BeanIgnore Annotation"},"sidebar":"tutorialSidebar","previous":{"title":"2.4.5. @Beanc Annotation","permalink":"/docs/topics/02.04.05.BeancAnnotation"},"next":{"title":"2.4.7. @NameProperty Annotation","permalink":"/docs/topics/02.04.07.NamePropertyAnnotation"}}');var a=t(74848),s=t(28453);const r={title:"@BeanIgnore Annotation"},i=void 0,c={},l=[];function p(n){const e={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/annotation/BeanIgnore.html",children:"@BeanIgnore"})," annotation is used to ignore classes,\nfields, and methods from being interpreted as beans or bean components."]}),"\n",(0,a.jsx)(e.p,{children:"When applied to classes, objects will be converted to strings even though they look like beans."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"// Not really a bean!  Use toString() instead!\n@BeanIgnore\npublic class MyBean {...}\n"})}),"\n",(0,a.jsx)(e.p,{children:"When applied to fields and getters/setters, they will be ignored as bean properties."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"public class MyBean {\n\n    // Not a bean property!\n    @BeanIgnore\n    public String foo;\n\n    // Not a bean property!\n    @BeanIgnore\n    public String getBar() {...}\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(p,{...n})}):p(n)}}}]);