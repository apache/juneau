"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[3383],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var l=s(96540);const r={},i=l.createContext(r);function t(e){const n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),l.createElement(i.Provider,{value:n},e.children)}},62523:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"release-notes/6.2.0","title":"Release 6.2.0","description":"Date: Apr 28, 2017","source":"@site/docs-staging/release-notes/6.2.0.md","sourceDirName":"release-notes","slug":"/release-notes/6.2.0","permalink":"/docs/release-notes/6.2.0","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/release-notes/6.2.0.md","tags":[],"version":"current","frontMatter":{"title":"Release 6.2.0"},"sidebar":"tutorialSidebar","previous":{"title":"6.3.0","permalink":"/docs/release-notes/6.3.0"},"next":{"title":"6.1.0","permalink":"/docs/release-notes/6.1.0"}}');var r=s(74848),i=s(28453);const t={title:"Release 6.2.0"},d="Release 6.2.0",a={},c=[{value:"org.apache.juneau",id:"orgapachejuneau",level:3},{value:"org.apache.juneau.rest",id:"orgapachejuneaurest",level:3},{value:"org.apache.juneau.rest.client",id:"orgapachejuneaurestclient",level:3},{value:"org.apache.juneau.microservice",id:"orgapachejuneaumicroservice",level:3}];function o(e){const n={a:"a",code:"code",del:"del",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"release-620",children:"Release 6.2.0"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Date:"})," Apr 28, 2017"]}),"\n",(0,r.jsx)(n.p,{children:"Juneau 6.2.0 is a major update."}),"\n",(0,r.jsx)(n.h3,{id:"orgapachejuneau",children:"org.apache.juneau"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Revamped the serializer, parser classes to use builders for creation.\nSerializers and parsers are now unmodifiable objects once they are created.\nThis is a breaking code change that will require adoption."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"/* Creating a new serializer or parser */ \n\n// Old way\nWriterSerializer s = new JsonSerializer().setUseWhitespace(true).pojoSwaps(BSwap.class).lock();\n\n// New way\nWriterSerializer s = JsonSerializer.create().ws().pojoSwaps(BSwap.class).build();\n\n/* Cloning an existing serializer or parser */ \n\n// Old way\nWriterSerializer s = SimpleJsonSerializer.DEFAULT\n    .clone().setUseWhitespace(true).pojoSwaps(BSwap.class).lock();\n\n// New way\nWriterSerializer s = SimpleJsonSerializer.DEFAULT\n    .builder().ws().pojoSwaps(BSwap.class).build();\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Also introduced the following builder classes and related architecture changes to make the built objects\nunmodifiable:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"SerializerGroup.Builder"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"ParserGroup.Builder"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"EncoderGroup.Builder"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Revamped the config file API to use a builder:  ",(0,r.jsx)(n.del,{children:"ConfigFileBuilder"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Removed the  ",(0,r.jsx)(n.del,{children:"Lockable"})," interface."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New ",(0,r.jsx)(n.code,{children:"addBeanTypeProperties"})," setting added to serializers to override the\n",(0,r.jsx)(n.del,{children:"SerializerContext.SERIALIZER_addBeanTypeProperties"})," setting for individual serializers in a serializer group:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"HtmlSerializerContext.HTML_addBeanTypeProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"JsonSerializerContext.JSON_addBeanTypeProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"MsgPackSerializerContext.MSGPACK_addBeanTypeProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"UonSerializerContext.UON_addBeanTypeProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"XmlSerializerContext.XML_addBeanTypeProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RdfSerializerContext.RDF_addBeanTypeProperties"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["UON notation serializers and parsers moved into the new ",(0,r.jsx)(n.code,{children:"org.apache.juneau.uon"})," package."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/xml/annotation/XmlFormat.html#VOID",children:"XmlFormat.VOID"})," format to identify\nHTML void elements."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Tweaks to HTML5 support."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fixed handling of empty non-void elements in HTML serializer."}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.code,{children:"style()"})," override methods to all elements."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Improvements to Swagger support."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["New ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/swagger/SwaggerBuilder.html",children:"SwaggerBuilder"})," class."]}),"\n",(0,r.jsx)(n.li,{children:"Fluent-style setters added to the Swagger beans."}),"\n",(0,r.jsxs)(n.li,{children:["Added Swagger examples  ",(0,r.jsx)(n.del,{children:"here"})," and in the  ",(0,r.jsx)(n.del,{children:"swagger"})," javadocs."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Improvements to ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/svl/VarResolver.html",children:"VarResolver"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["New ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/svl/vars/IfVar.html",children:"IfVar $IF"})," variable for if-else block logic."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$SWITCH"})," variable for switch block logic."]}),"\n",(0,r.jsx)(n.li,{children:"Whitespace wasn't being ignored in some cases."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/HtmlParser.html",children:"HtmlParser"})," can now parse full body contents\ngenerated by ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/HtmlDocSerializer.html",children:"HtmlDocSerializer"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Parse-args supported added to ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/msgpack/MsgPackParser.html",children:"MsgPackParser"})," to\nallow it to be used in remoteable proxies."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Added some convenience classes for constructing collections using a fluent interface:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"AList"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"ASet"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"AMap"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#typePropertyName",children:"@Bean(typePropertyName)"})," annotation\nallows you to specify the name of the ",(0,r.jsx)(n.code,{children:'"_type"'})," property at the class level."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"New methods added to HTML5 container beans:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/html5/HtmlElementContainer.html#getChild(int...)",children:"HtmlElementContainer.getChild(int...)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/dto/html5/HtmlElementMixed.html#getChild(int...)",children:"HtmlElementMixed.getChild(int...)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New common serializer setting: ",(0,r.jsx)(n.del,{children:"SerializerContext.SERIALIZER_abridged"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Support for defining interface proxies against 3rd-party REST interfaces.\nNew package  ",(0,r.jsx)(n.del,{children:"remoteable"})," for all remoteable proxy interface annotations.\n",(0,r.jsx)(n.code,{children:"@Remoteable"})," annotation has been moved to this package."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Updated doc: ",(0,r.jsx)(n.strong,{children:"6 - Remoteable Services"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New doc: ",(0,r.jsx)(n.strong,{children:"6.1 - Interface proxies against 3rd-party REST interfaces"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New URL-encoding serializer setting: ",(0,r.jsx)(n.del,{children:"UrlEncodingSerializerContext.URLENC_paramFormat"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods on ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/urlencoding/UrlEncodingSerializer.Builder.html",children:"UrlEncodingSerializer.Builder"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"Builder.paramFormat(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"Builder.plainTextParams()"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"orgapachejuneaurest",children:"org.apache.juneau.rest"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"@RestResource"})," annotation can now be applied to any class!\nYou're no longer restricted to subclassing your resources from  ",(0,r.jsx)(n.del,{children:"RestServlet"}),".\nThis is a major enhancement in the API.\nAnything you could do by subclassing from ",(0,r.jsx)(n.code,{children:"RestServlet"})," should have an equivalent for non-",(0,r.jsx)(n.code,{children:"RestServlet"})," classes.\nThe only restriction is that the top-level resource must subclass from ",(0,r.jsx)(n.code,{children:"RestServlet"}),".\nChild resources do not."]}),"\n",(0,r.jsx)(n.p,{children:"The majority of code has been split up into two separate classes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestConfig"})," - A modifiable configuration of a resource.\nSubclasses from ",(0,r.jsx)(n.del,{children:"javax.servlet.ServletConfig"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestContext.html",children:"RestContext"})," - A read-only configuration that's the\nresult of a snapshot of the config."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The  ",(0,r.jsx)(n.del,{children:"RestServlet"})," class now has the following initialization method that allows you to override the config\nsettings define via annotations:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestServlet.init(RestConfig)"})," - A modifiable configuration of a resource."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Non-",(0,r.jsx)(n.code,{children:"RestServlet"})," classes must have one of the following to allow it to be instantiated:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"public T(RestConfig)"})," constructor."]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.code,{children:"public T()"})," constructor."]}),"\n",(0,r.jsxs)(n.li,{children:["The parent resource must have a customized  ",(0,r.jsx)(n.del,{children:"RestResourceResolver"})," for instantiating it."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Non-",(0,r.jsx)(n.code,{children:"RestServlet"})," classes can optionally include the following init methods to gain access to the config and\ncontext:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"public init(RestConfig)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"public init(RestContext)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New annotations added to ",(0,r.jsx)(n.del,{children:"@RestResource"})," to allow non-",(0,r.jsx)(n.code,{children:"RestServlet"})," resources to do the same as subclassing\ndirectly from ",(0,r.jsx)(n.code,{children:"RestServlet"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestResource.resourceResolver()"})," - Specify a  ",(0,r.jsx)(n.del,{children:"RestResourceResolver"})," class for resolving child resources."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestResource.callHandler()"})," - Specify a  ",(0,r.jsx)(n.del,{children:"RestCallHandler"})," class for handling the lifecycle of a REST call."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestResource.infoProvider()"})," - Specify a  ",(0,r.jsx)(n.del,{children:"RestInfoProvider"})," class for customizing title/description/Swagger\ninformation on a REST resource."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestResource.logger()"})," - Specify a  ",(0,r.jsx)(n.del,{children:"RestLogger"})," class for handling logging."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New annotations added to ",(0,r.jsx)(n.del,{children:"@RestResource"})," and ",(0,r.jsx)(n.del,{children:"@RestMethod"})," to simplify defining page title, text, and links\non HTML views:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestResource(pageTitle)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestMethod(pageTitle)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestResource(pageText)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestMethod(pageText)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestResource(pageLinks)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"@RestMethod(pageLinks)"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Old method\n@RestResource(\n    properties={\n        @Property(name=HTMLDOC_title, value="System properties resource"),\n        @Property(name=HTMLDOC_description, value="REST interface for performing CRUD operations on system properties."),\n        @Property(name=HTMLDOC_navlinks, value="{up:\'$R{requestParentURI}\',options:\'?method=OPTIONS\'}")\n    }\n)\n    \n// New method\n@RestResource(\n    pageTitle="System properties resource",\n    pageDescription="REST interface for performing CRUD operations on system properties.",\n    pageLinks="{up:\'$R{requestParentURI}\',options:\'?method=OPTIONS\'}"\n)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Typically you're going to simply want to use the ",(0,r.jsx)(n.code,{children:"title"})," and ",(0,r.jsx)(n.code,{children:"description"})," annotations which apply to both the\npage title/text and the swagger doc:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RestResource(\n    title="System properties resource",\n    description="REST interface for performing CRUD operations on system properties.",\n    pageLinks="{up:\'$R{requestParentURI}\',options:\'?method=OPTIONS\'}"\n)\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"RestResource.stylesheet()"})," can now take in a comma-delimited list of stylesheet paths."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"StreamResource"})," can now contain multiple sources from a variety of source types (e.g. ",(0,r.jsx)(n.code,{children:"byte[]"})," arrays,\n",(0,r.jsx)(n.code,{children:"InputStreams"}),", ",(0,r.jsx)(n.code,{children:"Files"}),", etc...) and is now immutable.\nIt also includes a new  ",(0,r.jsx)(n.del,{children:"StreamResourceBuilder"})," class."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Simplified remoteable proxies using the ",(0,r.jsx)(n.code,{children:'@RestMethod(name="PROXY")'})," annotation on REST methods.\nUsed to expose interface proxies without the need for  ",(0,r.jsx)(n.del,{children:"RemoteableServlet"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Server side\n@RestMethod(name="PROXY", path="/myproxy/*")\npublic IAddressBook getProxy() {\n    return addressBook;\n}\n\n// Client side\nRestClient client = RestClient.create().rootUrl(samplesUrl).build();\t\t\t\nIAddressBook ab = client.getRemoteableProxy(IAddressBook.class, "/addressBook/myproxy");\n'})}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.del,{children:"@RestMethod(name)"})," for more information."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/RestRequest.html#toString()",children:"RestRequest.toString()"})," can be called at any\ntime to view the headers and content of the request without affecting functionality.\nVery useful for debugging."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"@RestMethod(name)"})," annotation is now optional. Defaults to ",(0,r.jsx)(n.code,{children:'"GET"'}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"orgapachejuneaurestclient",children:"org.apache.juneau.rest.client"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Revamped the client API to use builders."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New doc: ",(0,r.jsx)(n.del,{children:"1.5 - Debugging"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"RestClient"})," class ",(0,r.jsx)(n.code,{children:"doX(Object url)"})," methods now handle HttpClient ",(0,r.jsx)(n.code,{children:"URIBuilder"})," instances."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods added/updated to ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.html",children:"RestClient"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestClient.getRemoteableProxy(Class,Object)"})," - For interface proxies defined using ",(0,r.jsx)(n.code,{children:'@RestMethod(name="PROXY")'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestClient.getRemoteableProxy(Class,Object,Serializer,Parser)"})," - Same as above but overrides the serializer\nand parser defined on the client."]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestClient.doPost(Object)"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.del,{children:"RestClient.doCall(HttpMethod,Object,Object)"})," - Can now pass in instances of  ",(0,r.jsx)(n.del,{children:"NameValuePairs"})," for easy form\nposts.\nThis extends to all methods that take in the input."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods on  ",(0,r.jsx)(n.del,{children:"RestCall"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.uri(Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"query(String,Object,boolean,PartSerializer)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.query(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.queryIfNE(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.query(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.queryIfNE(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.query(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"formData(String,Object,boolean,PartSerializer)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.formData(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.formDataIfNE(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.formData(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.formDataIfNE(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"header(String,Object,boolean,PartSerializer)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.header(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.headerIfNE(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.headers(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.headersIfNE(Map)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.host(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.port(int)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.userInfo(String,String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.userInfo(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"RestCall.scheme(String)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods added to ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.Builder.html",children:"RestClient.Builder"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.Builder.html#executorService(ExecutorService,boolean)",children:"executorService(ExecutorService,boolean)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"Builder.paramFormat(String)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"Builder.plainTextParams()"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.Builder.html#noTrace()",children:"noTrace()"})," - Adds a\n",(0,r.jsx)(n.code,{children:"No-Trace: true"})," header on all requests to prevent the servlet from logging errors.\nUseful for testing scenarios when you don't want the console to end up showing errors done on purpose."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.Builder.html#debug()",children:"debug()"})," now adds a\n",(0,r.jsx)(n.code,{children:"Debug: true"})," header on all requests."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods added/updated to  ",(0,r.jsx)(n.del,{children:"RestCall"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.del,{children:"RestCall.runFuture()"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.del,{children:"RestCall.getResponseFuture(Class)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.del,{children:"RestCall.getResponseFuture(Type,Type...)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.del,{children:"RestCall.getResponseAsStringFuture()"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"RestCall.serializer(Serializer)"})," - Override the serializer defined on the client for a single call."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"RestCall.parser(Parser)"})," - Override the parser defined on the client for a single call."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"input(Object)"})," - Now accepts instances of  ",(0,r.jsx)(n.del,{children:"NameValuePairs"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"RestCall.getResponse(Class)"})," - Can now pass in any of the following:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/org/apache/http/HttpResponse.html",children:"HttpResponse"})," - Returns the raw ",(0,r.jsx)(n.code,{children:"HttpResponse"})," returned by\nthe inner ",(0,r.jsx)(n.code,{children:"HttpClient"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/java/io/Reader.html",children:"Reader"})," - Returns access to the raw reader of the response."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../apidocs/java/io/InputStream.html",children:"InputStream"})," - Returns access to the raw input stream of the response."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["New methods added to  ",(0,r.jsx)(n.del,{children:"NameValuePairs"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"NameValuePairs.append(String,Object)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"append(String,Object,PartSerializer)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.del,{children:"RetryOn"})," is now an abstract class with an additional method:"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.del,{children:"RetryOn.onResponse(HttpResponse)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"orgapachejuneaumicroservice",children:"org.apache.juneau.microservice"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:'"REST/port"'})," configuration setting can now be a comma-limited list of port numbers to try.\nYou can also specify one or more ",(0,r.jsx)(n.code,{children:"0"}),"s to try a random port."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Methods added to  ",(0,r.jsx)(n.del,{children:"RestMicroservice"})," class:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"getPort()"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.del,{children:"getURI()"})}),"\n",(0,r.jsxs)(n.li,{children:["Override methods added from ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/microservice/Microservice.html",children:"Microservice"})," class\nfor easier method chaining."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);