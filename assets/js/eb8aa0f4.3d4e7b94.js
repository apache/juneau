"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7142],{28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>r});var o=t(96540);const s={},a=o.createContext(s);function i(n){const e=o.useContext(a);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),o.createElement(a.Provider,{value:e},n.children)}},94392:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"topics/02.24.06.JsonAnnotation","title":"@Json Annotation","description":"The @Json annotation is used to override the behavior of JsonSerializer on individual bean classes or properties.","source":"@site/docs/topics/02.24.06.JsonAnnotation.md","sourceDirName":"topics","slug":"/topics/JsonAnnotation","permalink":"/docs/topics/JsonAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.24.06.JsonAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@Json Annotation","slug":"JsonAnnotation"},"sidebar":"mainSidebar","previous":{"title":"2.24.5. JSON Parsers","permalink":"/docs/topics/JsonParsers"},"next":{"title":"2.25. JSON Schema Support","permalink":"/docs/topics/JsonSchemaDetails"}}');var s=t(74848),a=t(28453);const i={title:"@Json Annotation",slug:"JsonAnnotation"},r=void 0,c={},l=[];function d(n){const e={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/annotation/Json.html",target:"_blank",children:"@Json"})," annotation is used to override the behavior of ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonSerializer.html",target:"_blank",children:"JsonSerializer"})," on individual bean classes or properties."]}),"\n",(0,s.jsx)(e.p,{children:"The annotation can be applied to beans as well as other objects serialized to other types (e.g. strings)."}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/annotation/Json.html",target:"_blank",children:"Json"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method-annotation",{children:(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/annotation/Json.html#wrapperAttr()",target:"_blank",children:"wrapperAttr"})})})]}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/annotation/Json.html#wrapperAttr()",target:"_blank",children:"@Json(wrapperAttr)"})," annotation can be used\nto wrap beans inside a JSON object with a specified attribute name."]}),"\n",(0,s.jsx)(e.admonition,{title:"Example:",type:"tip",children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-java",children:'@Json(wrapperAttr="personBean")\n\npublic class Person {\n    public String name = "John Smith";\n}\n'})})}),"\n",(0,s.jsx)(e.p,{children:"The following shows the JSON representation with and without the annotation present:"}),"\n",(0,s.jsxs)("table",{class:"code-table",children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Without annotation"}),(0,s.jsx)("th",{children:"With annotation"})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "John Smith"\n}\n'})})}),(0,s.jsx)("td",{children:(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "personBean": {\n    "name": "John Smith"\n  }\n}\n'})})})]})]})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}}}]);