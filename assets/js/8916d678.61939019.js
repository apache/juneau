"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8992],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},63973:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"topics/08.16.06.SwaggerParameters","title":"Swagger Parameters","description":"Expanding operations shows you a list of parameters.","source":"@site/docs-staging/topics/08.16.06.SwaggerParameters.md","sourceDirName":"topics","slug":"/topics/08.16.06.SwaggerParameters","permalink":"/docs/topics/08.16.06.SwaggerParameters","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/08.16.06.SwaggerParameters.md","tags":[],"version":"current","frontMatter":{"title":"Swagger Parameters"},"sidebar":"mainSidebar","previous":{"title":"8.16.5. Swagger Operations","permalink":"/docs/topics/08.16.05.SwaggerOperations"},"next":{"title":"8.16.7. Swagger Responses","permalink":"/docs/topics/08.16.07.SwaggerResponses"}}');var r=t(74848),s=t(28453);const o={title:"Swagger Parameters"},i=void 0,c={},l=[{value:"PetStoreResource.getPets()",id:"petstoreresourcegetpets",level:4},{value:"Queryable",id:"queryable",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Expanding operations shows you a list of parameters."}),"\n",(0,r.jsxs)(n.p,{children:["Parameter information can be defined in a couple of ways.\nThe typical way is through annotations on parameters being passed to your ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html",children:"@RestOp"}),"-annotated method, like so:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RestGet\npublic Collection getPets(\n        @Query(\n            name="s",\n            schema=@Schema(\n                description={\n                    "Search.",\n                    "Key/value pairs representing column names and search tokens.",\n                    "\'*\' and \'?\' can be used as meta-characters in string fields.",\n                    "\'>\', \'>=\', \'<\', and \'<=\' can be used as limits on numeric and date fields.",\n                    "Date fields can be matched with partial dates (e.g. \'2018\' to match any date in the year 2018)."\n                },\n                type="array",\n                collectionFormat="csv"\n            )\n        )\n        String[] s,\n        @Query(\n            name="v",\n            schema=@Schema(\n                description={\n                    "View.",\n                    "Column names to display."\n                },\n                type="array",\n                collectionFormat="csv"\n            )\n        )\n        String[] v,\n        ...\n    ) throws NotAcceptable {\n    ...\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Schema.html",children:"@Schema"})," annotation can also be attached directly to the parameter or parameter type as well."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Schema.html#type()",children:"type"})," and ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Schema.html#collectionFormat()",children:"collectionFormat"})," values above are optional and auto-detected based on the parameter class type if omitted. They're included here for clarity. The examples will be explained in the next section."]}),"\n"]})}),"\n",(0,r.jsxs)(n.p,{children:["Another option is to specify your parameter information in the ",(0,r.jsx)(n.code,{children:"parameters"})," annotation as free-form JSON 5."]}),"\n",(0,r.jsxs)(n.p,{children:["In the case of the ",(0,r.jsx)(n.code,{children:"PetStoreResource.getPets()"})," method, we pull this information from a static field defined in the ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/converter/Queryable.html",children:"Queryable"})," class:"]}),"\n",(0,r.jsx)(n.h4,{id:"petstoreresourcegetpets",children:"PetStoreResource.getPets()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RestGet(\n    path="/pet",\n    summary="All pets in the store",\n    swagger=@OpSwagger(\n        tags="pet",\n        parameters={\n            Queryable.SWAGGER_PARAMS\n        }\n    ),\n    ...\n    converters={Queryable.class}\n)\npublic Collection getPets() throws NotAcceptable {\n    return store.getPets();\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"queryable",children:"Queryable"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class Queryable implements RestConverter {\n\n    public static final String SWAGGER_PARAMS=""\n        + "{"\n            + "in:\'query\',"\n            + "name:\'s\',"\n            + "description:\'"\n                + "Search.\\n"\n                + "Key/value pairs representing column names and search tokens.\\n"\n                + "\\\\\'*\\\\\' and \\\\\'?\\\\\' can be used as meta-characters in string fields.\\n"\n                + "\\\\\'>\\\\\', \\\\\'>=\\\\\', \\\\\'2000\'}"\n        + "},"\n        + "{"\n            + "in:\'query\',"\n            + "name:\'v\',"\n            + "description:\'"\n                + "View.\\n"\n                + "Column names to display."\n            + "\',"\n            + "type:\'array\',"\n            + "collectionFormat:\'csv\',"\n            + "x-examples:{example:\'?v=name,birthDate\'}"\n        + "},"\n\n        ...\n    ;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This information could have also been defined in the Swagger JSON for the resource as well."}),"\n",(0,r.jsx)(n.p,{children:"The parameter section contains information about the request body as well for PUT and POST methods, as shown here:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RestPost(\n    summary="Add a new pet to the store",\n    swagger=@OpSwagger(\n        tags="pet"\n    )\n)\npublic Ok postPet(\n        @Content\n        @Schema(description="Pet object to add to the store")\n        PetCreate pet\n    ) throws IdConflict, NotAcceptable, UnsupportedMediaType {\n\n    store.create(pet);\n    return OK;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Note that the schema information on the body parameter is automatically detected if not provided."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);