"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[2861],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(96540);const a={},t=i.createContext(a);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},50427:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"topics/02.24.04.Json5","title":"JSON 5","description":"The Json5Serializer class can be used to serialized POJOs","source":"@site/docs-staging/topics/02.24.04.Json5.md","sourceDirName":"topics","slug":"/topics/02.24.04.Json5","permalink":"/docs/topics/02.24.04.Json5","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/02.24.04.Json5.md","tags":[],"version":"current","frontMatter":{"title":"JSON 5"},"sidebar":"mainSidebar","previous":{"title":"2.24.3. JSON Serializers","permalink":"/docs/topics/02.24.03.JsonSerializers"},"next":{"title":"2.24.5. JSON Parsers","permalink":"/docs/topics/02.24.05.JsonParsers"}}');var a=s(74848),t=s(28453);const o={title:"JSON 5"},r=void 0,c={},l=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/json/Json5Serializer.html",children:"Json5Serializer"})," class can be used to serialized POJOs\ninto JSON 5 notation."]}),"\n",(0,a.jsx)(n.p,{children:"JSON 5 is similar to JSON except for the following:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JSON attributes are only quoted when necessary."}),"\n",(0,a.jsx)(n.li,{children:"Uses single-quotes for quoting."}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{title:"Examples",type:"tip",children:[(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'// Some free-form JSON.\nJsonMap map = JsonMap.of(\n    "foo", "x1",\n    "_bar", "x2",\n    " baz ", "x3",\n    "123", "x4",\n    "return", "x5",\n    "", "x6"\n);\n'})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'// Serialized to standard JSON\n{\n    "foo": "x1",\n    "_bar": "x2",\n    " baz ": "x3",\n    "123": "x4",\n    "return": "x5",\n    "": "x6"\n}\n'})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// Serialized to JSON5\n{\n    foo: 'x1',\n    _bar: 'x2',\n    ' baz ': 'x3',  // Quoted due to embedded spaces.\n    '123': 'x4',    // Quoted to prevent confusion with number.\n    'return': 'x5', // Quoted because it's a keyword.\n    '': 'x6'        // Quoted because it's an empty string.\n}\n"})})]}),"\n",(0,a.jsx)(n.p,{children:"The advantage to JSON 5 is you can represent it in a Java String in minimal form with minimal escaping.\nThis is particularly useful in cases such as unit testing where you can easily validate POJOs by simplifying them to\nJSON 5 and do a simple string comparison."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"WriterSerializer serializer = Json5Serializer.DEFAULT;\nassertEquals(\"{foo:'bar',baz:123}\", serializer.toString(myPojo));\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"See Also",type:"info",children:(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-class",{children:(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/json/JsonSerializer/Builder.html",children:"JsonSerializer.Builder"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-method",{children:(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/json/JsonSerializer/Builder.html#json5()",children:"json5()"})})})]})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);