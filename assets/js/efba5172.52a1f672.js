"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[4808],{28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>i});var t=a(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},86550:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"topics/02.04.03.BeanAnnotation","title":"@Bean Annotation","description":"The @Bean annotation is used to tailor how beans are interpreted","source":"@site/docs-staging/topics/02.04.03.BeanAnnotation.md","sourceDirName":"topics","slug":"/topics/02.04.03.BeanAnnotation","permalink":"/docs/topics/02.04.03.BeanAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/02.04.03.BeanAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@Bean Annotation"},"sidebar":"tutorialSidebar","previous":{"title":"2.4.2. Java Beans Support","permalink":"/docs/topics/02.04.02.JavaBeansSupport"},"next":{"title":"2.4.4. @Beanp Annotation","permalink":"/docs/topics/02.04.04.BeanpAnnotation"}}');var s=a(74848),r=a(28453);const o={title:"@Bean Annotation"},i=void 0,c={},l=[];function p(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html",children:"@Bean"})," annotation is used to tailor how beans are interpreted\nby the framework."]}),"\n",(0,s.jsxs)(n.p,{children:["Bean property inclusion and ordering on a bean class can be done using the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#properties()",children:"@Bean(properties|p)"})," annotation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Address class with only street/city/state properties (in that order).\n// All other properties are ignored.\n@Bean(properties="street,city,state")\npublic class Address { ... }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Bean properties can be excluded using the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#excludeProperties()",children:"@Bean(excludeProperties|xp)"})," annotation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Address class with only street/city/state properties (in that order).\n// All other properties are ignored.\n@Bean(excludeProperties="city,state"})\npublic class Address { ... }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Bean properties can be sorted alphabetically using ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#sort()",children:"@Bean(sort)"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Address class with only street/city/state properties (in that order).\n// All other properties are ignored.\n@Bean(sort=true)\npublic class MyBean { ... }\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#propertyNamer()",children:"@Bean(propertyNamer)"})," annotation is used to\nprovide customized naming of properties."]}),"\n",(0,s.jsxs)(n.p,{children:["Property namers are used to transform bean property names from standard form to some other form.\nFor example, the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/PropertyNamerDLC.html",children:"PropertyNamerDLC"})," will convert property names to\ndashed-lowercase, and these will be used as attribute names in JSON and element names in XML."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Define a class with dashed-lowercase property names.\n@Bean(propertyNamer=PropertyNamerDashedLC.class)\npublic class MyBean { ... }\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#interfaceClass",children:"@Bean(interfaceClass)"})," annotation is used to\nlimit properties on beans to specific interface classes.\nWhen specified, only the list of properties defined on the interface class will be used during serialization.\nAdditional properties on subclasses will be ignored."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Parent class\n@Bean(interfaceClass=A.class)\npublic abstract class A {\n    public String f0 = "f0";\n}\n\n// Child class\npublic class A1 extends A {\n    public String f1 = "f1";\n}\n\nA1 a1 = new A1();\nString result = Json5.of(a1);\nassertEquals("{f0:\'f0\'}", result);  // Note f1 is not serialized.\n'})}),"\n",(0,s.jsx)(n.p,{children:"Note that this annotation can be used on the parent class so that it filters to all child classes.\nOr can be set individually on the child classes."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#stopClass",children:"@Bean(stopClass)"})," annotation is another way to limit\nwhich properties are serialized (except from the opposite direction).\nIt's identical in purpose to the stop class specified by ",(0,s.jsx)(n.a,{href:"/docs/topics/TODO",children:"Introspector.getBeanInfo(Class,Class)"}),".\nAny properties in the stop class or in its base classes will be ignored during analysis."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, in the following class hierarchy, instances of ",(0,s.jsx)(n.code,{children:"C3"})," will include property ",(0,s.jsx)(n.code,{children:"p3"})," but not ",(0,s.jsx)(n.code,{children:"p1"})," or ",(0,s.jsx)(n.code,{children:"p2"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"public class C1 {\n    public int getP1();\n}\n\npublic class C2 extends C1 {\n    public int getP2();\n}\n\n@Bean(stopClass=C2.class)\npublic class C3 extends C2 {\n    public int getP3();\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#interceptor()",children:"@Bean(interceptor)"})," annotation and ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/swap/BeanInterceptor.html",children:"BeanInterceptor"})," class can be used to perform interception and inline handling of bean getter and setter calls."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Interceptor that strips out sensitive information on Address beans.\npublic class AddressInterceptor extends BeanInterceptor {\n\n    @Override\n    public Object readProperty(Address bean, String name, Object value) {\n        if ("taxInfo".equals(name))\n            return "redacted";\n        return value;\n    }\n\n    @Override\n    public Object writeProperty(Address bean, String name, Object value) {\n        if ("taxInfo".equals(name) && "redacted".equals(value))\n            return TaxInfoUtils.lookup(bean.getStreet(), bean.getCity(), bean.getState());\n        return value;\n    }\n}\n\n// Register interceptor on bean class.\n@Bean(interceptor=AddressInterceptor.class)\npublic class Address {\n    public String getTaxInfo() {...}\n    public void setTaxInfo(String value) {...}\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#on()",children:"@Bean(on)"})," and ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/annotation/Bean.html#onClass()",children:"@Bean(onClass)"})," annotations can be used to programmatically attach @Bean annotations to classes."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Bean(onClass=Address.class, sort=true, excludeProperties="city,state")\npublic class MyAnnotatedClass {...}\n\n// Create a serializer configured using annotations.\nJsonSerializer serializer = JsonSerializer\n    .create()\n    .applyAnnotations(MyAnnotatedClass.class)\n    .build();\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);