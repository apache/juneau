"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7623],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(96540);const r={},l=a.createContext(r);function i(e){const n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(l.Provider,{value:n},e.children)}},56676:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"topics/02.27.06.HtmlRenderAnnotation","title":"@Html(render) Annotation","description":"The @Html(render) annotation allows for custom","source":"@site/docs-staging/topics/02.27.06.HtmlRenderAnnotation.md","sourceDirName":"topics","slug":"/topics/02.27.06.HtmlRenderAnnotation","permalink":"/docs/topics/02.27.06.HtmlRenderAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/02.27.06.HtmlRenderAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@Html(render) Annotation"},"sidebar":"mainSidebar","previous":{"title":"2.27.5. @Html Annotation","permalink":"/docs/topics/02.27.05.HtmlAnnotation"},"next":{"title":"2.27.7. HtmlDocSerializer","permalink":"/docs/topics/02.27.07.HtmlDocSerializer"}}');var r=t(74848),l=t(28453);const i={title:"@Html(render) Annotation"},o=void 0,s={},c=[];function u(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"../apidocs/org/apache/juneau/html/annotation/Html.html#render",children:"@Html(render)"})," annotation allows for custom\nrendering of bean property values when serialized as HTML.\nUsing this class, you can alter the CSS style and HTML content of the bean property."]}),"\n",(0,r.jsxs)(n.p,{children:["The following example shows two render classes that customize the appearance of the ",(0,r.jsx)(n.code,{children:"pctFull"})," and ",(0,r.jsx)(n.code,{children:"status"})," columns in\nthe code below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import static org.apache.juneau.dto.html5.HtmlBuilder.*;\n\n// Our bean class\npublic class FileSpace {\n\n    private final String drive;\n    private final long total, available;\n\n    public FileSpace(String drive, long total, long available) {\n        this.drive = drive;\n        this.total = total;\n        this.available = available;\n    }\n\n    @Html(link="drive/{drive}")\n    public String getDrive() {\n        return drive;\n    }\n\n    public long getTotal() {\n        return total;\n    }\n\n    public long getAvailable() {\n        return available;\n    }\n\n    @Html(render=FileSpacePctRender.class)\n    public float getPctFull() {\n        return ((100 * available) / total);\n    }\n\n    @Html(render=FileSpaceStatusRender.class)\n    public FileSpaceStatus getStatus() {\n        float pf = getPctFull();\n        if (pf OK;\n        if (pf WARNING;\n        return FileSpaceStatus.SEVERE;\n    }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"// Possible values for the getStatus() method\npublic enum FileSpaceStatus {\n    OK, WARNING, SEVERE;\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Custom render for getPctFull() method\npublic class FileSpacePctRender extends HtmlRender {\n\n    @Override\n    public String getStyle(SerializerSession session, Float value) {\n        if (value = 90)\n            return div(\n                String.format("%.0f%%", value),\n                style("@keyframes color_change { from { background-color: red; } to { background-color: yellow; }")\n            );\n        return String.format("%.0f%%", value);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Custom render for getStatus() method\npublic class FileSpaceStatusRender extends HtmlRender {\n\n    @Override\n    public String getStyle(SerializerSession session, FileSpaceStatus value) {\n        return "text-align:center";\n    }\n\n    @Override\n    public Object getContent(SerializerSession session, FileSpaceStatus value) {\n        switch (value) {\n            case OK:  return img().src(URI.create("servlet:/htdocs/ok.png"));\n            case WARNING:  return img().src(URI.create("servlet:/htdocs/warning.png"));\n            default: return img().src(URI.create("servlet:/htdocs/severe.png"));\n        }\n    }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);