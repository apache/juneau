"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7065],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}},47861:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"topics/08.09.00.Converters","title":"Converters","description":"Converters can be thought of as \\"post-processors\\" for response POJOs before they get passed to the serializer.","source":"@site/docs/topics/08.09.00.Converters.md","sourceDirName":"topics","slug":"/topics/Converters","permalink":"/docs/topics/Converters","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/08.09.00.Converters.md","tags":[],"version":"current","frontMatter":{"title":"Converters","slug":"Converters"},"sidebar":"mainSidebar","previous":{"title":"8.8. Guards","permalink":"/docs/topics/Guards"},"next":{"title":"8.10. Localized Messages","permalink":"/docs/topics/LocalizedMessages"}}');var r=n(74848),o=n(28453);const a={title:"Converters",slug:"Converters"},i=void 0,c={},l=[];function d(e){const t={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:'Converters can be thought of as "post-processors" for response POJOs before they get passed to the serializer.'}),"\n",(0,r.jsx)(t.p,{children:"Converters are associated with resource classes and methods via the following:"}),"\n",(0,r.jsxs)("tree",{children:[(0,r.jsx)("node-0",{children:(0,r.jsx)("java-annotation",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/annotation/Rest.html",target:"_blank",children:"Rest"})})}),(0,r.jsx)("node-1",{children:(0,r.jsx)("java-method-annotation",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/annotation/Rest.html#converters()",target:"_blank",children:"converters"})})}),(0,r.jsx)("node-0",{children:(0,r.jsx)("java-annotation",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/annotation/RestOp.html",target:"_blank",children:"RestOp"})})}),(0,r.jsx)("node-1",{children:(0,r.jsx)("java-method-annotation",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/annotation/RestOp.html#converters()",target:"_blank",children:"converters"})})})]}),"\n",(0,r.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'// GET person request handler.\n// Traversable conversion enabled to allow nodes in returned POJO tree to be addressed.\n// Queryable conversion enabled to allow returned POJO to be searched/viewed/sorted.\n@RestGet(\n    path="/people/{id}/*",\n    converters={Traversable.class,Queryable.class}\n)\npublic Person getPerson(@Path("id") int id) {\n    return findPerson(id);\n}\n'})})}),"\n",(0,r.jsx)(t.p,{children:"Juneau defines the following converters out-of-the-box:"}),"\n",(0,r.jsxs)("tree",{children:[(0,r.jsx)("node-0",{children:(0,r.jsx)("java-interface",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/converter/RestConverter.html",target:"_blank",children:"RestConverter"})})}),(0,r.jsxs)("node-1",{children:[(0,r.jsx)("java-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/converter/Queryable.html",target:"_blank",children:"Queryable"})})," - Provides query parameters that can be used to transform the response (i.e. search/view/sort the POJO response before being serialized)."]}),(0,r.jsxs)("node-1",{children:[(0,r.jsx)("java-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/converter/Traversable.html",target:"_blank",children:"Traversable"})})," - Allows nodes in the POJO response tree to be individually accessed through additional path info on the request."]}),(0,r.jsxs)("node-1",{children:[(0,r.jsx)("java-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/converter/Introspectable.html",target:"_blank",children:"Introspectable"})})," - Allows method calls to be made on the response POJO, and for the result of that method call to be serialized as the response."]})]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);