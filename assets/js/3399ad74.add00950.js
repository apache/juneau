"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9649],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(96540);const o={},r=a.createContext(o);function s(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(r.Provider,{value:n},e.children)}},45662:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"topics/10.10.09.Request","title":"@Request","description":"The @Request annotation can be applied to a type of a","source":"@site/docs/topics/10.10.09.Request.md","sourceDirName":"topics","slug":"/topics/10.10.09.Request","permalink":"/docs/topics/10.10.09.Request","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs/topics/10.10.09.Request.md","tags":[],"version":"current","frontMatter":{"title":"@Request"},"sidebar":"tutorialSidebar","previous":{"title":"10.10.8. @Path","permalink":"/docs/topics/10.10.08.Path"},"next":{"title":"10.10.10. @Response","permalink":"/docs/topics/10.10.10.Response"}}');var o=t(74848),r=t(28453);const s={title:"@Request"},i=void 0,c={},u=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"@Request"})," annotation can be applied to a type of a\n",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html",children:"@RemoteOp"}),"-annotated method to identify it as a bean for setting HTTP parts through a bean-like interface."]}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"Request"})})}),(0,o.jsx)("node-1",{children:(0,o.jsxs)("java-method-annotation",{children:[(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html#serializer()",children:"serializer"})," - Override the part serializer."]})})]}),"\n",(0,o.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    @RemotePost\n    String postPet(CreatePetRequest bean);\n}\n'})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'@Request\npublic class CreatePetRequest {\n\n    private CreatePet pet;\n\n    public CreatePetRequest(String name, float price) {\n        this.pet = new CreatePet(name, price);\n    }\n\n    @Content\n    public CreatePet getContent() {\n        return this.pet;\n    }\n\n    @Query\n    public Map getQueryParams() {\n        return AMap.of("debug", true);\n    }\n\n    @Header("E-Tag")\n    public static UUID getUUID() {\n        return UUID.generatedUUID();\n    }\n}\n'})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'PetStore store = client.getRemote(PetStore.class, "http://localhost:10000");\n\nCreatePetRequest requestBean = new CreatePetRequest("Fluffy", 9.99);\nString response = store.postPet(requestBean);\n'})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Request.html",children:"@Request"})," annotation can be applied to either the class or argument.\nThe annotated methods must be no-arg and public.\nThey can be named anything.\nAny of the following annotations can be used on the methods:"]}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Content.html",children:"Content"})})}),(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Header.html",children:"Header"})})}),(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/FormData.html",children:"FormData"})})}),(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html",children:"Query"})})}),(0,o.jsx)("node-0",{children:(0,o.jsx)("java-annotation",{children:(0,o.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Path.html",children:"Path"})})})]}),"\n",(0,o.jsx)(n.p,{children:"The behavior and functionality of all of the annotations are the same as if they were used on method arguments directly.\nThis means full support for OpenAPI serialization and validation.\nAnnotations on methods are inherited from parent classes and interfaces.\nFor example, the request bean above could have defined annotations in an interface to keep them clear from the\nimplementation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'[@Request](../apidocs/org/apache/juneau/http/annotation/Request.html)\npublic interface CreatePetRequest {\n\n    @Content\n    CreatePet getContent();\n\n    @Query\n    Map getQueryParams();\n\n    @Header("E-Tag")\n    UUID getUUID();\n}\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'public class CreatePetRequestImpl implements CreatePetRequest {\n\n    public CreatePetRequestImpl(String name, float price) {...}\n\n    @Override\n    public CreatePet getContent() {\n        return this.pet;\n    }\n\n    @Override\n    public Map getQueryParams() {\n        return JsonMap.of("debug", true);\n    }\n\n    @Override\n    public UUID getUUID() {\n        return UUID.generateUUID();\n    }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);