"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[8314],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var i=s(96540);const r={},l=i.createContext(r);function a(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(l.Provider,{value:n},e.children)}},44794:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"release-notes/9.2.0","title":"Release 9.2.0","description":"Date: TBD","source":"@site/docs/release-notes/9.2.0.md","sourceDirName":"release-notes","slug":"/release-notes/9.2.0","permalink":"/docs/release-notes/9.2.0","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/release-notes/9.2.0.md","tags":[],"version":"current","frontMatter":{"title":"Release 9.2.0"}}');var r=s(74848),l=s(28453);const a={title:"Release 9.2.0"},d="Release 9.2.0",t={},c=[{value:"juneau-dto",id:"juneau-dto",level:3},{value:"juneau-bean-jsonschema",id:"juneau-bean-jsonschema",level:4},{value:"juneau-bean-openapi3",id:"juneau-bean-openapi3",level:4},{value:"juneau-bean-swagger",id:"juneau-bean-swagger",level:4},{value:"juneau-bean-html5",id:"juneau-bean-html5",level:4},{value:"juneau-core",id:"juneau-core",level:3},{value:"License Header Standardization",id:"license-header-standardization",level:4},{value:"Mockito Compatibility",id:"mockito-compatibility",level:4},{value:"juneau-marshall",id:"juneau-marshall",level:3},{value:"@Schema Annotation - JSON Schema Draft 2020-12 Support",id:"schema-annotation---json-schema-draft-2020-12-support",level:4},{value:"HttpPartFormat - JSON Schema/OpenAPI Format Types",id:"httppartformat---json-schemaopenapi-format-types",level:4},{value:"Jakarta Bean Validation Integration",id:"jakarta-bean-validation-integration",level:4},{value:"XML Serialization",id:"xml-serialization",level:4},{value:"juneau-bct (NEW MODULE)",id:"juneau-bct-new-module",level:3},{value:"Bean-Centric Testing Framework",id:"bean-centric-testing-framework",level:4},{value:"juneau-shaded (NEW MODULE)",id:"juneau-shaded-new-module",level:3},{value:"Shaded Artifacts for Simplified Dependency Management",id:"shaded-artifacts-for-simplified-dependency-management",level:4},{value:"Available Shaded Artifacts",id:"available-shaded-artifacts",level:4},{value:"Maven Usage",id:"maven-usage",level:4},{value:"Bazel Usage",id:"bazel-usage",level:4},{value:"Key Features",id:"key-features",level:4},{value:"Included in Distribution",id:"included-in-distribution",level:4},{value:"Documentation",id:"documentation",level:4},{value:"Deprecation of juneau-all",id:"deprecation-of-juneau-all",level:4},{value:"juneau-rest-client",id:"juneau-rest-client",level:3},{value:"RestRequest and RestResponse",id:"restrequest-and-restresponse",level:4},{value:"Remote Proxy Default Values",id:"remote-proxy-default-values",level:4},{value:"Documentation",id:"documentation-1",level:3},{value:"Historical Javadocs",id:"historical-javadocs",level:4},{value:"Known Issues",id:"known-issues",level:4},{value:"Migration Notes",id:"migration-notes",level:4}];function o(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"release-920",children:"Release 9.2.0"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Date:"})," TBD"]}),"\n",(0,r.jsx)(n.admonition,{title:"Release Status",type:"note",children:(0,r.jsx)(n.p,{children:"This release is currently in progress.\nFeatures and release date are subject to change."})}),"\n",(0,r.jsx)(n.p,{children:"Juneau 9.2.0 is a minor release focused on enhancements and bug fixes."}),"\n",(0,r.jsx)(n.p,{children:"Major changes include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New Module"}),": Introduced ",(0,r.jsx)(n.code,{children:"juneau-shaded"})," with five shaded (uber) JAR artifacts for simplified dependency management, especially useful for Bazel"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"@Schema Annotation"})," upgraded to JSON Schema Draft 2020-12 with 18 new properties, while maintaining full backward compatibility with Draft 04"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HttpPartFormat Enhancement"}),": Added 18 new format types (email, hostname, UUID, URI, IPv4/IPv6, etc.) with comprehensive validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Jakarta Bean Validation Integration"}),": Automatic detection and processing of Jakarta Validation constraints (",(0,r.jsx)(n.code,{children:"@NotNull"}),", ",(0,r.jsx)(n.code,{children:"@Email"}),", ",(0,r.jsx)(n.code,{children:"@Size"}),", etc.) with zero dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Remote Proxy Default Values"}),": Added ",(0,r.jsx)(n.code,{children:"def"})," attribute to all HTTP part annotations (",(0,r.jsx)(n.code,{children:"@Header"}),", ",(0,r.jsx)(n.code,{children:"@Query"}),", ",(0,r.jsx)(n.code,{children:"@FormData"}),", ",(0,r.jsx)(n.code,{children:"@Path"}),", ",(0,r.jsx)(n.code,{children:"@Content"}),") for specifying method-level default values"]}),"\n",(0,r.jsx)(n.li,{children:"JSON Schema beans upgraded to Draft 2020-12 specification with backward compatibility for Draft 04"}),"\n",(0,r.jsxs)(n.li,{children:["Comprehensive enhancements to HTML5 beans with improved javadocs and ",(0,r.jsx)(n.code,{children:"HtmlBuilder"})," integration"]}),"\n",(0,r.jsx)(n.li,{children:"Standardized license headers across all Java files"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced test coverage for OpenAPI 3.0 and Swagger 2.0 beans"}),"\n",(0,r.jsxs)(n.li,{children:["Removed ",(0,r.jsx)(n.code,{children:"final"})," modifiers from many classes to improve testability with Mockito and other mocking frameworks"]}),"\n",(0,r.jsxs)(n.li,{children:["Improved ",(0,r.jsx)(n.code,{children:"RestRequest"})," and ",(0,r.jsx)(n.code,{children:"RestResponse"})," to work cleanly with try-with-resources blocks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New Module"}),": Introduced ",(0,r.jsx)(n.code,{children:"juneau-bct"})," (Bean-Centric Testing) with fluent APIs for comprehensive bean testing"]}),"\n",(0,r.jsxs)(n.li,{children:["Deprecated and removed ",(0,r.jsx)(n.code,{children:"juneau-all"})," in favor of ",(0,r.jsx)(n.code,{children:"juneau-shaded-all"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"juneau-dto",children:"juneau-dto"}),"\n",(0,r.jsx)(n.h4,{id:"juneau-bean-jsonschema",children:"juneau-bean-jsonschema"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"JSON Schema Draft 2020-12 Compliance"}),": The ",(0,r.jsx)(n.code,{children:"JsonSchema"})," bean has been upgraded to support JSON Schema Draft 2020-12 while maintaining backward compatibility with Draft 04."]}),"\n",(0,r.jsx)(n.p,{children:"New properties added:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$id"})," (replaces ",(0,r.jsx)(n.code,{children:"id"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$defs"})," (replaces ",(0,r.jsx)(n.code,{children:"definitions"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"const"})," - Single constant value validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"examples"})," - Array of example values"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"if"}),", ",(0,r.jsx)(n.code,{children:"then"}),", ",(0,r.jsx)(n.code,{children:"else"})," - Conditional schema validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"readOnly"}),", ",(0,r.jsx)(n.code,{children:"writeOnly"})," - Property access control"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contentMediaType"}),", ",(0,r.jsx)(n.code,{children:"contentEncoding"})," - String content metadata"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prefixItems"})," - Array prefix validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unevaluatedItems"}),", ",(0,r.jsx)(n.code,{children:"unevaluatedProperties"})," - Unevaluated content handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependentSchemas"}),", ",(0,r.jsx)(n.code,{children:"dependentRequired"})," - Property dependencies"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Modified properties:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"exclusiveMaximum"})," / ",(0,r.jsx)(n.code,{children:"exclusiveMinimum"})," - Now support numeric values (Draft 2020-12) in addition to boolean (Draft 04)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"enum"})," - Changed to ",(0,r.jsx)(n.code,{children:"List<Object>"})," to support any type"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Improved Maintainability"}),": Removed explicit ",(0,r.jsx)(n.code,{children:"@Bean(properties)"})," annotation in favor of automatic alphabetical property discovery with ",(0,r.jsx)(n.code,{children:"JsonSerializer.DEFAULT_SORTED"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Documentation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Updated package-info with comprehensive usage examples"}),"\n",(0,r.jsx)(n.li,{children:"Added migration guide from Draft 04 to Draft 2020-12"}),"\n",(0,r.jsxs)(n.li,{children:["Merged ",(0,r.jsx)(n.code,{children:"package2.html"})," content into ",(0,r.jsx)(n.code,{children:"package-info.java"})," for consolidated documentation"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bug Fixes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.code,{children:"@BeanIgnore"})," to internal setters (",(0,r.jsx)(n.code,{children:"setName"}),", ",(0,r.jsx)(n.code,{children:"setSchemaMap"}),") to prevent serialization issues in HTML round-trip tests"]}),"\n",(0,r.jsx)(n.li,{children:"Fixed fallback logic for deprecated properties to prevent double serialization"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"juneau-bean-openapi3",children:"juneau-bean-openapi3"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Test Coverage"}),": Achieved near 100% instruction coverage for all OpenAPI 3.0 beans"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added comprehensive tests for ",(0,r.jsx)(n.code,{children:"MediaType"}),", ",(0,r.jsx)(n.code,{children:"Link"}),", ",(0,r.jsx)(n.code,{children:"Example"}),", ",(0,r.jsx)(n.code,{children:"RequestBody"}),", ",(0,r.jsx)(n.code,{children:"Header"}),", ",(0,r.jsx)(n.code,{children:"Encoding"}),", ",(0,r.jsx)(n.code,{children:"SecurityScheme"}),", ",(0,r.jsx)(n.code,{children:"OAuthFlows"}),", ",(0,r.jsx)(n.code,{children:"OAuthFlow"}),", ",(0,r.jsx)(n.code,{children:"ServerVariable"}),", ",(0,r.jsx)(n.code,{children:"Discriminator"}),", ",(0,r.jsx)(n.code,{children:"Xml"}),", ",(0,r.jsx)(n.code,{children:"ExternalDocumentation"})]}),"\n",(0,r.jsx)(n.li,{children:"Added validation tests for required fields and strict mode behavior"}),"\n",(0,r.jsxs)(n.li,{children:["Added reference resolution tests (",(0,r.jsx)(n.code,{children:"resolveRefs()"}),") for all applicable beans"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collection Method Consistency"}),": Ensured all collection properties have the standard 4-method pattern:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setX(X...)"})," - varargs setter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setX(Collection<X>)"})," - Collection setter"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addX(X...)"})," - varargs adder"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"addX(Collection<X>)"})," - Collection adder"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bug Fixes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed ",(0,r.jsx)(n.code,{children:"OpenApi.resolveRefs()"})," to properly handle ",(0,r.jsx)(n.code,{children:"servers"})," array references"]}),"\n",(0,r.jsxs)(n.li,{children:["Added null-safety checks in various ",(0,r.jsx)(n.code,{children:"resolveRefs()"})," implementations"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"juneau-bean-swagger",children:"juneau-bean-swagger"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Test Coverage"}),": Achieved near 100% instruction coverage for all Swagger 2.0 beans"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added comprehensive tests for ",(0,r.jsx)(n.code,{children:"ParameterInfo"}),", ",(0,r.jsx)(n.code,{children:"HeaderInfo"}),", ",(0,r.jsx)(n.code,{children:"Tag"}),", ",(0,r.jsx)(n.code,{children:"SecurityScheme"}),", ",(0,r.jsx)(n.code,{children:"Xml"}),", ",(0,r.jsx)(n.code,{children:"ExternalDocumentation"})]}),"\n",(0,r.jsx)(n.li,{children:"Added validation tests for required fields and strict mode behavior"}),"\n",(0,r.jsx)(n.li,{children:"Added reference resolution tests for all applicable beans"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collection Method Consistency"}),": Standardized collection property methods across all beans"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bug Fixes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed ",(0,r.jsx)(n.code,{children:"Swagger.resolveRefs()"})," to properly resolve references in nested structures"]}),"\n",(0,r.jsx)(n.li,{children:"Added null-safety checks in path and definition resolution"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"juneau-bean-html5",children:"juneau-bean-html5"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Comprehensive Javadoc Enhancements"}),": Updated javadocs for all 95 HTML5 bean classes with:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detailed descriptions of each HTML element's purpose and usage"}),"\n",(0,r.jsx)(n.li,{children:"Complete attribute documentation with enumerated values and constraints"}),"\n",(0,r.jsx)(n.li,{children:"Multiple practical usage examples"}),"\n",(0,r.jsx)(n.li,{children:"Links to W3C HTML5 specification for each element"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"HtmlBuilder Integration"}),": Added ",(0,r.jsx)(n.code,{children:"HtmlBuilder"})," creator method documentation using javatree format:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"/**\n * <p>\n * The following convenience methods are provided for constructing instances of this bean:\n * <ul class='javatree'>\n *   <li class='jc'>{@link HtmlBuilder}\n *   <ul class='javatree'>\n *     <li class='jm'>{@link HtmlBuilder#a() a()}\n *     <li class='jm'>{@link HtmlBuilder#a(Object, Object...) a(Object, Object...)}\n *   </ul>\n * </ul>\n * </p>\n */\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Refactoring"}),": Replaced constructor-based examples with ",(0,r.jsx)(n.code,{children:"HtmlBuilder"})," methods where applicable (examples with children defined)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Documentation Consistency"}),": Standardized formatting and structure across all HTML5 bean classes"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"juneau-core",children:"juneau-core"}),"\n",(0,r.jsx)(n.h4,{id:"license-header-standardization",children:"License Header Standardization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java Files"}),": Replaced non-standard comment-based license headers with the standard Apache License block comment format across all Java files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Properties Files"}),": Updated license headers in ",(0,r.jsx)(n.code,{children:".properties"})," files to use the standard format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"XML Files"}),": Standardized XML license headers with proper comment syntax"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Package Statement Fixes"}),": Corrected package statements that were in unusual positions after license header changes"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"mockito-compatibility",children:"Mockito Compatibility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Removed ",(0,r.jsx)(n.code,{children:"final"})," Modifiers"]}),": Removed ",(0,r.jsx)(n.code,{children:"final"})," modifiers from many classes across the framework to improve testability with Mockito and other mocking frameworks that require non-final classes. This change makes it significantly easier to write unit tests for code that uses Juneau APIs."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"juneau-marshall",children:"juneau-marshall"}),"\n",(0,r.jsx)(n.h4,{id:"schema-annotation---json-schema-draft-2020-12-support",children:"@Schema Annotation - JSON Schema Draft 2020-12 Support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Draft 2020-12 Compliance"}),": The ",(0,r.jsx)(n.code,{children:"@Schema"})," annotation has been upgraded to support JSON Schema Draft 2020-12 while maintaining full backward compatibility with Draft 04 (used by Swagger 2.0 and OpenAPI 3.0)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"New Draft 2020-12 Properties"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$id()"})," - Schema URI identifier (e.g., ",(0,r.jsx)(n.code,{children:'"https://example.com/schemas/user"'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_const()"})," - Constant value validation (value must exactly match)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"examples()"})," - Array of example values for documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$comment()"})," - Comments for schema authors (not for end users)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deprecatedProperty()"})," - Boolean flag to mark schema/property as deprecated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"exclusiveMaximumValue()"})," / ",(0,r.jsx)(n.code,{children:"exclusiveMinimumValue()"})," - Numeric exclusive bounds (replaces boolean flags)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contentMediaType()"})," - MIME type for string contents (e.g., ",(0,r.jsx)(n.code,{children:'"application/json"'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"contentEncoding()"})," - Encoding for string contents (e.g., ",(0,r.jsx)(n.code,{children:'"base64"'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"prefixItems()"})," - Tuple validation for array prefixes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unevaluatedItems()"})," - Additional validation for unevaluated array items"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"unevaluatedProperties()"})," - Additional validation for unevaluated object properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependentSchemas()"})," - Conditional subschemas based on property presence"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dependentRequired()"})," - Conditionally required properties"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"_if()"})," / ",(0,r.jsx)(n.code,{children:"_then()"})," / ",(0,r.jsx)(n.code,{children:"_else()"})," - Conditional schema validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"$defs()"})," - Reusable schema definitions (replaces ",(0,r.jsx)(n.code,{children:"definitions"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Schema(\n    type="integer",\n    _const="FIXED_VALUE",\n    examples={"100", "200", "300"},\n    $comment="Internal use only",\n    deprecatedProperty=true,\n    exclusiveMaximumValue="1000",\n    exclusiveMinimumValue="0"\n)\npublic int legacyField;\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Backward Compatibility"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Old boolean ",(0,r.jsx)(n.code,{children:"exclusiveMaximum"})," / ",(0,r.jsx)(n.code,{children:"exclusiveMinimum"})," properties still work but are deprecated"]}),"\n",(0,r.jsxs)(n.li,{children:["New numeric ",(0,r.jsx)(n.code,{children:"exclusiveMaximumValue"})," / ",(0,r.jsx)(n.code,{children:"exclusiveMinimumValue"})," take precedence when both are specified"]}),"\n",(0,r.jsx)(n.li,{children:"All Draft 04 properties continue to function as before"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Migration Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Draft 04 style (still works, but deprecated)\n@Schema(\n    type="integer",\n    exclusiveMaximum=true,  // deprecated\n    maximum="100",\n    exclusiveMinimum=true,  // deprecated\n    minimum="0"\n)\n\n// Draft 2020-12 style (recommended)\n@Schema(\n    type="integer",\n    exclusiveMaximumValue="100",  // 0 < x < 100 (boundaries excluded)\n    exclusiveMinimumValue="0"\n)\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enhanced Validation"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.code,{children:"const"})," validation in ",(0,r.jsx)(n.code,{children:"HttpPartSchema"})," - values must exactly match the constant"]}),"\n",(0,r.jsxs)(n.li,{children:["Updated ",(0,r.jsx)(n.code,{children:"exclusiveMaximum"})," / ",(0,r.jsx)(n.code,{children:"exclusiveMinimum"})," validation to support both boolean flags (Draft 04) and numeric values (Draft 2020-12)"]}),"\n",(0,r.jsx)(n.li,{children:"Proper error messages for all new validation types"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Comprehensive Test Coverage"}),": Added 38 new unit tests covering:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"All 18 new Draft 2020-12 properties"}),"\n",(0,r.jsx)(n.li,{children:"Schema annotation building and processing"}),"\n",(0,r.jsx)(n.li,{children:"JSON schema generation"}),"\n",(0,r.jsx)(n.li,{children:"Runtime validation (input and output)"}),"\n",(0,r.jsx)(n.li,{children:"Backward compatibility scenarios"}),"\n",(0,r.jsx)(n.li,{children:"Precedence rules (new vs old style)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"httppartformat---json-schemaopenapi-format-types",children:"HttpPartFormat - JSON Schema/OpenAPI Format Types"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Complete Format Coverage"}),": Added 18 new format types to the ",(0,r.jsx)(n.code,{children:"HttpPartFormat"})," enum to align with JSON Schema Draft 2020-12 and OpenAPI 3.x specifications:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Email Formats"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"EMAIL"})," - Email address (RFC 5321)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IDN_EMAIL"})," - Internationalized email address (RFC 6531)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Hostname Formats"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"HOSTNAME"})," - Internet host name (RFC 1123)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IDN_HOSTNAME"})," - Internationalized host name (RFC 5890)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"IP Address Formats"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IPV4"})," - IPv4 address (RFC 2673)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IPV6"})," - IPv6 address (RFC 4291)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"URI/IRI Formats"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"URI"})," - Universal Resource Identifier (RFC 3986)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"URI_REFERENCE"})," - URI Reference (RFC 3986)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IRI"})," - Internationalized Resource Identifier (RFC 3987)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IRI_REFERENCE"})," - IRI Reference (RFC 3987)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Other Formats"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"UUID"})," - Universally Unique Identifier (RFC 4122)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"URI_TEMPLATE"})," - URI Template (RFC 6570)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"JSON_POINTER"})," - JSON Pointer (RFC 6901)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RELATIVE_JSON_POINTER"})," - Relative JSON Pointer"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"REGEX"})," - Regular expression (ECMA-262)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DURATION"})," - Duration (RFC 3339 Appendix A / ISO 8601)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TIME"})," - Time (RFC 3339)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DATE_TIME_ZONE"})," - Date and time with time zone (RFC 3339)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Comprehensive Format Validation"}),": Added automatic validation for all format types in ",(0,r.jsx)(n.code,{children:"HttpPartSchema"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Email Validation"}),": Validates email format according to RFC 5321 (basic) and RFC 6531 (internationalized)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hostname Validation"}),": Validates hostnames per RFC 1123, supporting both ASCII and internationalized domain names"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IP Address Validation"}),": Full validation for both IPv4 (dotted decimal) and IPv6 (colon-separated hex) formats"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"URI/IRI Validation"}),": Validates URIs and IRIs, including relative references, using Java's ",(0,r.jsx)(n.code,{children:"java.net.URI"})," parser"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"UUID Validation"}),": Standard UUID format validation (8-4-4-4-12 hex digits)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Date/Time Validation"}),": RFC 3339 compliant validation with relaxed patterns to accommodate various serialization formats"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Expression Validation"}),": Validates regex patterns can be compiled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Duration Validation"}),": ISO 8601 duration format validation (e.g., ",(0,r.jsx)(n.code,{children:"P3Y6M4DT12H30M5S"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Smart Validation Logic"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Skips validation for literal ",(0,r.jsx)(n.code,{children:'"null"'})," strings (used in serialization)"]}),"\n",(0,r.jsxs)(n.li,{children:["Treats transformation formats (",(0,r.jsx)(n.code,{children:"BYTE"}),", ",(0,r.jsx)(n.code,{children:"BINARY"}),", ",(0,r.jsx)(n.code,{children:"BINARY_SPACED"}),") as hints, not validation constraints"]}),"\n",(0,r.jsx)(n.li,{children:"Uses relaxed patterns for dates/times to accommodate various serialization formats"}),"\n",(0,r.jsx)(n.li,{children:"Gracefully handles edge cases and malformed inputs"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Query(name="email", schema=@Schema(format="email"))\npublic String email;  // Validated as email format\n\n@Query(name="website", schema=@Schema(format="uri"))\npublic String website;  // Validated as URI\n\n@Query(name="id", schema=@Schema(format="uuid"))\npublic String id;  // Validated as UUID\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Validation Points"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Format validation occurs in both ",(0,r.jsx)(n.code,{children:"validateInput()"})," (for incoming string values) and ",(0,r.jsx)(n.code,{children:"validateOutput()"})," (for serialized objects)"]}),"\n",(0,r.jsxs)(n.li,{children:["Validation failures throw ",(0,r.jsx)(n.code,{children:"SchemaValidationException"})," with detailed error messages"]}),"\n",(0,r.jsx)(n.li,{children:"Format validation integrates seamlessly with existing pattern, min/max length, and other validations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"jakarta-bean-validation-integration",children:"Jakarta Bean Validation Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Reflective Jakarta Validation Support"}),": ",(0,r.jsx)(n.code,{children:"HttpPartSchema"})," now automatically detects and processes Jakarta Bean Validation constraints without requiring a direct dependency on ",(0,r.jsx)(n.code,{children:"jakarta.validation-api"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Supported Constraints"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@NotNull"})," \u2192 ",(0,r.jsx)(n.code,{children:"required(true)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Size(min=X, max=Y)"})," \u2192 ",(0,r.jsx)(n.code,{children:"minLength(X), maxLength(X), minItems(X), maxItems(Y)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Min(value)"})," \u2192 ",(0,r.jsx)(n.code,{children:"minimum(value)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Max(value)"})," \u2192 ",(0,r.jsx)(n.code,{children:"maximum(value)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Pattern(regexp)"})," \u2192 ",(0,r.jsx)(n.code,{children:"pattern(regexp)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Email"})," \u2192 ",(0,r.jsx)(n.code,{children:"format(EMAIL)"})," with automatic email validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Positive"})," \u2192 ",(0,r.jsx)(n.code,{children:"minimum(0) + exclusiveMinimum(true)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@PositiveOrZero"})," \u2192 ",(0,r.jsx)(n.code,{children:"minimum(0)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@Negative"})," \u2192 ",(0,r.jsx)(n.code,{children:"maximum(0) + exclusiveMaximum(true)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@NegativeOrZero"})," \u2192 ",(0,r.jsx)(n.code,{children:"maximum(0)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@NotEmpty"})," \u2192 ",(0,r.jsx)(n.code,{children:"required(true) + minLength(1) + minItems(1)"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@NotBlank"})," \u2192 ",(0,r.jsx)(n.code,{children:'required(true) + minLength(1) + pattern(".*\\\\S.*")'})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@DecimalMin(value, inclusive)"})," \u2192 ",(0,r.jsx)(n.code,{children:"minimum(value)"})," with optional ",(0,r.jsx)(n.code,{children:"exclusiveMinimum"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"@DecimalMax(value, inclusive)"})," \u2192 ",(0,r.jsx)(n.code,{children:"maximum(value)"})," with optional ",(0,r.jsx)(n.code,{children:"exclusiveMaximum"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import jakarta.validation.constraints.*;\n\npublic class UserInput {\n    @NotNull\n    @Email\n    @Size(max=255)\n    private String email;\n    \n    @NotBlank\n    @Size(min=8, max=100)\n    @Pattern(regexp="^(?=.*[A-Z])(?=.*[a-z])(?=.*\\\\d).+$")\n    private String password;\n    \n    @Positive\n    @Max(150)\n    private Integer age;\n    \n    @DecimalMin(value="0.0", inclusive=false)\n    @DecimalMax(value="999.99")\n    private BigDecimal price;\n}\n\n// HttpPartSchema automatically detects these constraints and applies them\nHttpPartSchema schema = HttpPartSchema.create()\n    .apply(field.getAnnotation(NotNull.class))\n    .apply(field.getAnnotation(Email.class))\n    .apply(field.getAnnotation(Size.class))\n    .build();\n\n// Validation now includes email format, required, and length checks\nschema.validateInput(value);\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementation Details"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses pure reflection to detect annotations starting with ",(0,r.jsx)(n.code,{children:"jakarta.validation.constraints."})]}),"\n",(0,r.jsx)(n.li,{children:"No compile-time or runtime dependency on Jakarta Validation API in production code"}),"\n",(0,r.jsx)(n.li,{children:"Gracefully ignores unknown or unsupported constraint annotations"}),"\n",(0,r.jsx)(n.li,{children:"Maps Jakarta Validation semantics to OpenAPI/JSON Schema equivalents"}),"\n",(0,r.jsxs)(n.li,{children:["Test module includes ",(0,r.jsx)(n.code,{children:"jakarta.validation-api"})," as a test dependency for comprehensive testing"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Enhanced OpenAPI Compatibility"}),": Jakarta Validation constraints are now seamlessly translated to OpenAPI schema properties, enabling automatic documentation generation and client-side validation in tools like Swagger UI."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"xml-serialization",children:"XML Serialization"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Text Node Delimiter"}),": Added ",(0,r.jsx)(n.code,{children:"textNodeDelimiter"})," property to ",(0,r.jsx)(n.code,{children:"XmlSerializer"})," and ",(0,r.jsx)(n.code,{children:"HtmlSerializer"})," to control spacing between consecutive text nodes."]}),"\n",(0,r.jsx)(n.p,{children:"Example usage:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'XmlSerializer serializer = XmlSerializer.create()\n    .textNodeDelimiter(" ")\n    .build();\n'})}),"\n",(0,r.jsx)(n.p,{children:"With this setting, serializing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'new Audio().children("a", "b", new Strong("c"));\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Produces: ",(0,r.jsx)(n.code,{children:"<audio>a b<strong>c</strong></audio>"}),(0,r.jsx)(n.br,{}),"\n","Instead of: ",(0,r.jsx)(n.code,{children:"<audio>ab<strong>c</strong></audio>"})]}),"\n",(0,r.jsx)(n.p,{children:"This improves readability of HTML5 bean output by adding proper spacing between text elements."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Disable JSON Type Tags"}),": Added ",(0,r.jsx)(n.code,{children:"disableJsonTags()"})," method to ",(0,r.jsx)(n.code,{children:"XmlSerializer"})," and ",(0,r.jsx)(n.code,{children:"HtmlSerializer"})," to disable JSON type identifier tags in XML output."]}),"\n",(0,r.jsx)(n.p,{children:"Example usage:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"XmlSerializer serializer = XmlSerializer.create()\n    .disableJsonTags()\n    .build();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When enabled, JSON type tags (e.g. ",(0,r.jsx)(n.code,{children:"<string>"}),") and attributes will not be added to the output. This produces cleaner XML but may affect parsing accuracy as type information is lost."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": Disabling JSON tags can cause different data to be parsed (e.g., strings instead of numbers) since type information is not preserved in the XML."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"juneau-bct-new-module",children:"juneau-bct (NEW MODULE)"}),"\n",(0,r.jsx)(n.h4,{id:"bean-centric-testing-framework",children:"Bean-Centric Testing Framework"}),"\n",(0,r.jsx)(n.p,{children:"A new testing module that provides fluent, powerful APIs for testing Java beans with minimal boilerplate code."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Features"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Fluent Assertion API"}),": Chain multiple assertions with readable, natural language syntax"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'assertBean(myBean)\n    .property("name").is("John")\n    .property("age").isType(Integer.class).is(25)\n    .property("email").matches(".*@example\\\\.com");\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Deep Property Path Navigation"}),": Test nested bean properties with dot notation and collection indexing"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'assertBean(swagger)\n    .asJson().is("paths.\'/users\'.get.summary", "Get all users")\n    .asJson().is("definitions.User.properties.id.type", "integer");\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Serialization Testing"}),": Round-trip testing for JSON, XML, HTML, and other formats"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'assertBean(bean)\n    .asJson().is("{name:\'John\',age:25}")\n    .asXml().contains("<name>John</name>");\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Collection Assertions"}),": Simplified testing of arrays, lists, and maps"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'assertBean(swagger)\n    .property("tags").asCollection().size().is(3)\n    .property("tags[0].name").is("users");\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Exception Testing"}),": Clean assertions for exception testing"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'assertThrown(() -> bean.setRequired(null))\n    .isType(IllegalArgumentException.class)\n    .message().contains("cannot be null");\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Test Utilities"}),": Helper methods for common testing patterns"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"assertMap()"})," - Map-specific assertions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"assertList()"})," - List-specific assertions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"assertString()"})," - String pattern matching and validation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"assertObject()"})," - Generic object assertions"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reduces test code verbosity by up to 70%"}),"\n",(0,r.jsx)(n.li,{children:"Improves test readability and maintainability"}),"\n",(0,r.jsx)(n.li,{children:"Provides consistent testing patterns across the codebase"}),"\n",(0,r.jsx)(n.li,{children:"Supports all Juneau serialization formats"}),"\n",(0,r.jsx)(n.li,{children:"Works seamlessly with JUnit 5"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example Usage"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Test\nvoid testSwaggerDocument() {\n    Swagger swagger = new Swagger()\n        .info(new Info().title("My API").version("1.0"))\n        .path("/users", new PathItem()\n            .get(new Operation()\n                .summary("Get users")\n                .response("200", new Response().description("Success"))));\n    \n    assertBean(swagger)\n        .asJson().is("info.title", "My API")\n        .asJson().is("info.version", "1.0")\n        .asJson().is("paths.\'/users\'.get.summary", "Get users")\n        .asJson().is("paths.\'/users\'.get.responses.\'200\'.description", "Success");\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"See the module documentation for complete API reference and examples."}),"\n",(0,r.jsx)(n.h3,{id:"juneau-shaded-new-module",children:"juneau-shaded (NEW MODULE)"}),"\n",(0,r.jsx)(n.h4,{id:"shaded-artifacts-for-simplified-dependency-management",children:"Shaded Artifacts for Simplified Dependency Management"}),"\n",(0,r.jsxs)(n.p,{children:["Introduced a new ",(0,r.jsx)(n.code,{children:"juneau-shaded"})," module that provides five shaded (uber) JAR artifacts. These artifacts bundle multiple Juneau modules into single JARs, making them ideal for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bazel and strict dependency build systems"})," - Eliminates the need to manually declare all transitive Juneau dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simplified Maven/Gradle projects"})," - One dependency instead of many"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standalone applications"})," - Convenient uber JAR deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quick prototyping"})," - Get started faster with fewer dependency decisions"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"available-shaded-artifacts",children:"Available Shaded Artifacts"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Artifact"}),(0,r.jsx)(n.th,{children:"Size"}),(0,r.jsx)(n.th,{children:"Contents"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-core"})}),(0,r.jsx)(n.td,{children:"2.0 MB"}),(0,r.jsx)(n.td,{children:"Core marshalling and configuration modules"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-rest-client"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"Core + REST client functionality"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-rest-server"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"Core + REST server functionality"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-rest-server-springboot"})}),(0,r.jsx)(n.td,{children:"3.8 MB"}),(0,r.jsx)(n.td,{children:"REST server + Spring Boot integration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"juneau-shaded-all"})}),(0,r.jsx)(n.td,{children:"4.0 MB"}),(0,r.jsx)(n.td,{children:"Complete Juneau framework in one JAR"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"maven-usage",children:"Maven Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-all</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h4,{id:"bazel-usage",children:"Bazel Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'maven_jar(\n    name = "juneau_all",\n    artifact = "org.apache.juneau:juneau-shaded-all:${juneau.version}",\n)\n\njava_library(\n    name = "my_lib",\n    srcs = ["MyCode.java"],\n    deps = ["@juneau_all//jar"],\n)\n'})}),"\n",(0,r.jsx)(n.h4,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bundles all Juneau modules"})," - No need to declare transitive Juneau dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External dependencies still required"})," - Apache HttpClient, Jakarta Servlet API, etc. must be declared separately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No code changes needed"})," - All imports and APIs remain the same"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Maven Shade Plugin"})," - Uses industry-standard plugin for creating uber JARs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service file merging"})," - Automatically merges ",(0,r.jsx)(n.code,{children:"META-INF/services"})," files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependency-reduced POMs"})," - Shows exactly which external dependencies are needed"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"included-in-distribution",children:"Included in Distribution"}),"\n",(0,r.jsxs)(n.p,{children:["All five shaded artifacts are now included in the binary distribution under ",(0,r.jsx)(n.code,{children:"/shaded/"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"juneau-shaded-core-${version}.jar"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"juneau-shaded-rest-client-${version}.jar"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"juneau-shaded-rest-server-${version}.jar"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"juneau-shaded-rest-server-springboot-${version}.jar"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"juneau-shaded-all-${version}.jar"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedOverview",children:"Shaded Artifacts Overview"})})," - Complete guide with Bazel examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedCore",children:"juneau-shaded-core"})})," - Core functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestClient",children:"juneau-shaded-rest-client"})})," - REST client"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestServer",children:"juneau-shaded-rest-server"})})," - REST server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedRestServerSpringboot",children:"juneau-shaded-rest-server-springboot"})})," - Spring Boot"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/topics/JuneauShadedAll",children:"juneau-shaded-all"})})," - Complete framework"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"deprecation-of-juneau-all",children:"Deprecation of juneau-all"}),"\n",(0,r.jsxs)(n.p,{children:["The previous ",(0,r.jsx)(n.code,{children:"juneau-all"})," module has been deprecated and removed in favor of ",(0,r.jsx)(n.code,{children:"juneau-shaded-all"}),". The shaded version provides the same functionality with better support for modern build systems like Bazel."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Migration:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:"juneau-all"})," with ",(0,r.jsx)(n.code,{children:"juneau-shaded-all"})," in your dependencies"]}),"\n",(0,r.jsx)(n.li,{children:"No code changes required - all imports remain the same"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"juneau-rest-client",children:"juneau-rest-client"}),"\n",(0,r.jsx)(n.h4,{id:"restrequest-and-restresponse",children:"RestRequest and RestResponse"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Try-With-Resources Support"}),": Enhanced ",(0,r.jsx)(n.code,{children:"RestRequest"})," and ",(0,r.jsx)(n.code,{children:"RestResponse"})," to work cleanly with try-with-resources blocks:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"RestRequest"})," now implements ",(0,r.jsx)(n.code,{children:"AutoCloseable"})," and automatically closes ",(0,r.jsx)(n.code,{children:"RestResponse"})," if a response has been created"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"close()"})," methods no longer throw checked exceptions (following AutoCloseable best practices)"]}),"\n",(0,r.jsx)(n.li,{children:"Unchecked exceptions are thrown for critical failures"}),"\n",(0,r.jsxs)(n.li,{children:["Checked exceptions (including ",(0,r.jsx)(n.code,{children:"RestCallException"}),") are logged but not thrown, preventing exceptions from being masked in try-with-resources"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Example usage:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'RestClient client = RestClient.create().build();\ntry (RestRequest req = client.get("/api/users")) {\n    String response = req.run().getContent().asString();\n} // Automatic cleanup with proper exception handling\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Improved Error Handling"}),": Added comprehensive logging for exceptions caught during cleanup to aid debugging while maintaining AutoCloseable compliance and preventing exception masking in try-catch blocks"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"remote-proxy-default-values",children:"Remote Proxy Default Values"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameter-Level and Method-Level Default Values"}),": Added support for specifying default values on remote proxy interface parameters and methods using the ",(0,r.jsx)(n.code,{children:"def"})," attribute on HTTP part annotations:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'@Header(name="...", def="...")'})," - Default HTTP request headers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'@Query(name="...", def="...")'})," - Default query string parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'@FormData(name="...", def="...")'})," - Default form post parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'@Path(name="...", def="...")'})," - Default path variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'@Content(def="...")'})," - Default request body (new attribute)"]}),"\n",(0,r.jsx)(n.li,{children:"Parameter-level defaults take precedence over method-level defaults when both are specified"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Parameter-level defaults example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@Remote(path="/petstore")\npublic interface PetStore {\n\n    @RemoteGet("/pets")\n    Pet[] getPets(\n        @Header(name="Accept-Language", def="en-US") String language,\n        @Query(name="limit", def="10") Integer limit\n    );\n}\n\nPetStore store = client.getRemote(PetStore.class, "http://localhost:10000");\n\n// Uses default language="en-US" and limit=10\nPet[] pets1 = store.getPets(null, null);\n\n// Uses custom language, default limit=10\nPet[] pets2 = store.getPets("fr-FR", null);\n'})}),"\n",(0,r.jsx)(n.p,{children:"Method-level defaults example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RemoteGet("/pets")\n@Header(name="Accept-Language", def="en-US")\n@Query(name="limit", def="10")\nPet[] getPets(\n    @Header("Accept-Language") String language,\n    @Query("limit") Integer limit\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:"Precedence example (parameter-level wins):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RemoteGet("/data")\n@Query(name="format", def="xml")  // Method-level default\nString getData(\n    @Query(name="format", def="json") String format  // Takes precedence\n);\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Multiple Defaults Support"}),": Methods can have multiple default annotations of the same type, properly handling Java's ",(0,r.jsx)(n.code,{children:"@Repeatable"})," annotation mechanism:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@RemotePost("/resource")\n@Header(name="X-API-Key", def="default-key")\n@Header(name="X-Client-Version", def="1.0")\nString createResource(\n    @Header("X-API-Key") String apiKey,\n    @Header("X-Client-Version") String clientVersion\n);\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Use Cases"}),": Default values are particularly useful for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"API keys and authentication credentials"}),"\n",(0,r.jsx)(n.li,{children:"API versioning headers"}),"\n",(0,r.jsx)(n.li,{children:"Pagination limits and page sizes"}),"\n",(0,r.jsx)(n.li,{children:"Content negotiation (language, format)"}),"\n",(0,r.jsx)(n.li,{children:"Feature flags and debug modes"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Behavior"}),": Default values are only applied when the parameter value is ",(0,r.jsx)(n.code,{children:"null"}),". Empty strings, zero values, and empty collections are considered valid values and will not trigger the default."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"documentation-1",children:"Documentation"}),"\n",(0,r.jsx)(n.h4,{id:"historical-javadocs",children:"Historical Javadocs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Javadocs Archive"}),": Set up versioned javadocs hosting at ",(0,r.jsx)(n.code,{children:"/javadocs/"})," with:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Landing page with cards for all historical versions (7.1.0 through 9.1.0)"}),"\n",(0,r.jsxs)(n.li,{children:['"Current (Development)" link pointing to ',(0,r.jsx)(n.code,{children:"/site/apidocs/"})," for latest Maven-generated docs"]}),"\n",(0,r.jsxs)(n.li,{children:["Helper scripts for adding new versions (",(0,r.jsx)(n.code,{children:"add-javadocs.sh"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Comprehensive documentation for maintainers (",(0,r.jsx)(n.code,{children:"README.md"}),", ",(0,r.jsx)(n.code,{children:"JAVADOCS_SETUP.md"}),")"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Git LFS Considerations"}),": Documented Git LFS limitations with Apache GitBox and alternative deployment strategies"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"known-issues",children:"Known Issues"}),"\n",(0,r.jsx)(n.p,{children:"None at this time."}),"\n",(0,r.jsx)(n.h4,{id:"migration-notes",children:"Migration Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"juneau-all \u2192 juneau-shaded-all"}),": The ",(0,r.jsx)(n.code,{children:"juneau-all"})," module has been removed. Update your dependencies:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Before:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-all</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"After:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.apache.juneau</groupId>\n    <artifactId>juneau-shaded-all</artifactId>\n    <version>${juneau.version}</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.p,{children:"No code changes are required - all imports and APIs remain the same."}),"\n",(0,r.jsx)(n.p,{children:"Alternatively, consider using a more specific shaded artifact if you don't need the full framework:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"juneau-shaded-core"})," - For marshalling/config only (2.0 MB)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"juneau-shaded-rest-client"})," - For REST client work (3.8 MB)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"juneau-shaded-rest-server"})," - For REST server work (3.8 MB)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"@Schema Annotation"}),": All existing code using ",(0,r.jsx)(n.code,{children:"@Schema"})," annotations will continue to work without changes. The upgrade to Draft 2020-12 is fully backward compatible."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optional Migration"})," (for new Draft 2020-12 features):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:'exclusiveMaximum=true, maximum="100"'})," with ",(0,r.jsx)(n.code,{children:'exclusiveMaximumValue="100"'})," for cleaner syntax"]}),"\n",(0,r.jsxs)(n.li,{children:["Replace ",(0,r.jsx)(n.code,{children:'exclusiveMinimum=true, minimum="0"'})," with ",(0,r.jsx)(n.code,{children:'exclusiveMinimumValue="0"'})," for cleaner syntax"]}),"\n",(0,r.jsxs)(n.li,{children:["Use new properties like ",(0,r.jsx)(n.code,{children:"_const"}),", ",(0,r.jsx)(n.code,{children:"examples"}),", ",(0,r.jsx)(n.code,{children:"$comment"}),", etc. as needed"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Old style (still works, but deprecated)\n@Schema(type="integer", exclusiveMaximum=true, maximum="100", exclusiveMinimum=true, minimum="0")\n\n// New style (recommended)\n@Schema(type="integer", exclusiveMaximumValue="100", exclusiveMinimumValue="0")\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"JsonSchema"}),": Code using ",(0,r.jsx)(n.code,{children:"JsonSchema"})," beans will continue to work without changes. For Draft 2020-12 features:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"$id"})," instead of ",(0,r.jsx)(n.code,{children:"id"})," for new schemas"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"$defs"})," instead of ",(0,r.jsx)(n.code,{children:"definitions"})," for new schemas"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"exclusiveMaximumValue"}),"/",(0,r.jsx)(n.code,{children:"exclusiveMinimumValue"})," for numeric exclusive bounds (old boolean style still supported)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"RestClient"}),": If you have custom implementations that override ",(0,r.jsx)(n.code,{children:"close()"})," methods, ensure they don't throw checked exceptions to comply with AutoCloseable contract."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"License Headers"}),": If you have custom tooling that depends on the old license header format, update it to recognize the new standard Apache License block comment format."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);