"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[925],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var r=n(96540);const t={},a=r.createContext(t);function i(e){const s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:s},e.children)}},73337:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"topics/05.03.03.Arrays","title":"Arrays","description":"The asStringArray() method allows you to retrieve comma-delimited lists of values:","source":"@site/docs/topics/05.03.03.Arrays.md","sourceDirName":"topics","slug":"/topics/Arrays","permalink":"/docs/topics/Arrays","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/05.03.03.Arrays.md","tags":[],"version":"current","frontMatter":{"title":"Arrays","slug":"Arrays"},"sidebar":"mainSidebar","previous":{"title":"5.3.2. POJOs","permalink":"/docs/topics/Pojos"},"next":{"title":"5.3.4. Java Collection Framework Objects","permalink":"/docs/topics/JCFObjects"}}');var t=n(74848),a=n(28453);const i={title:"Arrays",slug:"Arrays"},c=void 0,o={},l=[];function d(e){const s={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"asStringArray()"})," method allows you to retrieve comma-delimited lists of values:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ini",children:"key1 = foo, bar, baz\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'String[] key1 = config.get("key1").asStringArray().orElse(null);\n'})}),"\n",(0,t.jsx)(s.p,{children:"String arrays can also be represented in JSON when the registered parser is a JSON parser:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ini",children:"key1 = ['foo','bar','baz']\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'String[] key1 = config.get("key1").asStringArray().orElse(null);\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Primitive arrays can also be retrieved using the ",(0,t.jsx)(s.code,{children:"as()"})," and ",(0,t.jsx)(s.code,{children:"to()"})," methods:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ini",children:"key1 = [1,2,3]\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'int[] key1 = config.get("key1").as(int[].class).orElse(null);\n'})}),"\n",(0,t.jsx)(s.p,{children:"Arrays of POJOs can also be retrieved using the methods as well:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ini",children:"addresses =\n    [\n        {\n            street: '123 Main Street',\n            city: 'Anywhere',\n            state: 'NY',\n            zip: 12345\n        },\n        {\n            street: '456 Main Street',\n            city: 'Anywhere',\n            state: 'NY',\n            zip: 12345\n        }\n    ]\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-java",children:'Address[] addresses = config.get("addresses").as(Address[].class).orElse(null);\n'})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);