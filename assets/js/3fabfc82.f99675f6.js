"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1906],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(96540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},90073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"topics/10.02.00.PojoMarshalling","title":"POJO Marshalling","description":"By default, JSON support is provided for HTTP request and response bodies.","source":"@site/docs-staging/topics/10.02.00.PojoMarshalling.md","sourceDirName":"topics","slug":"/topics/10.02.00.PojoMarshalling","permalink":"/docs/topics/10.02.00.PojoMarshalling","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/10.02.00.PojoMarshalling.md","tags":[],"version":"current","frontMatter":{"title":"POJO Marshalling"},"sidebar":"mainSidebar","previous":{"title":"10.1. juneau-rest-client Basics","permalink":"/docs/topics/10.01.00.JuneauRestClientBasics"},"next":{"title":"10.3. Request Parts","permalink":"/docs/topics/10.03.00.RequestParts"}}');var s=t(74848),r=t(28453);const i={title:"POJO Marshalling"},l=void 0,c={},d=[];function o(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"By default, JSON support is provided for HTTP request and response bodies."}),"\n",(0,s.jsx)(n.p,{children:"Other languages can be specified using any of the following builder methods:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#json()",children:"json()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#json5()",children:"json5()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#xml()",children:"xml()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#html()",children:"html()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#plainText()",children:"plainText()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#msgPack()",children:"msgPack()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#uon()",children:"uon()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#urlEnc()",children:"urlEnc()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#openApi()",children:"openApi()"})})})]}),"\n",(0,s.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Create a basic REST client with JSON 5 support.\n// Typically easier to use when performing unit tests.\nRestClient client = RestClient.create().json5().build();\n"})})}),"\n",(0,s.jsx)(n.p,{children:"Clients can also support multiple languages:"}),"\n",(0,s.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Create a REST client with support for multiple languages.\nRestClient client1 = RestClient.create().json().xml().openApi().build();\n\n// Create a REST client with support for all supported languages.\nRestClient client2 = RestClient.create().universal().build();\n"})})}),"\n",(0,s.jsxs)(n.p,{children:["When using clients with multiple language support, the request language is selected by setting the ",(0,s.jsx)(n.code,{children:"Content-Type"}),"\nrequest header."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Create a REST client with support for multiple languages.\nRestClient client = RestClient.create().universal().build();\n\nclient.post(URI, myBean)\n    .contentType("application/json")\n    .complete()\n    .assertStatus().asCode().is(200);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Languages can also be specified per-request."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Create a REST client with no default languages supported.\nRestClient client = RestClient.create().build();\n\n// Use JSON for this request.\nclient.post(URI, myBean)\n    .json()\n    .complete()\n    .assertStatus().asCode().is(200);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})," class provides convenience\nmethods for setting common serializer and parser settings."]}),"\n",(0,s.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Create a basic REST client with JSON support.\n// Use single-quotes and whitespace.\nRestClient client1 = RestClient.create().json().sq().ws().build();\n"})})}),"\n",(0,s.jsx)(n.p,{children:"Other methods are also provided for specifying the serializers and parsers used for lower-level marshalling support:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#serializer(Serializer)",children:"serializer(Serializer)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#parser(Parser)",children:"parser(Parser)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#marshaller(Marshaller)",children:"marshaller(Marshaller)"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["HTTP parts (headers, query parameters, form data...) are serialized and parsed using the ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",children:"HttpPartSerializer"}),"\nand ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartParser.html",children:"HttpPartParser"})," APIs.\nBy default, clients are configured to use ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",children:"OpenApiSerializer"})," and\n",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiParser.html",children:"OpenApiParser"}),".\nThese can be overridden using the following methods:"]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#partSerializer(Class)",children:"partSerializer(Class<? extends HttpPartSerializer>)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#partParser(Class)",children:"partParser(Class<? extends HttpPartParser>)"})})})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);