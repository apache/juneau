"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[2116],{28453:(e,r,t)=>{t.d(r,{R:()=>n,x:()=>o});var c=t(96540);const s={},i=c.createContext(s);function n(e){const r=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),c.createElement(i.Provider,{value:r},e.children)}},71441:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>v,frontMatter:()=>n,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"topics/13.02.00.MicroserviceJettyOverview","title":"Microservice Jetty Overview","description":"The Jetty Microservice API consists of a combination of the Juneau Core, Server, and Client APIs and an embedded Eclipse","source":"@site/docs-staging/topics/13.02.00.MicroserviceJettyOverview.md","sourceDirName":"topics","slug":"/topics/13.02.00.MicroserviceJettyOverview","permalink":"/docs/topics/13.02.00.MicroserviceJettyOverview","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/13.02.00.MicroserviceJettyOverview.md","tags":[],"version":"current","frontMatter":{"title":"Microservice Jetty Overview"},"sidebar":"tutorialSidebar","previous":{"title":"13.1. juneau-microservice-jetty Basics","permalink":"/docs/topics/13.01.00.JuneauMicroserviceJettyBasics"},"next":{"title":"13.3. Lifecycle Methods","permalink":"/docs/topics/13.03.00.LifecycleMethods"}}');var s=t(74848),i=t(28453);const n={title:"Microservice Jetty Overview"},o=void 0,a={},d=[];function l(e){const r={a:"a",code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"The Jetty Microservice API consists of a combination of the Juneau Core, Server, and Client APIs and an embedded Eclipse\nJetty Servlet Container."}),"\n",(0,s.jsx)(r.p,{children:"The API builds upon the Core Microservices classes to produce easy-to-create and easy-to-use microservices in a standard\nJava 1.8+ environment."}),"\n",(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"juneau-microservice-jetty"})," library consists of the following classes:"]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsxs)("node-0",{children:[(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty.html",children:"org.apache.juneau.microservice.jetty"})," - Package"]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/JettyMicroservice.html",children:"JettyMicroservice"})})," - The Jetty microservice class."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/JettyMicroservice/Builder.html",children:"JettyMicroservice.Builder"})})," - Builder for the microservice class."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/JettyMicroserviceListener.html",children:"JettyMicroserviceListener"})})," - Interface for hooking into lifecyle events of the microservice."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/BasicJettyMicroserviceListener.html",children:"BasicJettyMicroserviceListener"})})," - Adapter for JettyMicroserviceListener class."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/JettyServerFactory.html",children:"JettyServerFactory"})})," - Interface for defining custom Jetty servers."]}),(0,s.jsxs)("node-1",{children:[(0,s.jsx)("java-class",{children:(0,s.jsx)(r.a,{href:"../apidocs/org/apache/juneau/microservice/jetty/BasicJettyServerFactory.html",children:"BasicJettyServerFactory"})})," - Adapter for JettyServerFactory class."]})]}),"\n",(0,s.jsx)(r.p,{children:"The most-basic creation of a Jetty microservice from an entry-point method is shown below:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"public class App {\n    public static void main(String[] args) {\n        JettyMicroservice\n            .create()                     // Create builder.\n            .args(args)                   // Pass in args.\n            .servlets(RootResource.class) // A Juneau RestServlet class.\n            .build()                      // Create microservice.\n            .start()                      // Start microservice.\n        ;\n    }\n}\n"})})]})}function v(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);