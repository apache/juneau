"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[5472],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var a=n(96540);const o={},r=a.createContext(o);function i(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(r.Provider,{value:t},e.children)}},63082:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"topics/02.18.00.MarshallingUris","title":"URIs","description":"Juneau serializers have sophisticated support for transforming relative URIs to absolute form.","source":"@site/docs/topics/02.18.00.MarshallingUris.md","sourceDirName":"topics","slug":"/topics/MarshallingUris","permalink":"/docs/topics/MarshallingUris","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.18.00.MarshallingUris.md","tags":[],"version":"current","frontMatter":{"title":"URIs","slug":"MarshallingUris"},"sidebar":"mainSidebar","previous":{"title":"2.17. Reading Continuous Streams","permalink":"/docs/topics/ReadingContinuousStreams"},"next":{"title":"2.19. Jackson Comparison","permalink":"/docs/topics/JacksonComparison"}}');var o=n(74848),r=n(28453);const i={title:"URIs",slug:"MarshallingUris"},s=void 0,l={},c=[];function h(e){const t={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Juneau serializers have sophisticated support for transforming relative URIs to absolute form."}),"\n",(0,o.jsx)(t.p,{children:"The following example shows a bean containing URIs of various forms and how they end up serialized."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'// Our bean with properties containing various kinds of URIs.\npublic class TestURIs {\n    public URI\n        a = URI.create("http://www.apache.org/a"),\n        b = URI.create("/b"),\n        c = URI.create("/c/x/y"),\n        d = URI.create("d"),\n        e = URI.create("e/x/y"),\n        f = URI.create(""),\n        g = URI.create("context:/g/x"),\n        h = URI.create("context:/h"),\n        i = URI.create("context:/"),\n        j = URI.create("context:/.."),\n        k = URI.create("servlet:/k/x"),\n        l = URI.create("servlet:/l"),\n        m = URI.create("servlet:/"),\n        n = URI.create("servlet:/.."),\n        o = URI.create("request:/o/x"),\n        p = URI.create("request:/p"),\n        q = URI.create("request:/"),\n        r = URI.create("request:/..");\n}\n\n// Create a serializer.\nWriterSerializer serializer = JsonSerializer\n    create()\n    .simple()\n    .uriContext(\n        UriContext.of(\n            "http://foo.com:123",  // Authority\n            "/myContext",  // Context root\n            "/myServlet",  // Servlet path\n            "/myPath"  // Path info\n        )\n    )\n    .uriResolution(ABSOLUTE)\n    .uriRelativity(RESOURCE)\n    .build();\n\n// Produces:\n// {\n//\ta:\'http://www.apache.org/a\',\n//\tb:\'http://foo.com:123/b\',\n//\tc:\'http://foo.com:123/c/x/y\',\n//\td:\'http://foo.com:123/myContext/myServlet/d\',\n//\te:\'http://foo.com:123/myContext/myServlet/e/x/y\',\n//\tf:\'http://foo.com:123/myContext/myServlet\',\n//\tg:\'http://foo.com:123/myContext/g/x\',\n//\th:\'http://foo.com:123/myContext/h\',\n//\ti:\'http://foo.com:123/myContext\',\n//\tj:\'http://foo.com:123\'\n//\tk:\'http://foo.com:123/myContext/myServlet/k/x\',\n//\tl:\'http://foo.com:123/myContext/myServlet/l\',\n//\tm:\'http://foo.com:123/myContext/myServlet\',\n//\tn:\'http://foo.com:123/myContext\',\n//\to:\'http://foo.com:123/myContext/myServlet/myPath/o/x\',\n//\tp:\'http://foo.com:123/myContext/myServlet/myPath/p\',\n//\tq:\'http://foo.com:123/myContext/myServlet/myPath\',\n//\tr:\'http://foo.com:123/myContext/myServlet\'\n// }\nString json = serializer.serialize(new TestURIs());\n'})}),"\n",(0,o.jsx)(t.p,{children:"URI resolution is controlled by the following settings:"}),"\n",(0,o.jsxs)("tree",{children:[(0,o.jsx)("node-0",{children:(0,o.jsx)("java-abstract-class",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/serializer/Serializer.Builder.html",target:"_blank",children:"Serializer.Builder"})})}),(0,o.jsxs)("node-1",{children:[(0,o.jsx)("java-method",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/serializer/Serializer.Builder.html#uriContext(org.apache.juneau.UriContext)",target:"_blank",children:"uriContext(UriContext)"})})," - Setting that defines the URI contextual information used to resolve relative URIs."]}),(0,o.jsxs)("node-1",{children:[(0,o.jsx)("java-method",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/serializer/Serializer.Builder.html#uriRelativity(org.apache.juneau.UriRelativity)",target:"_blank",children:"uriRelativity(UriRelativity)"})})," - Setting that defines how relative URIs should be interpreted.  Possible values:"]}),(0,o.jsxs)("node-2",{children:[(0,o.jsx)("java-enum",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/UriRelativity.html#RESOURCE",target:"_blank",children:"UriRelativity.RESOURCE"})})," - Relative URIs should be considered relative to the servlet URI.  (e.g. ",(0,o.jsx)(t.code,{children:"http://host:port/context-root/servlet-path"}),")."]}),(0,o.jsxs)("node-2",{children:[(0,o.jsx)("java-enum",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/UriRelativity.html#PATH_INFO",target:"_blank",children:"UriRelativity.PATH_INFO"})})," - Relative URIs should be considered relative to the request URI.  (e.g. ",(0,o.jsx)(t.code,{children:"http://host:port/context-root/servlet-path/path-info"}),")."]}),(0,o.jsxs)("node-1",{children:[(0,o.jsx)("java-method",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/serializer/Serializer.Builder.html#uriResolution(org.apache.juneau.UriResolution)",target:"_blank",children:"uriResolution(UriResolution)"})})," - Setting that defines the final format of serialized URIs.  Possible values:"]}),(0,o.jsxs)("node-2",{children:[(0,o.jsx)("java-enum",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/UriResolution.html#ABSOLUTE",target:"_blank",children:"UriResolution.ABSOLUTE"})})," - Resolve to an absolute URL.  (e.g. ",(0,o.jsx)(t.code,{children:"http://host:port/context-root/servlet-path/path-info"}),")."]}),(0,o.jsxs)("node-2",{children:[(0,o.jsx)("java-enum",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/UriResolution.html#ROOT_RELATIVE",target:"_blank",children:"UriResolution.ROOT_RELATIVE"})}),' - Resolve to a root-relative URL.  (e.g. "/context-root/servlet-path/path-info").']}),(0,o.jsxs)("node-2",{children:[(0,o.jsx)("java-enum",{children:(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/UriResolution.html#NONE",target:"_blank",children:"UriResolution.NONE"})})," - Don't do any URL resolution."]})]}),"\n",(0,o.jsxs)(t.p,{children:["Juneau automatically interprets any ",(0,o.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/net/URL.html",target:"_blank",children:"URL"})," and ",(0,o.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/net/URI.html",target:"_blank",children:"URI"}),"\nobjects as URIs and will resolve them accordingly.\nThe ",(0,o.jsx)("a",{href:"/site/apidocs/org/apache/juneau/annotation/Uri.html",target:"_blank",children:"@Uri"})," annotation can be used to extend that to other bean\nproperties and class types so that they also get interpreted as URIs."]}),"\n",(0,o.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'// Applied to a class whose toString() method returns a URI.\n@URI\npublic class MyURI {\n    @Override /* Object */\n    public String toString() {\n        return "http://localhost:9080/foo/bar";\n    }\n}\n\n// Applied to bean properties\npublic class MyBean {\n\n    @URI\n    public String beanUri;\n\n    @URI\n    public String getParentUri() {\n        ...\n    }\n}\n'})})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);