"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[9847],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var o=t(96540);const s={},i=o.createContext(s);function l(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(i.Provider,{value:n},e.children)}},67251:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"topics/10.11.00.LoggingAndDebugging","title":"Logging and Debugging","description":"The following methods provide logging of requests and responses:","source":"@site/docs-staging/topics/10.11.00.LoggingAndDebugging.md","sourceDirName":"topics","slug":"/topics/10.11.00.LoggingAndDebugging","permalink":"/docs/topics/10.11.00.LoggingAndDebugging","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs/docs-staging/topics/10.11.00.LoggingAndDebugging.md","tags":[],"version":"current","frontMatter":{"title":"Logging and Debugging"},"sidebar":"mainSidebar","previous":{"title":"10.10.11. Dual-Purpose Interfaces","permalink":"/docs/topics/10.10.11.DualPurposeInterfaces"},"next":{"title":"10.12. Customizing HTTP Client","permalink":"/docs/topics/10.12.00.CustomizingHttpClient"}}');var s=t(74848),i=t(28453);const l={title:"Logging and Debugging"},a=void 0,r={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The following methods provide logging of requests and responses:"}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#logger(Logger)",children:"logger(Logger)"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#logToConsole()",children:"logToConsole()"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#logRequests(DetailLevel,Level,BiPredicate)",children:"logRequests(DetailLevel,Level,BiPredicate)"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["The following example shows the results of logging all requests that end with ",(0,s.jsx)(n.code,{children:"/bean"}),"."]}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"tip",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// A simple bean we\'re going to round-trip.\nMyBean bean = new MyBean();\n\nbean = RestClient\n    .create()\n    .json5()\n    .logRequests(DetailLevel.FULL, Level.SEVERE, (req,res)->req.getUri().endsWith("/bean"))\n    .logToConsole()\n    .build()\n    .post("http://localhost/bean", bean)\n    .run()\n    .getContent().as(MyBean.class);\n'})})}),"\n",(0,s.jsx)(n.p,{children:"This produces the following console output:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'=== HTTP Call (outgoing) ======================================================\n=== REQUEST ===\nPOST http://localhost/bean\n---request headers---\n    Accept: application/json5\n---request entity---\nContent-Type: application/json5\n---request content---\n{f:1}\n=== RESPONSE ===\nHTTP/1.1 200\n---response headers---\n    Content-Type: application/json\n---response content---\n{f:1}\n=== END =======================================================================",\n'})}),"\n",(0,s.jsxs)(n.p,{children:["It should be noted that if you enable request logging detail level ",(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/DetailLevel.html#FULL",children:"DetailLevel.FULL"}),", response bodies will be cached by default which may introduce\na performance penalty.\nAdditionally, the following method is also provided for enabling debug mode:"]}),"\n",(0,s.jsxs)("tree",{children:[(0,s.jsx)("node-0",{children:(0,s.jsx)("java-class",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html",children:"RestClient.Builder"})})}),(0,s.jsx)("node-1",{children:(0,s.jsx)("java-method",{children:(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#debug()",children:"debug()"})})})]}),"\n",(0,s.jsx)(n.p,{children:"Enabling debug mode has the following effects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient/Builder.html#logToConsole()",children:"RestClient.Builder.logToConsole()"})," is called."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);