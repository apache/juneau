"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1305],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>i});var a=s(96540);const t={},r=a.createContext(t);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(r.Provider,{value:n},e.children)}},86486:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"topics/08.08.00.Guards","title":"Guards","description":"Guards control access to REST classes and methods.","source":"@site/docs-staging/topics/08.08.00.Guards.md","sourceDirName":"topics","slug":"/topics/08.08.00.Guards","permalink":"/docs/topics/08.08.00.Guards","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/08.08.00.Guards.md","tags":[],"version":"current","frontMatter":{"title":"Guards"},"sidebar":"mainSidebar","previous":{"title":"8.7. Handling Form Posts","permalink":"/docs/topics/08.07.00.HandlingFormPosts"},"next":{"title":"8.9. Converters","permalink":"/docs/topics/08.09.00.Converters"}}');var t=s(74848),r=s(28453);const o={title:"Guards"},i=void 0,d={},l=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Guards control access to REST classes and methods."}),"\n",(0,t.jsx)(n.p,{children:"When guards are associated at the class-level, it's equivalent to associating guards on all Java methods on the servlet."}),"\n",(0,t.jsx)(n.p,{children:"If multiple guards are present, ALL guards must pass.\n(Note that this is different in behavior to Matchers which require only one matcher to pass.)"}),"\n",(0,t.jsx)(n.p,{children:"Guards are associated with resource classes and methods via the following:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsx)("java-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"Rest"})})}),(0,t.jsx)("node-1",{children:(0,t.jsx)("java-method-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#guards()",children:"guards"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html",children:"RestOp"})})}),(0,t.jsx)("node-1",{children:(0,t.jsx)("java-method-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html#guards()",children:"guards"})})})]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Define a guard that only lets Billy make a request\npublic BillyGuard extends RestGuard {\n\n    @Override /* RestGuard */\n    public boolean isRequestAllowed(RestRequest req) {\n        return req.getUserPrincipal().getName().equals("Billy");\n    }\n}\n\n// Servlet with class-level guard applied\n@Rest(guards=BillyGuard.class)\npublic MyRestServlet extends BasicRestServlet {\n\n    // Delete method that only Billy is allowed to call.\n    @RestDelete\n    public doDelete(RestRequest req, RestResponse res) throws Exception {...}\n}\n'})})}),"\n",(0,t.jsx)(n.p,{children:"A common use for guards is to only allow admin access to certain Java methods..."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"// DELETE method\n@RestDelete(guards={AdminGuard.class})\npublic void doDelete(RestRequest req, RestResponse res) throws Exception {...}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class AdminGuard extends RestGuard {\n\n    @Override /* RestGuard */\n    public boolean isRequestAllowed(RestRequest req) {\n        return req.getUserPrincipal().isUserInRole("ADMIN");\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["A guard failure results in an ",(0,t.jsx)(n.code,{children:"HTTP 401 Unauthorized"})," response.\nHowever, this can be configured by overriding ",(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/guard/RestGuard.html#guard(RestRequest,RestResponse)",children:"guard()"})," and processing the response yourself."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class AdminGuard extends RestGuard {\n\n    @Override /* RestGuard */\n    public boolean guard(RestRequest req, RestResponse res) throws BasicHttpException {\n        if (! isOkay(req))\n            throw new Forbidden("Access denied!!!");\n        return true;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"A simplified format is available for matching based on the user role on the request using the following:"}),"\n",(0,t.jsxs)("tree",{children:[(0,t.jsx)("node-0",{children:(0,t.jsx)("java-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html",children:"Rest"})})}),(0,t.jsx)("node-1",{children:(0,t.jsx)("java-method-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/Rest.html#roleGuard()",children:"roleGuard"})})}),(0,t.jsx)("node-0",{children:(0,t.jsx)("java-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html",children:"RestOp"})})}),(0,t.jsx)("node-1",{children:(0,t.jsx)("java-method-annotation",{children:(0,t.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/annotation/RestOp.html#roleGuard()",children:"roleGuard"})})})]}),"\n",(0,t.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Rest(\n    path="/foo",\n    roleGuard="ROLE_ADMIN || (ROLE_READ_WRITE && ROLE_SPECIAL)"\n)\npublic class MyResource extends BasicRestServlet {\n    ...\n}\n'})})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);