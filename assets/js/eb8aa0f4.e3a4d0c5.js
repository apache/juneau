"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7142],{28453:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>r});var o=t(96540);const a={},s=o.createContext(a);function i(n){const e=o.useContext(s);return o.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:i(n.components),o.createElement(s.Provider,{value:e},n.children)}},94392:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"topics/02.24.06.JsonAnnotation","title":"@Json Annotation","description":"The @Json annotation is used to override the behavior of JsonSerializer on individual bean classes or properties.","source":"@site/docs/topics/02.24.06.JsonAnnotation.md","sourceDirName":"topics","slug":"/topics/02.24.06.JsonAnnotation","permalink":"/docs/topics/02.24.06.JsonAnnotation","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs/topics/02.24.06.JsonAnnotation.md","tags":[],"version":"current","frontMatter":{"title":"@Json Annotation"},"sidebar":"tutorialSidebar","previous":{"title":"2.24.5. JSON Parsers","permalink":"/docs/topics/02.24.05.JsonParsers"},"next":{"title":"2.25. JSON Schema Support","permalink":"/docs/topics/02.25.00.JsonSchemaDetails"}}');var a=t(74848),s=t(28453);const i={title:"@Json Annotation"},r=void 0,c={},d=[];function l(n){const e={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/json/annotation/Json.html",children:"@Json"})," annotation is used to override the behavior of ",(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/json/JsonSerializer.html",children:"JsonSerializer"})," on individual bean classes or properties."]}),"\n",(0,a.jsx)(e.p,{children:"The annotation can be applied to beans as well as other objects serialized to other types (e.g. strings)."}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-annotation",{children:(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/json/annotation/Json.html",children:"Json"})})}),(0,a.jsx)("node-1",{children:(0,a.jsx)("java-method-annotation",{children:(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/json/annotation/Json.html#wrapperAttr()",children:"wrapperAttr"})})})]}),"\n",(0,a.jsxs)(e.p,{children:["The ",(0,a.jsx)(e.a,{href:"../apidocs/org/apache/juneau/json/annotation/Json.html#wrapperAttr()",children:"@Json(wrapperAttr)"})," annotation can be used\nto wrap beans inside a JSON object with a specified attribute name."]}),"\n",(0,a.jsx)(e.admonition,{title:"Example:",type:"tip",children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Json(wrapperAttr="personBean")\n\npublic class Person {\n    public String name = "John Smith";\n}\n'})})}),"\n",(0,a.jsx)(e.p,{children:"The following shows the JSON representation with and without the annotation present:"}),"\n",(0,a.jsxs)("table",{class:"code-table",children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Without annotation"}),(0,a.jsx)("th",{children:"With annotation"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "name": "John Smith"\n}\n'})})}),(0,a.jsx)("td",{children:(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n  "personBean": {\n    "name": "John Smith"\n  }\n}\n'})})})]})]})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}}}]);