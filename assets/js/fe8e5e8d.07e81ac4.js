"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1067],{14279:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"topics/02.17.00.ReadingContinuousStreams","title":"Reading Continuous Streams","description":"The following parsers can be configured to read continuous streams of objects from the same input stream:","source":"@site/docs/topics/02.17.00.ReadingContinuousStreams.md","sourceDirName":"topics","slug":"/topics/ReadingContinuousStreams","permalink":"/docs/topics/ReadingContinuousStreams","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/02.17.00.ReadingContinuousStreams.md","tags":[],"version":"current","frontMatter":{"title":"Reading Continuous Streams","slug":"ReadingContinuousStreams"},"sidebar":"mainSidebar","previous":{"title":"2.16. Parsing into Generic Models","permalink":"/docs/topics/ParsingIntoGenericModels"},"next":{"title":"2.18. Marshalling URIs","permalink":"/docs/topics/MarshallingUris"}}');var r=n(74848),t=n(28453);const o={title:"Reading Continuous Streams",slug:"ReadingContinuousStreams"},i=void 0,c={},d=[];function l(e){const s={admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"The following parsers can be configured to read continuous streams of objects from the same input stream:"}),"\n",(0,r.jsx)("tree",{children:(0,r.jsxs)("node-0",{children:[(0,r.jsx)("javac-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JsonParser"})})," ",(0,r.jsx)("javac-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/uon/UonParser.html",target:"_blank",children:"UonParser"})})," ",(0,r.jsx)("javac-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/msgpack/MsgPackParser.html",target:"_blank",children:"MsgPackParser"})})]})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.html",target:"_blank",children:"JsonParser"})," and ",(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/uon/UonParser.html",target:"_blank",children:"UonParser"})," classes can read continuous streams by using the ",(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/parser/Parser.Builder.html#unbuffered()",target:"_blank",children:"Parser.Builder.unbuffered()"})," setting.\nThis prevents the parsers from using an internal buffer that would read past the end of the currently parsed POJO."]}),"\n",(0,r.jsx)(s.admonition,{title:"Examples",type:"tip",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-java",children:"// If you're calling parse on the same input multiple times, use a session instead of the parser directly.\nReaderParserSession session = JsonParser.create().unbuffered().build().createSession();\nObject pojo;\nReader reader;\n\nreader = new StringReader(\"{foo:'bar'}{baz:'qux'}\");\npojo = session.parse(reader, JsonMap.class);  // {foo:'bar'}\npojo = session.parse(reader, JsonMap.class);  // {baz:'qux'}\n\nreader = new StringReader(\"[123][456]\");\npojo = session.parse(reader, int[].class);  // [123]\npojo = session.parse(reader, int[].class);  // [456]\n"})})}),"\n",(0,r.jsxs)(s.p,{children:["Note that this isn't perfect in all cases since you can't combine two JSON numbers into a single reader (e.g. ",(0,r.jsx)(s.code,{children:'"123" + "456" = "123456"'}),")."]}),"\n",(0,r.jsxs)(s.admonition,{type:"note",children:[(0,r.jsx)(s.p,{children:"For obvious reasons, do not use the following properties when reading continuous streams:"}),(0,r.jsxs)("tree",{children:[(0,r.jsx)("node-0",{children:(0,r.jsx)("java-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.Builder.html",target:"_blank",children:"JsonParser.Builder"})})}),(0,r.jsx)("node-1",{children:(0,r.jsx)("java-method",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/json/JsonParser.Builder.html#validateEnd()",target:"_blank",children:"validateEnd()"})})}),(0,r.jsx)("node-0",{children:(0,r.jsx)("java-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/uon/UonParser.Builder.html",target:"_blank",children:"UonParser.Builder"})})}),(0,r.jsx)("node-1",{children:(0,r.jsx)("java-method",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/uon/UonParser.Builder.html#validateEnd()",target:"_blank",children:"validateEnd()"})})}),(0,r.jsx)("node-0",{children:(0,r.jsx)("java-abstract-class",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/parser/Parser.Builder.html",target:"_blank",children:"Parser.Builder"})})}),(0,r.jsx)("node-1",{children:(0,r.jsx)("java-method",{children:(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/parser/Parser.Builder.html#autoCloseStreams()",target:"_blank",children:"validateEnd()"})})})]})]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)("a",{href:"/site/apidocs/org/apache/juneau/msgpack/MsgPackParser.html",target:"_blank",children:"MsgPackParser"})," class doesn't use any internal buffering\nto begin with, so it can be used with continuous streams without any special properties."]})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var a=n(96540);const r={},t=a.createContext(r);function o(e){const s=a.useContext(t);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);