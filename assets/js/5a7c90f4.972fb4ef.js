"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1570],{28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>l});var r=a(96540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},84291:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"topics/11.10.06.Query","title":"@Query","description":"The @Query annotation can be applied to arguments of","source":"@site/docs/topics/11.10.06.Query.md","sourceDirName":"topics","slug":"/topics/Query","permalink":"/docs/topics/Query","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/master/juneau-docs/docs/topics/11.10.06.Query.md","tags":[],"version":"current","frontMatter":{"title":"@Query","slug":"Query"},"sidebar":"mainSidebar","previous":{"title":"11.10.5. @FormData","permalink":"/docs/topics/FormData"},"next":{"title":"11.10.7. @Header","permalink":"/docs/topics/Header"}}');var n=a(74848),i=a(28453);const s={title:"@Query",slug:"Query"},l=void 0,o={},c=[];function d(e){const t={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html",target:"_blank",children:"@Query"})," annotation can be applied to arguments of\n",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/remote/RemoteOp.html",target:"_blank",children:"@RemoteOp"}),"-annotated methods to denote that they are query parameters on the request."]}),"\n",(0,n.jsxs)("tree",{children:[(0,n.jsx)("node-0",{children:(0,n.jsx)("java-annotation",{children:(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html",target:"_blank",children:"@Query"})})}),(0,n.jsx)("node-1",{children:(0,n.jsxs)("java-field",{children:[(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html#name()",target:"_blank",children:"name"})," - Query parameter name."]})}),(0,n.jsx)("node-1",{children:(0,n.jsxs)("java-field",{children:[(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html#serializer()",target:"_blank",children:"serializer"})," - Override the part serializer."]})})]}),"\n",(0,n.jsx)(t.admonition,{title:"Example",type:"tip",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'@Remote(path="/myproxy")\npublic interface MyProxy {\n\n    // Explicit names specified for query parameters.\n    @RemoteGet\n    String parameters(\n        @Query("foo") String foo,\n        @Query("bar") MyPojo pojo);\n\n    // Multiple values pulled from a PartList object.\n    // Same as @Query("*").\n    @RemoteGet\n    String partList(@Query PartList partList);\n\n    // Multiple values pulled from a Map.\n    // Same as @Query("*").\n    @RemoteGet\n    String map(@Query Map map);\n\n    // Multiple values pulled from a bean.\n    // Same as @Query("*").\n    @RemoteGet\n    String bean(@Query MyBean myBean);\n\n    // An entire query string as a String.\n    // Same as @Query("*").\n    @RemoteGet\n    String string(@Query String string);\n\n    // An entire query string as a Reader.\n    // Same as @Query("*").\n    @RemoteGet\n    String reader(@Query Reader reader);\n}\n'})})}),"\n",(0,n.jsx)(t.p,{children:"Query arguments can be any of the following types:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Single-part arguments"})," (i.e. those with ",(0,n.jsx)(t.code,{children:'name != "*"'}),"):"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Any serializable POJO - Converted to a string using the ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",target:"_blank",children:"HttpPartSerializer"})," registered with the ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/rest/client/RestClient.html",target:"_blank",children:"RestClient"})," (",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",target:"_blank",children:"OpenApiSerializer"})," by default) or associated via the ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/annotation/Query.html#serializer()",target:"_blank",children:"@Query(serializer)"})," annotation."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Multi-part arguments"})," (i.e. those with ",(0,n.jsx)(t.code,{children:'name == "*"'})," or empty):"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)("a",{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/io/Reader.html",target:"_blank",children:"Reader"})," - Raw contents of ",(0,n.jsx)(t.code,{children:"Reader"})," will be serialized directly as query string."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/http/part/PartList.html",target:"_blank",children:"PartList"})," - Serialized as individual query parameters."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"Map<String,Object>"})," - Converted to key-value pairs. Values serialized using the registered ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",target:"_blank",children:"HttpPartSerializer"})," (",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",target:"_blank",children:"OpenApiSerializer"})," by default)."]}),"\n",(0,n.jsxs)(t.li,{children:["Bean - Converted to key-value pairs. Values serialized using the registered ",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",target:"_blank",children:"HttpPartSerializer"})," (",(0,n.jsx)("a",{href:"/site/apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",target:"_blank",children:"OpenApiSerializer"})," by default)."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CharSequence"})," - Serialized directly as query string."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"See the link below for information about supported data types in OpenAPI serialization."}),"\n",(0,n.jsx)(t.admonition,{title:"See Also",type:"info",children:(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"/docs/topics/OpenApiSerializers",children:"OpenAPI Serializers"})}),"\n"]})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);