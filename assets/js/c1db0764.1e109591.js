"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1308],{20763:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"topics/12.07.00.SystemProperties","title":"System properties","description":"As a convenience, the SystemProperties section of your configuration file can be used to define system properties to","source":"@site/docs-staging/topics/12.07.00.SystemProperties.md","sourceDirName":"topics","slug":"/topics/12.07.00.SystemProperties","permalink":"/docs/topics/12.07.00.SystemProperties","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/12.07.00.SystemProperties.md","tags":[],"version":"current","frontMatter":{"title":"System properties"},"sidebar":"tutorialSidebar","previous":{"title":"12.6. Config","permalink":"/docs/topics/12.06.00.Config"},"next":{"title":"12.8. Var Resolver","permalink":"/docs/topics/12.08.00.VarResolver"}}');var r=o(74848),s=o(28453);const i={title:"System properties"},c=void 0,a={},p=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["As a convenience, the ",(0,r.jsx)(t.code,{children:"SystemProperties"})," section of your configuration file can be used to define system properties to\nset during initialization of your microservice:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ini",children:"#=======================================================================================================================\n# System properties\n#-----------------------------------------------------------------------------------------------------------------------\n# These are arbitrary system properties that are set during startup.\n#=======================================================================================================================\n[SystemProperties]\n\n# Configure Jetty for StdErrLog Logging\n# org.eclipse.jetty.util.log.class = org.eclipse.jetty.util.log.StrErrLog\n\n# Configure Jetty to log using java-util logging\n\norg.eclipse.jetty.util.log.class = org.apache.juneau.microservice.jetty.JettyLogger\n\n# Jetty logging level\n# Possible values:  ALL, DEBUG, INFO, WARN, OFF\n\norg.eclipse.jetty.LEVEL = WARN\n\nderby.stream.error.file = $C{Logging/logDir}/derby-errors.log\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>c});var n=o(96540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);