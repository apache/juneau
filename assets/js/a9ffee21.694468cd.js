"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[7104],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(96540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},30558:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"topics/10.10.06.Query","title":"@Query","description":"The @Query annotation can be applied to arguments of","source":"@site/docs/topics/10.10.06.Query.md","sourceDirName":"topics","slug":"/topics/10.10.06.Query","permalink":"/docs/topics/10.10.06.Query","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs/topics/10.10.06.Query.md","tags":[],"version":"current","frontMatter":{"title":"@Query"},"sidebar":"tutorialSidebar","previous":{"title":"10.10.5. @FormData","permalink":"/docs/topics/10.10.05.FormData"},"next":{"title":"10.10.7. @Header","permalink":"/docs/topics/10.10.07.Header"}}');var a=r(74848),i=r(28453);const s={title:"@Query"},o=void 0,l={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html",children:"@Query"})," annotation can be applied to arguments of\n",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/remote/RemoteOp.html",children:"@RemoteOp"}),"-annotated methods to denote that they are query parameters on the request."]}),"\n",(0,a.jsxs)("tree",{children:[(0,a.jsx)("node-0",{children:(0,a.jsx)("java-annotation",{children:(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html",children:"@Query"})})}),(0,a.jsx)("node-1",{children:(0,a.jsxs)("java-field",{children:[(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html#name()",children:"name"})," - Query parameter name."]})}),(0,a.jsx)("node-1",{children:(0,a.jsxs)("java-field",{children:[(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html#serializer()",children:"serializer"})," - Override the part serializer."]})})]}),"\n",(0,a.jsx)(n.admonition,{title:"Example",type:"tip",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'@Remote(path="/myproxy")\npublic interface MyProxy {\n\n    // Explicit names specified for query parameters.\n    @RemoteGet\n    String parameters(\n        @Query("foo") String foo,\n        @Query("bar") MyPojo pojo);\n\n    // Multiple values pulled from a PartList object.\n    // Same as @Query("*").\n    @RemoteGet\n    String partList(@Query PartList partList);\n\n    // Multiple values pulled from a Map.\n    // Same as @Query("*").\n    @RemoteGet\n    String map(@Query Map map);\n\n    // Multiple values pulled from a bean.\n    // Same as @Query("*").\n    @RemoteGet\n    String bean(@Query MyBean myBean);\n\n    // An entire query string as a String.\n    // Same as @Query("*").\n    @RemoteGet\n    String string(@Query String string);\n\n    // An entire query string as a Reader.\n    // Same as @Query("*").\n    @RemoteGet\n    String reader(@Query Reader reader);\n}\n'})})}),"\n",(0,a.jsx)(n.p,{children:"Query arguments can be any of the following types:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Single-part arguments"})," (i.e. those with ",(0,a.jsx)(n.code,{children:'name != "*"'}),"):"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Any serializable POJO - Converted to a string using the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",children:"HttpPartSerializer"})," registered with the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/rest/client/RestClient.html",children:"RestClient"})," (",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",children:"OpenApiSerializer"})," by default) or associated via the ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/annotation/Query.html#serializer()",children:"@Query(serializer)"})," annotation."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Multi-part arguments"})," (i.e. those with ",(0,a.jsx)(n.code,{children:'name == "*"'})," or empty):"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../apidocs/java/io/Reader.html",children:"Reader"})," - Raw contents of ",(0,a.jsx)(n.code,{children:"Reader"})," will be serialized directly as query string."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/http/part/PartList.html",children:"PartList"})," - Serialized as individual query parameters."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Map<String,Object>"})," - Converted to key-value pairs. Values serialized using the registered ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",children:"HttpPartSerializer"})," (",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",children:"OpenApiSerializer"})," by default)."]}),"\n",(0,a.jsxs)(n.li,{children:["Bean - Converted to key-value pairs. Values serialized using the registered ",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/httppart/HttpPartSerializer.html",children:"HttpPartSerializer"})," (",(0,a.jsx)(n.a,{href:"../apidocs/org/apache/juneau/oapi/OpenApiSerializer.html",children:"OpenApiSerializer"})," by default)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"CharSequence"})," - Serialized directly as query string."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"See the link below for information about supported data types in OpenAPI serialization."}),"\n",(0,a.jsx)(n.admonition,{title:"See Also",type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/topics/TODO",children:"TODO: OpenAPI Serializers"})}),"\n"]})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);