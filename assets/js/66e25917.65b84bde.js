"use strict";(self.webpackChunkjuneau_documentation=self.webpackChunkjuneau_documentation||[]).push([[1628],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var t=i(96540);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}},85646:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"topics/05.02.02.SyntaxRules","title":"Syntax Rules","description":"Each config file contains zero or more sections containing zero or more entries:","source":"@site/docs-staging/topics/05.02.02.SyntaxRules.md","sourceDirName":"topics","slug":"/topics/05.02.02.SyntaxRules","permalink":"/docs/topics/05.02.02.SyntaxRules","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/juneau/tree/main/juneau-docs-poc/juneau-documentation/docs-staging/topics/05.02.02.SyntaxRules.md","tags":[],"version":"current","frontMatter":{"title":"Syntax Rules"},"sidebar":"mainSidebar","previous":{"title":"5.2.1. Config Overview Basics","permalink":"/docs/topics/05.02.01.ConfigOverviewBasics"},"next":{"title":"5.3.1. Reading Entries Basics","permalink":"/docs/topics/05.03.01.ReadingEntriesBasics"}}');var s=i(74848),a=i(28453);const c={title:"Syntax Rules"},o=void 0,r={},l=[];function d(e){const n={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Each config file contains zero or more sections containing zero or more entries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"[Section1]\nkey1 = 1\n\n[Section2]\nkey1 = 2\n"})}),"\n",(0,s.jsx)(n.p,{children:"Unicode escapes can be used in values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"key1 = \\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\n"})}),"\n",(0,s.jsx)(n.p,{children:"Comment lines start with the '#' character and can be placed on lines before sections and entries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"# A comment about this section\n[Section1]\n\n# A comment about this entry\nkey1 = 1\n"})}),"\n",(0,s.jsx)(n.p,{children:"Comments can also be placed on the same line as entries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"key1 = 1  # A comment about this entry\n"})}),"\n",(0,s.jsx)(n.p,{children:"Values containing '#' must be escaped to prevent identification as a comment character:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"valueContainingPound = Value containing \\u0023 character\n"})}),"\n",(0,s.jsx)(n.p,{children:"Likewise, '' should be escaped to prevent confusion with unicode escapes."}),"\n",(0,s.jsx)(n.p,{children:"Values containing newlines can span multiple lines."}),"\n",(0,s.jsx)(n.p,{children:"Subsequent lines start with a tab character."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"multiLineValue =\n    line 1,\n    line 2,\n    line 3\n"})}),"\n",(0,s.jsx)(n.p,{children:'When retrieved, the above translates to "line1,\\nline2,\\nline3".'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Leading and trailing whitespace on values are ignored."}),"\n",(0,s.jsx)(n.li,{children:"Whitespace is not ignored within multi-line values (except for the leading tab character on each line)."}),"\n",(0,s.jsx)(n.li,{children:"Blank lines can be used anywhere in the file."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"# A comment line\n\n# Another comment line\n\n[Section1]\n...\n"})}),"\n",(0,s.jsx)(n.p,{children:"Values located before any sections are considered part of the no-name section, meaning they are accessed simply by key\nand not section/key."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:'# Top of file\n\n# Use config.getString("key1") to retrieve.\nkey1 = val1\n\n# The first section\n[Section1]\n\n# Use config.getString("Section1/key2") to retrieve.\nkey2 = val2\n'})}),"\n",(0,s.jsx)(n.p,{children:"Section and key names must be at least one character long and not consist of any of the following characters:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"/ \\ [ ] = #\n"})}),"\n",(0,s.jsx)(n.p,{children:"Whitespace in section and key names is technically allowed but discouraged."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);